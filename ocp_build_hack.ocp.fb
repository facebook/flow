(**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *)

comp = [ "-thread" ]
link = [ "-thread" ]

if debug then {
  comp += [ "-g" ]
  link += [ "-g" ]
}

comp += [ "-w" "@a-3-4-6-27-29-35-44-48-50-52" ]

requires = [ "unix" "str" "threads" ]

begin library "lz4"
  files = begin fb-glob "src/third-party/lz4" end
end

hh_shared_flags = [
  "-I"; "src/third-party/lz4";
  "-D"; "NO_SQLITE3";
]
begin library "hh-heap"
  sort = true
  files = begin fb-glob "hack/heap"
     excludes = [ "hh_shared.c" ]
  end
  files += [
    "hack/heap/hh_shared.c" (ccopt = hh_shared_flags)
  ]
  requires += [
    "hh-stubs"
    "hh-utils-collections"
    "hh-utils-core"
    "tp-core"
    "lz4"
  ]

  if (os_type = "Unix" && system = "linux") then {
    cclib += [ "-lrt" ]
  }

  comp += [ "-w" "-34" ]
end

begin library "hh-procs"
  sort = true
  files = [
    "hack/procs/bucket.mli"
    "hack/procs/bucket.ml"
    "hack/procs/multiThreadedCall.mli"
    "hack/procs/multiThreadedCall.ml"
    "hack/procs/multiWorker.mli"
    "hack/procs/multiWorker.ml"
    "hack/procs/workerController.mli"
    "hack/procs/workerController.ml"
    "hack/procs/worker.mli"
    "hack/procs/worker.ml"
  ]

  requires += [
    "flow-common-lwt"
    "hh-heap"
    "hh-stubs"
    "hh-utils"
    "tp-core"
  ]
end

begin library "hh-procs-lwt"
  sort = true
  files = [
    "hack/procs/multiWorkerLwt.mli"
    "hack/procs/multiWorkerLwt.ml"
    "hack/procs/workerControllerLwt.mli"
    "hack/procs/workerControllerLwt.ml"
  ]
  requires += [
    "hh-heap"
    "hh-procs"
    "hh-stubs"
    "hh-utils"
    "tp-core"
    "lwt"
    "lwt.unix"
    "lwt_ppx"
  ]
  comp = [
      "-ppx" "%{lwt_ppx_FULL_SRC_DIR}%/ppx.exe --as-ppx"
  ]
  dep = [
      "-ppx" "%{lwt_ppx_FULL_SRC_DIR}%/ppx.exe --as-ppx"
  ]
end

begin library "hh-win32res"
  sort = true
  files = [
    "hack/hhi/hhi_win32res_stubs.c"
    "hack/hhi/hhi_win32res.mli"
    "hack/hhi/hhi_win32res.ml"
  ]
  requires += [
    "bigarray"
    "hh-utils"
  ]
end


begin library "hh-find"
  sort = true
  files = begin fb-glob "hack/find"
  end
  requires += [
    "hh-stubs"
    "tp-core"
    "hh-utils"
  ]
end

begin library "hh-utils-core"
  dirname = "hack/utils"
  sort = true
  files = [
    "build_id.ml"
    "build_mode/prod/build_mode.ml"
    "hh_core.ml"
    "exit_status.ml"
    "get_build_id.c"
    "get_build_id.gen.c"
    "hh_logger.ml"
    "measure.ml"
    "stats.ml"
    "utils.ml"
  ]
  requires += [
    "hh-utils-collections"
    "hh-utils-string"
    "hh-utils-json"
    "tp-core"
  ]
end

begin library "hh-utils"
  dirname = "hack/utils"
  sort = true
  files = [
    "buffered_line_reader.ml"
    "http_lite.ml"
    "file_pos.ml"
    "findUtils.ml"
    "local_id.ml"
    "marshal_tools.mli"
    "marshal_tools.ml"
    "php_escaping.ml"
    "random_id.ml"
    "regexp_utils.ml"
    "trie.ml"
    "wwwroot.ml"
  ]
  requires += [
    "hh-utils-core"
    "hh-utils-relative-path"
    "hh-utils-string"
    "hh-utils-sys"
    "hh-utils-collections"
    "hh-utils-json"
    "tp-core"
  ]
end

begin library "hh-marshal-tools-lwt"
  dirname = "hack/utils"
  sort = true
  files = [
    "marshal_tools_lwt.mli"
    "marshal_tools_lwt.ml"
  ]
  requires += [
    "hh-utils"
    "lwt"
  ]
end

begin library "hh-utils-disk"
  sort = true
  files = begin fb-glob "hack/utils/disk"
  end
  requires += [
    "hh-utils-collections"
    "hh-injector-default"
  ]
end

begin library "hh-utils-relative-path"
  dirname = "hack/utils"
  sort = true
  files = [
    "relative_path.ml"
  ]
  requires += [
    "hh-utils-core"
    "hh-utils-string"
    "hh-utils-sys"
    "hh-heap"
    "hh-utils-collections"
    "tp-core"
  ]
end

begin library "hh-utils-pos"
  dirname = "hack/utils"
  sort = true
  files = [
    "pos.ml"
    "pos_embedded.ml"
    "pos_source"
  ]
  requires += [
    "hh-utils"
    "hh-utils-collections"
    "hh-utils-json"
    "hh-utils-relative-path"
    "tp-core"
  ]
end

begin library "hh-utils-string"
  dirname = "hack/utils"
  sort = true
  files = [
    "string_utils.ml"
  ]
end

begin library "hh-utils-sys"
  dirname = "hack/utils/sys"
  sort = true
  files = [
    "daemon.ml"
    "files.c"
    "fork.ml"
    "getrusage.c"
    "handle.ml"
    "handle_stubs.c"
    "lock.ml"
    "nproc.c"
    "path.ml"
    "pidLog.ml"
    "printSignal.ml"
    "priorities.c"
    "processor_info.c"
    "realpath.c"
    "sys_utils.ml"
    "sysinfo.c"
    "tail.ml"
    "timeout.ml"
    "timer.ml"
    "tmp.ml"
    "tty.ml"
  ]
  requires = [
    "hh-utils-collections"
    "hh-utils-core"
    "hh-utils-disk"
    "hh-utils-string"
    "tp-core"
  ]
  comp += [ "-safe-string" ]
end

begin library "hh-utils-collections"
  sort = true
  files = begin fb-glob "hack/utils/collections"
  end
end

begin library "hh-utils-json"
  dirname = "hack/utils/hh_json"
  sort = true
  files = [
    "hh_json.mli"
    "hh_json.ml"
    "hh_json_helpers.ml"
  ]
  requires += [
    "tp-core"
    "hh-utils-collections"
  ]
end

begin library "hh-utils-filecontent"
  dirname = "hack/utils"
  sort = true
  files = [
    "file_content.mli"
    "file_content.ml"
  ]
  requires += [
    "hh-utils-core"
    "tp-core"
  ]
end

begin library "hh-utils-fileurl"
  dirname = "hack/utils"
  sort = true
  files = [
    "file_url.mli"
    "file_url.ml"
  ]
  requires += [
    "hh-utils-core"
    "hh-utils-string"
  ]
end

begin library "hh-utils-jsonrpc"
  dirname = "hack/utils"
  sort = true
  files = [
    "jsonrpc.mli"
    "jsonrpc.ml"
  ]
  requires += [
  "hh-utils"
  "hh-utils-core"
  "tp-core"
  "hh-utils-collections"
  "hh-utils-json"
  "hh-utils-sys"
  ]
end

begin library "hh-utils-lsp"
  dirname = "hack/utils"
  sort = true
  files = [
    "lsp.ml"
    "lsp_fmt.ml"
    "lsp_helpers.ml"
  ]
  requires += [
    "hh-utils-core"
    "hh-utils-fileurl"
    "hh-utils-jsonrpc"
    "tp-core"
    "hh-utils-collections"
    "hh-utils-json"
  ]
end

begin library "hh-injector-default"
  sort = true
  files = begin fb-glob "hack/injection/default_injector"
    excludes = [ "globalConfig.ml" ]
  end
end

begin library "hh-stubs"
  sort = true
  files = begin fb-glob "hack/stubs"
  end
end

begin library "hh-dfind"
  sort = true
  files = begin fb-glob "hack/dfind"
    excludes = [
      "dfindLibLwt.mli"
      "dfindLibLwt.ml"
    ]
  end
  requires += [
    "hh-fsnotify"
    "hh-stubs"
    "tp-avl"
    "tp-core"
    "hh-utils"
    "hh-utils-collections"
  ]
end

begin library "hh-dfind-lwt"
  sort = true
  dirname = "hack/dfind"
  files = [
    "dfindLibLwt.mli"
    "dfindLibLwt.ml"
  ]
  requires += [
    "hh-dfind"
    "hh-marshal-tools-lwt"
    "hh-utils"
    "lwt"
    "lwt.unix"
  ]
end

begin library "hh-socket"
  sort = true
  files = begin fb-glob "hack/socket"
  end
  requires += [
    "hh-utils"
  ]
end

begin library "hh-fsnotify-linux"
  sort = true
  if not (system = "linux" && os_type = "Unix") then enabled = false
  files = begin fb-glob "hack/third-party/inotify"
  end
  files += begin fb-glob "hack/fsnotify_linux"
  end
  requires += [
    "hh-utils"
    "tp-core"
  ]
  cclib += [ "-lelf" ]
end

begin library "hh-fsnotify-darwin"
  sort = true
  if not (system = "macosx" && os_type = "Unix") then enabled = false
  files = begin fb-glob "hack/fsevents"
  end
  files += begin fb-glob "hack/fsnotify_darwin"
  end
  requires += [
    "hh-utils"
    "tp-core"
    "ROOTPROJECT"
  ]
  cclib = [
    "-framework" "CoreServices"
    "-framework" "CoreFoundation"
  ]
end

begin library "hh-fsnotify-win"
  sort = true
  if not (os_type = "Win32") then enabled = false
  files = begin fb-glob "hack/fsnotify_win"
  end
  requires += [
    "hh-utils"
    "tp-core"
  ]
end

begin library "hh-fsnotify"
  sort = true
  if os_type = "Win32" then {
    requires += [ "hh-fsnotify-win" ]
  } else if system = "linux" then {
    requires += [ "hh-fsnotify-linux" ]
  } else {
    requires += [ "hh-fsnotify-darwin" ]
  }
end

begin library "tp-avl"
  sort = true
  files = begin fb-glob "hack/third-party/avl"
  end
end

begin library "tp-core"
  sort = true
  files = begin fb-glob "hack/third-party/core"
    excludes = [ "core_result.ml" ]
  end
  files += [
    "hack/third-party/core/core_result.ml" (comp += [ "-w" "-41" ])
  ]
end
