(**
 * Copyright (c) 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the "hack" directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 *)

begin library "ROOTPROJECT"
  files = []
end

ccopt = [ "-Ihack/utils" ]

requires = [ "hh-utils" ] (* everything depends on this *)

(* This library is used to extract the archive embedded in the Elf binary.
  The archive contains the standard library for Flow and is extracted
 into /tmp. This way, Flow can be distributed as a simple binary, and
 will install itself the first time it is run. *)
begin library "flow-embedded"
  files = [
    "src/embedded/flowlib_elf.c"
    "src/embedded/flowlib.ml"
  ]
end

(* Flow depends on these Hack libraries *)
requires += [
  "hh-dfind" "hh-globals" "hh-stubs"
  "hh-heap" "hh-procs" "hh-parsing"
  "hh-socket" "hh-search"
]

begin library "flow-parser"
  files = [
    "src/parser/loc.ml"
    "src/parser/spider_monkey_ast.ml"
    "src/parser/parse_error.ml"
    "src/parser/estree_translator.ml"
    "src/parser/lexer_flow.mll"
    "src/parser/parser_env.ml"
    "src/parser/parser_flow.ml"
  ]
end

begin library "flow-common"
  requires += [ "flow-parser" "flow-embedded" "flow-stubs" ]
  files = [
    "src/common/semver.ml"
    "src/common/flowExitStatus.ml"
    "src/common/flowConfig.ml"
    "src/common/modes_js.ml"
    "src/common/files_js.ml"
    "src/common/reason_js.ml"
    "src/common/span.ml"
    "src/common/utils_js.ml"
    "src/common/errors_js.ml"
    "src/common/options.ml"
    "src/common/FlowJSON.ml"
    "src/common/flow_logger.ml"
  ]
end

begin library "flow-dts"
  requires += [ "flow-parser" ]
  files = [
    "src/dts/dts_ast.ml"
    "src/dts/lexer_dts.mll"
    "src/dts/parser_dts.ml"
    "src/dts/printer_dts.ml"
  ]
end

begin library "flow-parsing"
  requires += [ "flow-common" ]
  files = [
    "src/parsing/docblock.ml"
    "src/parsing/parsing_service_js.ml"
  ]
end

begin library "flow-stubs"
  files = [
    "src/stubs/flowEventLogger.ml"
  ]
end

begin library "flow-server-base"
  requires += [ "flow-common" ]
  files = [
    "src/server/serverEnv.ml"
  ]
end

begin library "flow-typing"
  requires += [ "flow-server-base" "flow-parsing" "flow-common" ]
  files = [
    "src/typing/key.ml"
    "src/typing/changeset.ml"
    "src/typing/type.ml"
    "src/typing/constraint_js.ml"
    "src/typing/context.ml"
    "src/typing/type_printer.ml"
    "src/typing/type_visitor.ml"
    "src/typing/scope.ml"
    "src/typing/trace.ml"
    "src/typing/debug.ml"
    "src/typing/flow_js.ml"
    "src/typing/env_js.ml"
    "src/typing/type_inference_hooks_js.ml"
    "src/typing/autocomplete_js.ml"
    "src/typing/module_js.ml"
    "src/typing/type_inference_js.ml"
    "src/typing/comments_js.ml"
    "src/typing/getDef_js.ml"
    "src/typing/init_js.ml"
    "src/typing/sort_js.ml"
    "src/typing/types_js.ml"
  ]
end

begin library "flow-server"
  requires += [ "flow-typing" "flow-stubs" ]
  files = [
    "src/server/serverUtils.ml"
    "src/server/serverProt.ml"
    "src/server/searchService_js.ml"
    "src/server/serverWorker.ml"
    "src/server/serverEnvBuild.ml"
    "src/server/serverPeriodical.ml"
    "src/server/serverFunctors.ml"
    "src/server/autocompleteService_js.ml"
    "src/server/server.ml"
  ]
end

begin library "flow-commands"
  requires += [ "flow-server" "flow-dts" "hh-find" ]
  files = [
    "src/commands/commandExceptions.ml"
    "src/commands/commandSpec.ml"
    "src/commands/commandConnectSimple.ml"
    "src/commands/commandConnect.ml"
    "src/commands/commandUtils.ml"
    "src/commands/astCommand.ml"
    "src/commands/autocompleteCommand.ml"
    "src/commands/checkContentsCommand.ml"
    "src/commands/commandInfo.ml"
    "src/commands/configCommands.ml"
    "src/commands/convertCommand.ml"
    "src/commands/dumpTypesCommand.ml"
    "src/commands/findModuleCommand.ml"
    "src/commands/getDefCommand.ml"
    "src/commands/getImportersCommand.ml"
    "src/commands/getImportsCommand.ml"
    "src/commands/portCommand.ml"
    "src/commands/searchCommand.ml"
    "src/commands/serverCommands.ml"
    "src/commands/shellCompleteCommand.ml"
    "src/commands/statusCommands.ml"
    "src/commands/stopCommand.ml"
    "src/commands/suggestCommand.ml"
    "src/commands/typeAtPosCommand.ml"
    "src/commands/versionCommand.ml"
    "src/commands/coverageCommand.ml"
  ]
end

begin program "flow"
  requires += [ "flow-commands" ]
  files = [
    "src/flow.ml"
  ]
end
