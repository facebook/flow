{"raw_type":"{\n  \"reason\":{\n    \"pos\":{\n      \"source\":null,\n      \"type\":null,\n      \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n      \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n    },\n    \"desc\":\"object\"\n  },\n  \"kind\":\"AnnotT\",\n  \"assume\":{\n    \"reason\":{\n      \"pos\":{\n        \"source\":null,\n        \"type\":null,\n        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n      },\n      \"desc\":\"object\"\n    },\n    \"kind\":\"ObjT\",\n    \"type\":{\n      \"flags\":{\"frozen\":false,\"sealed\":false,\"exact\":true},\n      \"propTypes\":[\n        {\n          \"name\":\"_BinaryExpression\",\n          \"prop\":{\n            \"field\":{\n              \"reason\":{\n                \"pos\":{\n                  \"source\":null,\n                  \"type\":null,\n                  \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                  \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                },\n                \"desc\":\"undefined\"\n              },\n              \"kind\":\"VoidT\"\n            },\n            \"polarity\":\"Neutral\"\n          }\n        },\n        {\n          \"name\":\"end\",\n          \"prop\":{\n            \"field\":{\n              \"reason\":{\n                \"pos\":{\n                  \"source\":null,\n                  \"type\":null,\n                  \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                  \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                },\n                \"desc\":\"number\"\n              },\n              \"kind\":\"NumT\"\n            },\n            \"polarity\":\"Neutral\"\n          }\n        },\n        {\n          \"name\":\"innerComments\",\n          \"prop\":{\n            \"field\":{\n              \"reason\":{\n                \"pos\":{\n                  \"source\":null,\n                  \"type\":null,\n                  \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                  \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                },\n                \"desc\":\"?array type\"\n              },\n              \"kind\":\"MaybeT\",\n              \"type\":{\n                \"reason\":{\n                  \"pos\":{\n                    \"source\":null,\n                    \"type\":null,\n                    \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                    \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                  },\n                  \"desc\":\"array\"\n                },\n                \"kind\":\"ArrT\",\n                \"kind\":\"Array\",\n                \"elemType\":{\n                  \"reason\":{\n                    \"pos\":{\n                      \"source\":null,\n                      \"type\":null,\n                      \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                      \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                    },\n                    \"desc\":\"union\"\n                  },\n                  \"kind\":\"AnnotT\",\n                  \"assume\":{\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"union\"\n                    },\n                    \"kind\":\"UnionT\",\n                    \"types\":[null,null]\n                  }\n                },\n                \"tupleType\":null\n              }\n            },\n            \"polarity\":\"Neutral\"\n          }\n        },\n        {\n          \"name\":\"leadingComments\",\n          \"prop\":{\n            \"field\":{\n              \"reason\":{\n                \"pos\":{\n                  \"source\":null,\n                  \"type\":null,\n                  \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                  \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                },\n                \"desc\":\"?array type\"\n              },\n              \"kind\":\"MaybeT\",\n              \"type\":{\n                \"reason\":{\n                  \"pos\":{\n                    \"source\":null,\n                    \"type\":null,\n                    \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                    \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                  },\n                  \"desc\":\"array\"\n                },\n                \"kind\":\"ArrT\",\n                \"kind\":\"Array\",\n                \"elemType\":{\n                  \"reason\":{\n                    \"pos\":{\n                      \"source\":null,\n                      \"type\":null,\n                      \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                      \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                    },\n                    \"desc\":\"union\"\n                  },\n                  \"kind\":\"AnnotT\",\n                  \"assume\":{\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"union\"\n                    },\n                    \"kind\":\"UnionT\",\n                    \"types\":[null,null]\n                  }\n                },\n                \"tupleType\":null\n              }\n            },\n            \"polarity\":\"Neutral\"\n          }\n        },\n        {\n          \"name\":\"left\",\n          \"prop\":{\n            \"field\":{\n              \"reason\":{\n                \"pos\":{\n                  \"source\":null,\n                  \"type\":null,\n                  \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                  \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                },\n                \"desc\":\"union\"\n              },\n              \"kind\":\"AnnotT\",\n              \"assume\":{\n                \"reason\":{\n                  \"pos\":{\n                    \"source\":null,\n                    \"type\":null,\n                    \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                    \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                  },\n                  \"desc\":\"union\"\n                },\n                \"kind\":\"UnionT\",\n                \"types\":[\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  {\n                    \"reason\":{\n                      \"pos\":{\n                        \"source\":null,\n                        \"type\":null,\n                        \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n                        \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n                      },\n                      \"desc\":\"object\"\n                    },\n                    \"kind\":\"ObjT\",\n                    \"type\":{\"flags\":null,\"propTypes\":null,\"prototype\":null}\n                  },\n                  null,\n                  null,\n                  null,\n                  null,\n                  null,\n                  null,\n                  null,\n                  null,\n                  null,\n                  null,\n                  null,\n                  null,\n                  null\n                ]\n              }\n            },\n            \"polarity\":\"Neutral\"\n          }\n        },\n        {\"name\":\"loc\",\"prop\":{\"field\":null,\"polarity\":\"Neutral\"}},\n        {\"name\":\"operator\",\"prop\":{\"field\":null,\"polarity\":\"Neutral\"}},\n        {\"name\":\"right\",\"prop\":{\"field\":null,\"polarity\":\"Neutral\"}},\n        {\"name\":\"start\",\"prop\":{\"field\":null,\"polarity\":\"Neutral\"}},\n        {\"name\":\"trailingComments\",\"prop\":{\"field\":null,\"polarity\":\"Neutral\"}},\n        {\"name\":\"type\",\"prop\":{\"field\":null,\"polarity\":\"Neutral\"}}\n      ],\n      \"prototype\":{\n        \"reason\":{\n          \"pos\":{\n            \"source\":null,\n            \"type\":null,\n            \"start\":{\"line\":0,\"column\":1,\"offset\":0},\n            \"end\":{\"line\":0,\"column\":0,\"offset\":0}\n          },\n          \"desc\":\"any\"\n        },\n        \"kind\":\"AnyT\"\n      }\n    }\n  }\n}","type":"{_BinaryExpression: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, left: {_AwaitExpression: void, all: boolean, argument: ?any, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'AwaitExpression'} | {_BinaryExpression: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, left: any, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, operator: '!=' | '!==' | '%' | '&' | '*' | '+' | '-' | '..' | '/' | '<' | '<<' | '<=' | '==' | '===' | '>' | '>=' | '>>' | '>>>' | '^' | 'in' | 'instanceof' | '|', right: any, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'BinaryExpression'} | {_BindExpression: void, callee: {_ArrowFunctionExpression: void, async: boolean, body: any, defaults: Array<?any>, end: number, expression: boolean, generator: boolean, id: ?{_Identifier: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, name: string, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'Identifier', typeAnnotation: ?{_TypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'TypeAnnotation', typeAnnotation: {_BooleanLiteralTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, raw: string, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'BooleanLiteralTypeAnnotation', value: boolean} | {_BooleanTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'BooleanTypeAnnotation'} | {_FunctionTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, params: Array<{_FunctionTypeParam: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, name: any, optional: boolean, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'FunctionTypeParam', typeAnnotation: any}>, rest: ?{_FunctionTypeParam: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, name: any, optional: boolean, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'FunctionTypeParam', typeAnnotation: any}, returnType: any, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'FunctionTypeAnnotation', typeParameters: ?{_TypeParameterDeclaration: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, params: Array<any>, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'TypeParameterDeclaration'}} | {_GenericTypeAnnotation: void, end: number, id: any, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'GenericTypeAnnotation', typeParameters: ?{_TypeParameterInstantiation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, params: Array<any>, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'TypeParameterInstantiation'}} | {_IntersectionTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'IntersectionTypeAnnotation', types: Array<any>} | {_MixedTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'MixedTypeAnnotation'} | {_NullableTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'NullableTypeAnnotation', typeAnnotation: any} | {_NumberLiteralTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, raw: string, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'NumberLiteralTypeAnnotation', value: number} | {_NumberTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'NumberTypeAnnotation'} | {_StringLiteralTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, raw: string, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'StringLiteralTypeAnnotation', value: string} | {_StringTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'StringTypeAnnotation'} | {_TupleTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'TupleTypeAnnotation', types: Array<any>} | {_ObjectTypeAnnotation: void, callProperties: Array<{_ObjectTypeCallProperty: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, static: boolean, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'ObjectTypeCallProperty', value: {_FunctionTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, params: Array<{_FunctionTypeParam: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, name: any, optional: boolean, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'FunctionTypeParam', typeAnnotation: any}>, rest: ?{_FunctionTypeParam: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, name: any, optional: boolean, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'FunctionTypeParam', typeAnnotation: any}, returnType: any, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'FunctionTypeAnnotation', typeParameters: ?{_TypeParameterDeclaration: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, params: Array<any>, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'TypeParameterDeclaration'}}}>, end: number, indexers: Array<{_ObjectTypeIndexer: void, end: number, id: any, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, key: any, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'ObjectTypeIndexer', value: any}>, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, properties: Array<{_ObjectTypeProperty: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, key: any, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, optional: boolean, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'ObjectTypeProperty', value: any}>, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'ObjectTypeAnnotation'} | {_UnionTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'UnionTypeAnnotation', types: Array<any>} | {_VoidTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'VoidTypeAnnotation'} | {_ArrayTypeAnnotation: void, elementType: any, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'ArrayTypeAnnotation'} | {_AnyTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'AnyTypeAnnotation'}}}, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, params: Array<{_Identifier: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, name: string, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'Identifier', typeAnnotation: ?{_TypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'TypeAnnotation', typeAnnotation: {_BooleanLiteralTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, raw: string, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'BooleanLiteralTypeAnnotation', value: boolean} | {_BooleanTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'BooleanTypeAnnotation'} | {_FunctionTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, params: Array<{_FunctionTypeParam: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, name: any, optional: boolean, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'FunctionTypeParam', typeAnnotation: any}>, rest: ?{_FunctionTypeParam: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, name: any, optional: boolean, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'FunctionTypeParam', typeAnnotation: any}, returnType: any, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'FunctionTypeAnnotation', typeParameters: ?{_TypeParameterDeclaration: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, params: Array<any>, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'TypeParameterDeclaration'}} | {_GenericTypeAnnotation: void, end: number, id: any, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'GenericTypeAnnotation', typeParameters: ?{_TypeParameterInstantiation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, params: Array<any>, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'TypeParameterInstantiation'}} | {_IntersectionTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'IntersectionTypeAnnotation', types: Array<any>} | {_MixedTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'MixedTypeAnnotation'} | {_NullableTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, type: 'NullableTypeAnnotation', typeAnnotation: any} | {_NumberLiteralTypeAnnotation: void, end: number, innerComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, leadingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentLine', value: string}>, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, raw: string, start: number, trailingComments: ?Array<{_CommentBlock: void, end: number, loc: {end: {column: number, line: number}, start: {column: number, line: number}}, start: number, type: 'CommentBlock', value: string} | {_CommentLine: void, end: number, loc: ..., start: ..., type: ..., value: ...}>, type: ..., value: ...} | ...}} | ...>, rest: ..., returnType: ..., start: ..., trailingComments: ..., type: ..., typeParameters: ...} | ..., end: ..., innerComments: ..., leadingComments: ..., loc: ..., object: ..., start: ..., trailingComments: ..., type: ...} | ..., loc: ..., operator: ..., right: ..., start: ..., trailingComments: ..., type: ...}","reasons":[],"loc":{"source":"printBinaryExpression.js","type":"SourceFile","start":{"line":17,"column":15,"offset":353},"end":{"line":17,"column":18,"offset":357}},"path":"printBinaryExpression.js","line":17,"endline":17,"start":15,"end":18}
