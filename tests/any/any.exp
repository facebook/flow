Error ------------------------------------------------------------------------------------------------------ any.js:8:16

Cannot assign `bar(...)` to `y` because mixed [1] is incompatible with string [2]. [incompatible-type]

   any.js:8:16
   8| var y:string = bar(0);
                     ^^^^^^

References:
   any.js:4:21
   4| function bar(x:any):mixed { return x; }
                          ^^^^^ [1]
   any.js:8:7
   8| var y:string = bar(0);
            ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- ex_special_cases.js:41:21

Cannot assign `array[receiver.name]` to `test1` because number [1] is incompatible with string [2]. [incompatible-type]

   ex_special_cases.js:41:21
   41| var test1: string = array[receiver.name]; // if result of receiver.getprop is any, this will fail, but no error if it's empty.
                           ^^^^^^^^^^^^^^^^^^^^

References:
   ex_special_cases.js:40:26
   40| declare var array: Array<number>;
                                ^^^^^^ [1]
   ex_special_cases.js:41:12
   41| var test1: string = array[receiver.name]; // if result of receiver.getprop is any, this will fail, but no error if it's empty.
                  ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- ex_special_cases.js:42:21

Cannot assign `array[receiver.name()]` to `test2` because number [1] is incompatible with string [2].
[incompatible-type]

   ex_special_cases.js:42:21
   42| var test2: string = array[receiver.name()] // likewise
                           ^^^^^^^^^^^^^^^^^^^^^^

References:
   ex_special_cases.js:40:26
   40| declare var array: Array<number>;
                                ^^^^^^ [1]
   ex_special_cases.js:42:12
   42| var test2: string = array[receiver.name()] // likewise
                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- flowfixme.js:14:27

Cannot resolve name `nnumber`. [cannot-resolve-name]

   14| function baz(x:$FlowFixMe<nnumber>): $FlowFixMe<number> { return x; }
                                 ^^^^^^^


Error ----------------------------------------------------------------------------------------------- flowfixme.js:17:16

Cannot assign `bar(...)` to `y` because mixed [1] is incompatible with string [2]. [incompatible-type]

   flowfixme.js:17:16
   17| var y:string = bar(0);
                      ^^^^^^

References:
   flowfixme.js:10:28
   10| function bar(x:$FlowFixMe):mixed { return x; }
                                  ^^^^^ [1]
   flowfixme.js:17:7
   17| var y:string = bar(0);
             ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- flowissue.js:14:27

Cannot resolve name `nnumber`. [cannot-resolve-name]

   14| function baz(x:$FlowIssue<nnumber>): $FlowIssue<number> { return x; }
                                 ^^^^^^^


Error ----------------------------------------------------------------------------------------------- flowissue.js:17:16

Cannot assign `bar(...)` to `y` because mixed [1] is incompatible with string [2]. [incompatible-type]

   flowissue.js:17:16
   17| var y:string = bar(0);
                      ^^^^^^

References:
   flowissue.js:10:28
   10| function bar(x:$FlowIssue):mixed { return x; }
                                  ^^^^^ [1]
   flowissue.js:17:7
   17| var y:string = bar(0);
             ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- propagate.js:10:10

Cannot return `c.bar(...)` because number [1] is incompatible with string [2]. [incompatible-return]

   propagate.js:10:10
   10|   return c.bar(0, y); // should be able to select first case and error
                ^^^^^^^^^^^

References:
   propagate.js:4:32
    4|   bar(n1: number, n2: number): number;
                                      ^^^^^^ [1]
   propagate.js:8:29
    8| function foo(c: C, x: any): string {
                                   ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ propagate.js:16:6

Cannot cast `x` to boolean because mixed [1] is incompatible with boolean [2]. [incompatible-cast]

   propagate.js:16:6
   16|     (x: boolean);
            ^

References:
   propagate.js:14:18
   14| function bar1(x: mixed) {
                        ^^^^^ [1]
   propagate.js:16:9
   16|     (x: boolean);
               ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ propagate.js:23:6

Cannot cast `x` to boolean because mixed [1] is incompatible with boolean [2]. [incompatible-cast]

   propagate.js:23:6
   23|     (x: boolean);
            ^

References:
   propagate.js:21:18
   21| function bar2(x: mixed) {
                        ^^^^^ [1]
   propagate.js:23:9
   23|     (x: boolean);
               ^^^^^^^ [2]



Found 10 errors
