Error -------------------------------------------------------------------------------------------------- boolean.js:8:33

Cannot call `veryOptimistic` with `false` bound to `isThisAwesome` because boolean [1] is incompatible with boolean
literal `true` [2].

   boolean.js:8:33
   8| var y: boolean = veryOptimistic(false); // error
                                      ^^^^^ [1]

References:
   boolean.js:3:40
   3| function veryOptimistic(isThisAwesome: true): boolean {
                                             ^^^^ [2]


Error ------------------------------------------------------------------------------------------------- boolean.js:15:34

Cannot call `veryPessimistic` with `false` bound to `isThisAwesome` because boolean [1] is incompatible with boolean
literal `true` [2].

   boolean.js:15:34
   15| var y: boolean = veryPessimistic(false); // error
                                        ^^^^^ [1]

References:
   boolean.js:10:41
   10| function veryPessimistic(isThisAwesome: true): boolean {
                                               ^^^^ [2]


Error ------------------------------------------------------------------------------------------------- boolean.js:21:12

Cannot return `x` because boolean literal `true` [1] is incompatible with boolean literal `false` [2].

   boolean.js:21:12
   21|     return x;
                  ^

References:
   boolean.js:19:17
   19| function bar(x: MyOwnBooleanLOL): false {
                       ^^^^^^^^^^^^^^^ [1]
   boolean.js:19:35
   19| function bar(x: MyOwnBooleanLOL): false {
                                         ^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- boolean.js:23:12

Cannot return `!x` because boolean literal `true` [1] is incompatible with boolean literal `false` [2].

   boolean.js:23:12
   23|     return !x;
                  ^^ [1]

References:
   boolean.js:19:35
   19| function bar(x: MyOwnBooleanLOL): false {
                                         ^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- boolean.js:29:5

Cannot call `bar` with `1` bound to `x` because number [1] is incompatible with enum [2].

   boolean.js:29:5
   29| bar(1); // error
           ^ [1]

References:
   boolean.js:19:17
   19| function bar(x: MyOwnBooleanLOL): false {
                       ^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- boolean.js:41:33

Cannot assign `false` to `foo_check` because boolean literal `false` [1] is incompatible with boolean literal
`true` [2].

   boolean.js:41:33
   41|   const foo_check: typeof foo = false;
                                       ^^^^^ [1]

References:
   boolean.js:41:20
   41|   const foo_check: typeof foo = false;
                          ^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- boolean.js:48:4

Cannot cast `mutable_foo.foo` to boolean because number [1] is incompatible with boolean [2].

   boolean.js:48:4
   48|   (mutable_foo.foo: boolean); // error
          ^^^^^^^^^^^^^^^

References:
   boolean.js:45:25
   45|       mutable_foo.foo = 1;
                               ^ [1]
   boolean.js:48:21
   48|   (mutable_foo.foo: boolean); // error
                           ^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- number.js:8:12

Cannot call `highlander` with `2` bound to `howMany` because number [1] is incompatible with number literal `1` [2].

   number.js:8:12
   8| highlander(2); // error
                 ^ [1]

References:
   number.js:3:30
   3| function highlander(howMany: 1): number {
                                   ^ [2]


Error --------------------------------------------------------------------------------------------------- number.js:19:5

Cannot call `bar` with `3` bound to `num` because number [1] is incompatible with enum [2].

   number.js:19:5
   19| bar(3); // error
           ^ [1]

References:
   number.js:13:19
   13| function bar(num: Foo): number {
                         ^^^ [2]


Error -------------------------------------------------------------------------------------------------- number.js:27:33

Cannot assign `2` to `foo_check` because number literal `2` [1] is incompatible with number literal `1` [2].

   number.js:27:33
   27|   const foo_check: typeof foo = 2;
                                       ^ [1]

References:
   number.js:27:20
   27|   const foo_check: typeof foo = 2;
                          ^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- number.js:34:4

Cannot cast `mutable_foo.foo` to number because string [1] is incompatible with number [2].

   number.js:34:4
   34|   (mutable_foo.foo: number); // error
          ^^^^^^^^^^^^^^^

References:
   number.js:31:25
   31|       mutable_foo.foo = 'str';
                               ^^^^^ [1]
   number.js:34:21
   34|   (mutable_foo.foo: number); // error
                           ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- string.js:11:33

Cannot assign `'bar'` to `foo_check` because string literal `bar` [1] is incompatible with string literal `str` [2].

   string.js:11:33
   11|   const foo_check: typeof foo = 'bar';
                                       ^^^^^ [1]

References:
   string.js:11:20
   11|   const foo_check: typeof foo = 'bar';
                          ^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- string.js:18:4

Cannot cast `mutable_foo.foo` to string because number [1] is incompatible with string [2].

   string.js:18:4
   18|   (mutable_foo.foo: string); // error
          ^^^^^^^^^^^^^^^

References:
   string.js:15:25
   15|       mutable_foo.foo = 2;
                               ^ [1]
   string.js:18:21
   18|   (mutable_foo.foo: string); // error
                           ^^^^^^ [2]



Found 13 errors
