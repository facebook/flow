Error ------------------------------------------------------------------------------------------------------ Fun.js:8:14

Missing type annotation for `fold`.

   8| function fix(fold) {
                   ^^^^


Error ----------------------------------------------------------------------------------------------------- Fun.js:19:21

Missing type annotation for `n`.

   19|     return function(n) {
                           ^


Error ----------------------------------------------------------------------------------------------------- Fun.js:20:15

Cannot call `eq` with `n` bound to `x` because string [1] is incompatible with number [2].

   Fun.js:20:15
   20|       if (eq (n, 1)) { return 1; }
                     ^

References:
   Fun.js:28:11
   28| factorial("...");
                 ^^^^^ [1]
   Fun.js:4:15
    4| function eq(x:number,y:number) { return true };
                     ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- Fun.js:21:35

Cannot call `sub` with `n` bound to `x` because string [1] is incompatible with number [2].

   Fun.js:21:35
   21|       return mul (factorial (sub (n, 1)), n);
                                         ^

References:
   Fun.js:28:11
   28| factorial("...");
                 ^^^^^ [1]
   Fun.js:5:16
    5| function sub(x:number,y:number) { return 0; }
                      ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- Fun.js:21:43

Cannot call `mul` with `n` bound to `y` because string [1] is incompatible with number [2].

   Fun.js:21:43
   21|       return mul (factorial (sub (n, 1)), n);
                                                 ^

References:
   Fun.js:28:11
   28| factorial("...");
                 ^^^^^ [1]
   Fun.js:6:25
    6| function mul(x:number,y:number) { return 0; }
                               ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- Ycombinator.js:4:12

Missing type annotation for `f`.

   4| function Y(f) {
                 ^


Error --------------------------------------------------------------------------------------------- Ycombinator.js:10:44

Cannot return `f(...)` because string [1] is incompatible with number [2].

   Ycombinator.js:10:44
   10|   function fix_f(x:number):number { return f(x); }
                                                  ^^^^

References:
   Ycombinator.js:14:28
   14|   function fix_f(x:string):string { return f(x); }
                                  ^^^^^^ [1]
   Ycombinator.js:10:28
   10|   function fix_f(x:number):number { return f(x); }
                                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- Ycombinator.js:10:46

Cannot call `f` with `x` bound to `x` because number [1] is incompatible with string [2].

   Ycombinator.js:10:46
   10|   function fix_f(x:number):number { return f(x); }
                                                    ^

References:
   Ycombinator.js:10:20
   10|   function fix_f(x:number):number { return f(x); }
                          ^^^^^^ [1]
   Ycombinator.js:14:20
   14|   function fix_f(x:string):string { return f(x); }
                          ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- Ycombinator.js:14:44

Cannot return `f(...)` because number [1] is incompatible with string [2].

   Ycombinator.js:14:44
   14|   function fix_f(x:string):string { return f(x); }
                                                  ^^^^

References:
   Ycombinator.js:10:28
   10|   function fix_f(x:number):number { return f(x); }
                                  ^^^^^^ [1]
   Ycombinator.js:14:28
   14|   function fix_f(x:string):string { return f(x); }
                                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- Ycombinator.js:14:46

Cannot call `f` with `x` bound to `x` because string [1] is incompatible with number [2].

   Ycombinator.js:14:46
   14|   function fix_f(x:string):string { return f(x); }
                                                    ^

References:
   Ycombinator.js:14:20
   14|   function fix_f(x:string):string { return f(x); }
                          ^^^^^^ [1]
   Ycombinator.js:10:20
   10|   function fix_f(x:number):number { return f(x); }
                          ^^^^^^ [2]



Found 10 errors
