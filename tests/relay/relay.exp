Error: Profile.js:19
 19:     (this.props.foo: empty); // Error: number ~> empty
          ^^^^^^^^^^^^^^ number. This type is incompatible with
 19:     (this.props.foo: empty); // Error: number ~> empty
                          ^^^^^ empty

Error: Profile.js:20
 20:     (this.props.user.id: empty); // Error: string ~> empty
          ^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
 20:     (this.props.user.id: empty); // Error: string ~> empty
                              ^^^^^ empty

Error: Profile.js:21
 21:     (this.props.user.name: empty); // Error: string ~> empty
          ^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
 21:     (this.props.user.name: empty); // Error: string ~> empty
                                ^^^^^ empty

Error: Profile.js:22
 22:     (this.props.user.pic.id: empty); // Error: string ~> empty
          ^^^^^^^^^^^^^^^^^^^^^^ property `id`. Property cannot be accessed on any member of intersection type
 22:     (this.props.user.pic.id: empty); // Error: string ~> empty
          ^^^^^^^^^^^^^^^^^^^ intersection
  Member 1:
   17:     +pic: ProfilePic_imageRef & {|
                 ^^^^^^^^^^^^^^^^^^^ ProfilePic_imageRef. See: Profile.graphql.js:17
  Error:
   22:     (this.props.user.pic.id: empty); // Error: string ~> empty
                                ^^ property `id`. Property cannot be accessed on
   17:     +pic: ProfilePic_imageRef & {|
                 ^^^^^^^^^^^^^^^^^^^ ProfilePic_imageRef. See: Profile.graphql.js:17
  Member 2:
                                       v-
   17:     +pic: ProfilePic_imageRef & {|
   18:       +id: string,
   19:     |},
           -^ object type. See: Profile.graphql.js:17
  Error:
   22:     (this.props.user.pic.id: empty); // Error: string ~> empty
            ^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
   22:     (this.props.user.pic.id: empty); // Error: string ~> empty
                                    ^^^^^ empty

Error: Profile.js:23
 23:     <ProfilePic image={{url: 'https://facebook.com'}} />; // Error: object ~> opaque type
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `ProfilePic`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `image` is incompatible:
     23:     <ProfilePic image={{url: 'https://facebook.com'}} />; // Error: object ~> opaque type
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object literal. This type is incompatible with
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ProfilePic_imageRef. See: Relay.js:46

Error: ProfilePic.js:17
 17:     (this.props.image.url: empty); // Error: string ~> empty
          ^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
 17:     (this.props.image.url: empty); // Error: string ~> empty
                                ^^^^^ empty

Error: main.js:15
 15: <Profile user={userRef} />; // Error: Missing foo
     ^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `Profile`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `foo` is incompatible:
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in. See: Relay.js:46
     15: <Profile user={userRef} />; // Error: Missing foo
         ^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `Profile`

Error: main.js:16
 16: <Profile foo={42} />; // Error: Missing user
     ^^^^^^^^^^^^^^^^^^^^ props of React element `Profile`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `user` is incompatible:
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `user`. Property not found in. See: Relay.js:46
     16: <Profile foo={42} />; // Error: Missing user
         ^^^^^^^^^^^^^^^^^^^^ props of React element `Profile`

Error: main.js:17
 17: <Profile user={userRef} foo="bar" />; // Error: string ~> number
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `Profile`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `foo` is incompatible:
     17: <Profile user={userRef} foo="bar" />; // Error: string ~> number
                                     ^^^^^ string. This type is incompatible with
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. See: Relay.js:46

Error: main.js:18
 18: <Profile />; // Error: Missing user and foo
     ^^^^^^^^^^^ props of React element `Profile`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `foo` is incompatible:
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in. See: Relay.js:46
     18: <Profile />; // Error: Missing user and foo
         ^^^^^^^^^^^ props of React element `Profile`

Error: main.js:18
 18: <Profile />; // Error: Missing user and foo
     ^^^^^^^^^^^ props of React element `Profile`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `user` is incompatible:
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `user`. Property not found in. See: Relay.js:46
     18: <Profile />; // Error: Missing user and foo
         ^^^^^^^^^^^ props of React element `Profile`

Error: main.js:19
 19: <Profile user={user} foo={42} />; // Error: You must pass in a ref
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `Profile`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `user` is incompatible:
     19: <Profile user={user} foo={42} />; // Error: You must pass in a ref
                        ^^^^ object type. This type is incompatible with
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Profile_userRef. See: Relay.js:46

Error: main.js:20
 20: <Profile user={user} foo="bar" />; // Error: You must pass in a ref and string ~> number
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `Profile`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `foo` is incompatible:
     20: <Profile user={user} foo="bar" />; // Error: You must pass in a ref and string ~> number
                                  ^^^^^ string. This type is incompatible with
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. See: Relay.js:46

Error: main.js:20
 20: <Profile user={user} foo="bar" />; // Error: You must pass in a ref and string ~> number
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `Profile`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `user` is incompatible:
     20: <Profile user={user} foo="bar" />; // Error: You must pass in a ref and string ~> number
                        ^^^^ object type. This type is incompatible with
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Profile_userRef. See: Relay.js:46

Error: main.js:21
 21: <Profile user={(null: mixed)} foo={(null: mixed)} />; // Error: mixed ~> ref and mixed ~> number
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `Profile`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `foo` is incompatible:
     21: <Profile user={(null: mixed)} foo={(null: mixed)} />; // Error: mixed ~> ref and mixed ~> number
                                                   ^^^^^ mixed. This type is incompatible with
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. See: Relay.js:46

Error: main.js:21
 21: <Profile user={(null: mixed)} foo={(null: mixed)} />; // Error: mixed ~> ref and mixed ~> number
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `Profile`. This type is incompatible with
 46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See: Relay.js:46
  Property `user` is incompatible:
     21: <Profile user={(null: mixed)} foo={(null: mixed)} />; // Error: mixed ~> ref and mixed ~> number
                               ^^^^^ mixed. This type is incompatible with
     46: ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Profile_userRef. See: Relay.js:46

Error: more.js:92
 92: <SingularTest onClick={cb} string="x" user={null} nullableUser={null} />;
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `SingularTest`. This type is incompatible with
 35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
  Property `user` is incompatible:
     92: <SingularTest onClick={cb} string="x" user={null} nullableUser={null} />;
                                                     ^^^^ null. This type is incompatible with
                                               v-------
     21: type $RelayProps<Props, RelayPropT> = $ObjMap<
     22:   $Diff<Props, {relay: RelayPropT | void}>,
     23:   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
    ...:
     30: >;
         ^ object type

Error: more.js:95
 95: <SingularTest onClick={cb} string="x" nullableUser={null} />;
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `SingularTest`. This type is incompatible with
 35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
  Property `user` is incompatible:
     35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `user`. Property not found in
     95: <SingularTest onClick={cb} string="x" nullableUser={null} />;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `SingularTest`

Error: more.js:98
 98: <SingularTest onClick={cb} string="x" user={nonUserRef} nullableUser={null} />;
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ React element `SingularTest`
 86:   +__fragments: FragmentReference<{thing: true}>,
                                       ^^^^^^^^^^^^^ object type. This type is incompatible with
 23:   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
              ^^^^^^^^^^^^^^ FragmentTypeof

Error: more.js:98
 98: <SingularTest onClick={cb} string="x" user={nonUserRef} nullableUser={null} />;
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `SingularTest`. This type is incompatible with
 35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
  Property `user` is incompatible:
     98: <SingularTest onClick={cb} string="x" user={nonUserRef} nullableUser={null} />;
                                                     ^^^^^^^^^^ object type. This type is incompatible with
                                               v-------
     21: type $RelayProps<Props, RelayPropT> = $ObjMap<
     22:   $Diff<Props, {relay: RelayPropT | void}>,
     23:   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
    ...:
     30: >;
         ^ object type
      Property `__fragments` is incompatible:
         86:   +__fragments: FragmentReference<{thing: true}>,
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ FragmentReference. Has some incompatible type argument with
         23:   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
                                                                                    ^^^^^^^^^^^^^^^^^^^^ FragmentReference
          Type argument `T` is incompatible:
             43:   +__typeof: RelayModernTypedFlowtest_user$reference,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ FragmentTypeof. This type is incompatible with
             86:   +__fragments: FragmentReference<{thing: true}>,
                                                   ^^^^^^^^^^^^^ object type

Error: more.js:121
     v------------
121: <SingularTest
122:   onClick={cb}
123:   string="x"
...:
127: />;
     -^ props of React element `SingularTest`. This type is incompatible with
 35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
  Property `optionalUser` is incompatible:
    126:   optionalUser={null}
                         ^^^^ null. This type is incompatible with
                                               v-------
     21: type $RelayProps<Props, RelayPropT> = $ObjMap<
     22:   $Diff<Props, {relay: RelayPropT | void}>,
     23:   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
    ...:
     30: >;
         ^ object type

Error: more.js:144
144: <PluralTest users={null} nullableUsers={null} />;
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `PluralTest`. This type is incompatible with
 35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
  Property `users` is incompatible:
    144: <PluralTest users={null} nullableUsers={null} />;
                            ^^^^ null. This type is incompatible with
                                               v-------
     21: type $RelayProps<Props, RelayPropT> = $ObjMap<
     22:   $Diff<Props, {relay: RelayPropT | void}>,
     23:   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
    ...:
     30: >;
         ^ read-only array type

Error: more.js:147
147: <PluralTest nullableUsers={null} />;
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `PluralTest`. This type is incompatible with
 35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
  Property `users` is incompatible:
     35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `users`. Property not found in
    147: <PluralTest nullableUsers={null} />;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `PluralTest`

Error: more.js:150
150: <PluralTest users={[nonUserRef]} nullableUsers={null} />;
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ React element `PluralTest`
 86:   +__fragments: FragmentReference<{thing: true}>,
                                       ^^^^^^^^^^^^^ object type. This type is incompatible with
 25:   & (<T: FragmentTypeof, Data: {+__typeof: T}>($ReadOnlyArray<Data>) => $ReadOnlyArray<{+__fragments: FragmentReference<T>}>)
              ^^^^^^^^^^^^^^ FragmentTypeof

Error: more.js:150
150: <PluralTest users={[nonUserRef]} nullableUsers={null} />;
                         ^^^^^^^^^^ object type. This type is incompatible with
 25:   & (<T: FragmentTypeof, Data: {+__typeof: T}>($ReadOnlyArray<Data>) => $ReadOnlyArray<{+__fragments: FragmentReference<T>}>)
                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
  Property `__fragments` is incompatible:
     86:   +__fragments: FragmentReference<{thing: true}>,
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ FragmentReference. Has some incompatible type argument with
     25:   & (<T: FragmentTypeof, Data: {+__typeof: T}>($ReadOnlyArray<Data>) => $ReadOnlyArray<{+__fragments: FragmentReference<T>}>)
                                                                                                               ^^^^^^^^^^^^^^^^^^^^ FragmentReference
      Type argument `T` is incompatible:
         49:   +__typeof: RelayModernTypedFlowtest_users$reference,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ FragmentTypeof. This type is incompatible with
         86:   +__fragments: FragmentReference<{thing: true}>,
                                               ^^^^^^^^^^^^^ object type

Error: more.js:174
174: <PluralTest users={usersRef} nullableUsers={null} optionalUsers={null} />;
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `PluralTest`. This type is incompatible with
 35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
  Property `optionalUsers` is incompatible:
    174: <PluralTest users={usersRef} nullableUsers={null} optionalUsers={null} />;
                                                                          ^^^^ null. This type is incompatible with
                                               v-------
     21: type $RelayProps<Props, RelayPropT> = $ObjMap<
     22:   $Diff<Props, {relay: RelayPropT | void}>,
     23:   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
    ...:
     30: >;
         ^ read-only array type

Error: more.js:177
177: <SingularTest onClick={'cb'} string="x" user={aUserRef} nullableUser={null} />;
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `SingularTest`. This type is incompatible with
 35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
  Property `onClick` is incompatible:
    177: <SingularTest onClick={'cb'} string="x" user={aUserRef} nullableUser={null} />;
                                ^^^^ string. This type is incompatible with
                                               v-------
     21: type $RelayProps<Props, RelayPropT> = $ObjMap<
     22:   $Diff<Props, {relay: RelayPropT | void}>,
     23:   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
    ...:
     30: >;
         ^ function type

Error: more.js:180
180: <SingularTest onClick={cb} string={1} user={aUserRef} nullableUser={null} />;
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `SingularTest`. This type is incompatible with
 35: ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
  Property `string` is incompatible:
    180: <SingularTest onClick={cb} string={1} user={aUserRef} nullableUser={null} />;
                                            ^ number. This type is incompatible with
                                               v-------
     21: type $RelayProps<Props, RelayPropT> = $ObjMap<
     22:   $Diff<Props, {relay: RelayPropT | void}>,
     23:   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
    ...:
     30: >;
         ^ string


Found 28 errors
