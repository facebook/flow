Error -------------------------------------------------------------------------------------------------- Profile.js:19:6

Cannot cast `this.props.foo` to empty because number [1] is incompatible with empty [2].

   Profile.js:19:6
   19|     (this.props.foo: empty); // Error: number ~> empty
            ^^^^^^^^^^^^^^

References:
   Profile.js:14:8
   14|   foo: number,
              ^^^^^^ [1]
   Profile.js:19:22
   19|     (this.props.foo: empty); // Error: number ~> empty
                            ^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- Profile.js:20:6

Cannot cast `this.props.user.id` to empty because string [1] is incompatible with empty [2].

   Profile.js:20:6
   20|     (this.props.user.id: empty); // Error: string ~> empty
            ^^^^^^^^^^^^^^^^^^

References:
   Profile.graphql.js:15:10
   15|     +id: string,
                ^^^^^^ [1]
   Profile.js:20:26
   20|     (this.props.user.id: empty); // Error: string ~> empty
                                ^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- Profile.js:21:6

Cannot cast `this.props.user.name` to empty because string [1] is incompatible with empty [2].

   Profile.js:21:6
   21|     (this.props.user.name: empty); // Error: string ~> empty
            ^^^^^^^^^^^^^^^^^^^^

References:
   Profile.graphql.js:16:12
   16|     +name: string,
                  ^^^^^^ [1]
   Profile.js:21:28
   21|     (this.props.user.name: empty); // Error: string ~> empty
                                  ^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- Profile.js:22:6

Cannot cast `this.props.user.pic.id` to empty because string [1] is incompatible with empty [2].

   Profile.js:22:6
   22|     (this.props.user.pic.id: empty); // Error: string ~> empty
            ^^^^^^^^^^^^^^^^^^^^^^

References:
   Profile.graphql.js:18:12
   18|       +id: string,
                  ^^^^^^ [1]
   Profile.js:22:30
   22|     (this.props.user.pic.id: empty); // Error: string ~> empty
                                    ^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- Profile.js:23:5

Cannot create `ProfilePic` element because object literal [1] is incompatible with `ProfilePic_imageRef` [2] in property
`image`.

   Profile.js:23:5
   23|     <ProfilePic image={{url: 'https://facebook.com'}} />; // Error: object ~> opaque type
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   Profile.js:23:24
   23|     <ProfilePic image={{url: 'https://facebook.com'}} />; // Error: object ~> opaque type
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   ProfilePic.graphql.js:11:3
   11|   ProfilePic_imageRef,
         ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- ProfilePic.js:17:6

Cannot cast `this.props.image.url` to empty because string [1] is incompatible with empty [2].

   ProfilePic.js:17:6
   17|     (this.props.image.url: empty); // Error: string ~> empty
            ^^^^^^^^^^^^^^^^^^^^

References:
   ProfilePic.graphql.js:14:11
   14|     +url: string,
                 ^^^^^^ [1]
   ProfilePic.js:17:28
   17|     (this.props.image.url: empty); // Error: string ~> empty
                                  ^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- main.js:15:1

Cannot create `Profile` element because property `foo` is missing in props [1] but exists in object type [2].

   main.js:15:1
   15| <Profile user={userRef} />; // Error: Missing foo
       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   Relay.js:46:24
   46| ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- main.js:16:1

Cannot create `Profile` element because property `user` is missing in props [1] but exists in object type [2].

   main.js:16:1
   16| <Profile foo={42} />; // Error: Missing user
       ^^^^^^^^^^^^^^^^^^^^ [1]

References:
   Relay.js:46:24
   46| ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- main.js:17:1

Cannot create `Profile` element because string [1] is incompatible with number [2] in property `foo`.

   main.js:17:1
   17| <Profile user={userRef} foo="bar" />; // Error: string ~> number
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   main.js:17:29
   17| <Profile user={userRef} foo="bar" />; // Error: string ~> number
                                   ^^^^^ [1]
   Profile.js:14:8
   14|   foo: number,
              ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- main.js:18:1

Cannot create `Profile` element because:
 - property `foo` is missing in props [1] but exists in object type [2].
 - property `user` is missing in props [1] but exists in object type [2].

   main.js:18:1
   18| <Profile />; // Error: Missing user and foo
       ^^^^^^^^^^^ [1]

References:
   Relay.js:46:24
   46| ): React.ComponentType<$ObjMap<Props, GetPropFragmentRef>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- main.js:19:1

Cannot create `Profile` element because object type [1] is incompatible with `Profile_userRef` [2] in property `user`.

   main.js:19:1
   19| <Profile user={user} foo={42} />; // Error: You must pass in a ref
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   main.js:11:19
   11| declare var user: Profile_user;
                         ^^^^^^^^^^^^ [1]
   Profile.graphql.js:12:3
   12|   Profile_userRef,
         ^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- main.js:20:1

Cannot create `Profile` element because:
 - object type [1] is incompatible with `Profile_userRef` [2] in property `user`.
 - string [3] is incompatible with number [4] in property `foo`.

   main.js:20:1
   20| <Profile user={user} foo="bar" />; // Error: You must pass in a ref and string ~> number
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   main.js:11:19
   11| declare var user: Profile_user;
                         ^^^^^^^^^^^^ [1]
   Profile.graphql.js:12:3
   12|   Profile_userRef,
         ^^^^^^^^^^^^^^^ [2]
   main.js:20:26
   20| <Profile user={user} foo="bar" />; // Error: You must pass in a ref and string ~> number
                                ^^^^^ [3]
   Profile.js:14:8
   14|   foo: number,
              ^^^^^^ [4]


Error ----------------------------------------------------------------------------------------------------- main.js:21:1

Cannot create `Profile` element because:
 - mixed [1] is incompatible with `Profile_userRef` [2] in property `user`.
 - mixed [3] is incompatible with number [4] in property `foo`.

   main.js:21:1
   21| <Profile user={(null: mixed)} foo={(null: mixed)} />; // Error: mixed ~> ref and mixed ~> number
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   main.js:21:23
   21| <Profile user={(null: mixed)} foo={(null: mixed)} />; // Error: mixed ~> ref and mixed ~> number
                             ^^^^^ [1]
   Profile.graphql.js:12:3
   12|   Profile_userRef,
         ^^^^^^^^^^^^^^^ [2]
   main.js:21:43
   21| <Profile user={(null: mixed)} foo={(null: mixed)} />; // Error: mixed ~> ref and mixed ~> number
                                                 ^^^^^ [3]
   Profile.js:14:8
   14|   foo: number,
              ^^^^^^ [4]


Error ----------------------------------------------------------------------------------------------------- more.js:92:1

Cannot create `SingularTest` element because null [1] is incompatible with object type [2] in property `user`.

   more.js:92:1
   92| <SingularTest onClick={cb} string="x" user={null} nullableUser={null} />;
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   more.js:92:45
   92| <SingularTest onClick={cb} string="x" user={null} nullableUser={null} />;
                                                   ^^^^ [1]
   more.js:23:57
   23|   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- more.js:95:1

Cannot create `SingularTest` element because property `user` is missing in props [1] but exists in object type [2].

   more.js:95:1
   95| <SingularTest onClick={cb} string="x" nullableUser={null} />;
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   more.js:35:24
   35| ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- more.js:98:1

Cannot create `SingularTest` element because:
 - `FragmentTypeof` [1] is incompatible with object type [2] in type argument `T` [3] of property `user.__fragments`.
 - object type [2] is incompatible with `FragmentTypeof` [4] in type argument `T` [3] of property `user.__fragments`.

   more.js:98:1
   98| <SingularTest onClick={cb} string="x" user={nonUserRef} nullableUser={null} />;
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   more.js:23:10
   23|   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
                ^^^^^^^^^^^^^^ [1]
   more.js:86:35
   86|   +__fragments: FragmentReference<{thing: true}>,
                                         ^^^^^^^^^^^^^ [2]
   more.js:11:39
   11| declare opaque type FragmentReference<T: FragmentTypeof>;
                                             ^ [3]
   more.js:43:14
   43|   +__typeof: RelayModernTypedFlowtest_user$reference,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error ---------------------------------------------------------------------------------------------------- more.js:121:1

Cannot create `SingularTest` element because null [1] is incompatible with object type [2] in property `optionalUser`.

   more.js:121:1
        v------------
   121| <SingularTest
   122|   onClick={cb}
   123|   string="x"
   124|   user={aUserRef}
   125|   nullableUser={null}
   126|   optionalUser={null}
   127| />;
        -^

References:
   more.js:126:17
   126|   optionalUser={null}
                        ^^^^ [1]
   more.js:23:57
    23|   & (<T: FragmentTypeof, Data: {+__typeof: T}>(Data) => {+__fragments: FragmentReference<T>})
                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- more.js:144:1

Cannot create `PluralTest` element because null [1] is incompatible with read-only array type [2] in property `users`.

   more.js:144:1
   144| <PluralTest users={null} nullableUsers={null} />;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   more.js:144:20
   144| <PluralTest users={null} nullableUsers={null} />;
                           ^^^^ [1]
   more.js:25:73
    25|   & (<T: FragmentTypeof, Data: {+__typeof: T}>($ReadOnlyArray<Data>) => $ReadOnlyArray<{+__fragments: FragmentReference<T>}>)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- more.js:147:1

Cannot create `PluralTest` element because property `users` is missing in props [1] but exists in object type [2].

   more.js:147:1
   147| <PluralTest nullableUsers={null} />;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   more.js:35:24
    35| ): React.ComponentType<$RelayProps<Props, RelayProp>>;
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- more.js:150:1

Cannot create `PluralTest` element because:
 - `FragmentTypeof` [1] is incompatible with object type [2] in type argument `T` [3] of property `__fragments` of array
   element of property `users`.
 - object type [2] is incompatible with `FragmentTypeof` [4] in type argument `T` [3] of property `__fragments` of array
   element of property `users`.

   more.js:150:1
   150| <PluralTest users={[nonUserRef]} nullableUsers={null} />;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   more.js:25:10
    25|   & (<T: FragmentTypeof, Data: {+__typeof: T}>($ReadOnlyArray<Data>) => $ReadOnlyArray<{+__fragments: FragmentReference<T>}>)
                 ^^^^^^^^^^^^^^ [1]
   more.js:86:35
    86|   +__fragments: FragmentReference<{thing: true}>,
                                          ^^^^^^^^^^^^^ [2]
   more.js:11:39
    11| declare opaque type FragmentReference<T: FragmentTypeof>;
                                              ^ [3]
   more.js:49:14
    49|   +__typeof: RelayModernTypedFlowtest_users$reference,
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error ---------------------------------------------------------------------------------------------------- more.js:174:1

Cannot create `PluralTest` element because null [1] is incompatible with read-only array type [2] in property
`optionalUsers`.

   more.js:174:1
   174| <PluralTest users={usersRef} nullableUsers={null} optionalUsers={null} />;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   more.js:174:66
   174| <PluralTest users={usersRef} nullableUsers={null} optionalUsers={null} />;
                                                                         ^^^^ [1]
   more.js:25:73
    25|   & (<T: FragmentTypeof, Data: {+__typeof: T}>($ReadOnlyArray<Data>) => $ReadOnlyArray<{+__fragments: FragmentReference<T>}>)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- more.js:177:1

Cannot create `SingularTest` element because string [1] is incompatible with function type [2] in property `onClick`.

   more.js:177:1
   177| <SingularTest onClick={'cb'} string="x" user={aUserRef} nullableUser={null} />;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   more.js:177:24
   177| <SingularTest onClick={'cb'} string="x" user={aUserRef} nullableUser={null} />;
                               ^^^^ [1]
   more.js:59:12
    59|   onClick: () => void,
                   ^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- more.js:180:1

Cannot create `SingularTest` element because number [1] is incompatible with string [2] in property `string`.

   more.js:180:1
   180| <SingularTest onClick={cb} string={1} user={aUserRef} nullableUser={null} />;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   more.js:180:36
   180| <SingularTest onClick={cb} string={1} user={aUserRef} nullableUser={null} />;
                                           ^ [1]
   more.js:58:11
    58|   string: string,
                  ^^^^^^ [2]



Found 28 errors
