Error ----------------------------------------------------------------------------------------------------- annot.js:6:1

Cannot call `f` because: [incompatible-call]
 - Either null [1] is incompatible with string [2].
 - Or null [1] is incompatible with number [3].

   annot.js:6:1
   6| f(x); // error should point to `x` here, not at type alias
      ^

References:
   annot.js:4:10
   4| type T = null;
               ^^^^ [1]
   annot.js:1:23
   1| declare function f(x: string): void;
                            ^^^^^^ [2]
   annot.js:2:23
   2| declare function f(x: number): void;
                            ^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------- overload.js:7:18

Cannot assign `"".match(...)[0]` to `x1` because string [1] is incompatible with number [2]. [incompatible-type]

   overload.js:7:18
      7| var x1: number = "".match(0)[0];
                          ^^^^^^^^^^^^^^

References:
   <BUILTINS>/core.js:1058:33
   1058| type RegExp$matchResult = Array<string> & {
                                         ^^^^^^ [1]
   overload.js:7:9
      7| var x1: number = "".match(0)[0];
                 ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- overload.js:7:30

Cannot get `"".match(...)[0]` because null [1] does not have properties. [incompatible-use]

   overload.js:7:30
      7| var x1: number = "".match(0)[0];
                                      ^

References:
   <BUILTINS>/core.js:1138:58
   1138|     match(regexp: string | RegExp): RegExp$matchResult | null;
                                                                  ^^^^ [1]


Error ------------------------------------------------------------------------------------------------- overload.js:7:27

Cannot call `"".match` with `0` bound to `regexp` because number [1] is incompatible with string [2].
[incompatible-call]

   overload.js:7:27
      7| var x1: number = "".match(0)[0];
                                   ^ [1]

References:
   <BUILTINS>/core.js:1138:19
   1138|     match(regexp: string | RegExp): RegExp$matchResult | null;
                           ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- overload.js:8:18

Cannot assign `"".match(...)[0]` to `x2` because string [1] is incompatible with number [2]. [incompatible-type]

   overload.js:8:18
      8| var x2: number = "".match(/pattern/)[0];
                          ^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/core.js:1058:33
   1058| type RegExp$matchResult = Array<string> & {
                                         ^^^^^^ [1]
   overload.js:8:9
      8| var x2: number = "".match(/pattern/)[0];
                 ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- overload.js:8:38

Cannot get `"".match(...)[0]` because null [1] does not have properties. [incompatible-use]

   overload.js:8:38
      8| var x2: number = "".match(/pattern/)[0];
                                              ^

References:
   <BUILTINS>/core.js:1138:58
   1138|     match(regexp: string | RegExp): RegExp$matchResult | null;
                                                                  ^^^^ [1]


Error ------------------------------------------------------------------------------------------------ overload.js:10:18

Cannot assign `"".split(...)[0]` to `x4` because string [1] is incompatible with number [2]. [incompatible-type]

   overload.js:10:18
     10| var x4: number = "".split(/pattern/)[0];
                          ^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/core.js:1205:63
   1205|     split(separator?: string | RegExp, limit?: number): Array<string>;
                                                                       ^^^^^^ [1]
   overload.js:10:9
     10| var x4: number = "".split(/pattern/)[0];
                 ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- overload.js:24:3

Cannot call `a.foo` because: [incompatible-call]
 - Either boolean [1] is incompatible with number [2].
 - Or boolean [1] is incompatible with string [3].

   overload.js:24:3
   24| a.foo(true); // error, function cannot be called on intersection type
         ^^^

References:
   overload.js:24:7
   24| a.foo(true); // error, function cannot be called on intersection type
             ^^^^ [1]
   overload.js:13:11
   13|     foo(x:number): number;
                 ^^^^^^ [2]
   overload.js:14:11
   14|     foo(x:string): string;
                 ^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------- overload.js:28:3

Cannot call `a.bar` because: [incompatible-call]
 - Either boolean [1] is incompatible with number [2] in property `a`.
 - Or boolean [1] is incompatible with string [3] in property `a`.

   overload.js:28:3
   28| a.bar({ a: true }); // error, function cannot be called on intersection type
         ^^^

References:
   overload.js:28:12
   28| a.bar({ a: true }); // error, function cannot be called on intersection type
                  ^^^^ [1]
   overload.js:16:17
   16|     bar(x: { a: number }): number;
                       ^^^^^^ [2]
   overload.js:17:17
   17|     bar(x: { a: string }): string;
                       ^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------- overload.js:32:3

Cannot call `a.bar` because: [incompatible-call]
 - Either boolean [1] is incompatible with number [2] in property `a`.
 - Or boolean [1] is incompatible with string [3] in property `a`.

   overload.js:32:3
   32| a.bar(x); // error with nested intersection info (outer for bar, inner for x)
         ^^^

References:
   overload.js:30:21
   30| declare var x: { a: boolean; } & { b: string };
                           ^^^^^^^ [1]
   overload.js:16:17
   16|     bar(x: { a: number }): number;
                       ^^^^^^ [2]
   overload.js:17:17
   17|     bar(x: { a: string }): string;
                       ^^^^^^ [3]


Error ----------------------------------------------------------------------------------------------------- test2.js:7:2

Cannot cast `foo.bar(...)` to number because string [1] is incompatible with number [2]. [incompatible-cast]

   test2.js:7:2
   7| (foo.bar('hmmm'): number); // error
       ^^^^^^^^^^^^^^^

References:
   test2.js:3:19
   3|   bar(x: string): string;
                        ^^^^^^ [1]
   test2.js:7:19
   7| (foo.bar('hmmm'): number); // error
                        ^^^^^^ [2]



Found 11 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
