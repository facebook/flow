
Initial status...with type errors:
Error ------------------------------------------------------------------------------------------------------ bar.js:6:10

Cannot return `foo.y` because string [1] is incompatible with number [2]. [incompatible-return]

   bar.js:6:10
    6|   return foo.y;
                ^^^^^

References:
   foo.js:10:6
   10|   y: string;
            ^^^^^^ [1]
   bar.js:5:25
    5| function err(foo: foo): number {
                               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ foo.js:6:10

Cannot return `bar.x` because string [1] is incompatible with number [2]. [incompatible-return]

   foo.js:6:10
    6|   return bar.x;
                ^^^^^

References:
   bar.js:10:6
   10|   x: string;
            ^^^^^^ [1]
   foo.js:5:25
    5| function err(bar: bar): number {
                               ^^^^^^ [2]



Found 2 errors

Delete foo.js (cannot resolve module!):
Error ------------------------------------------------------------------------------------------------------ bar.js:3:24

Cannot resolve module `./foo`. [cannot-resolve-module]

   3| import type {foo} from './foo';
                             ^^^^^^^



Found 1 error

Restore foo.js (same as initial status):
Error ------------------------------------------------------------------------------------------------------ bar.js:6:10

Cannot return `foo.y` because string [1] is incompatible with number [2]. [incompatible-return]

   bar.js:6:10
    6|   return foo.y;
                ^^^^^

References:
   foo.js:10:6
   10|   y: string;
            ^^^^^^ [1]
   bar.js:5:25
    5| function err(foo: foo): number {
                               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ foo.js:6:10

Cannot return `bar.x` because string [1] is incompatible with number [2]. [incompatible-return]

   foo.js:6:10
    6|   return bar.x;
                ^^^^^

References:
   bar.js:10:6
   10|   x: string;
            ^^^^^^ [1]
   foo.js:5:25
    5| function err(bar: bar): number {
                               ^^^^^^ [2]



Found 2 errors

Remove @flow in foo.js:
Error ------------------------------------------------------------------------------------------------------ bar.js:3:14

Importing a type from an untyped module makes it `any` and is not safe! Did you mean to add `// @flow` to the top of
`./foo`? [untyped-type-import]

   3| import type {foo} from './foo';
                   ^^^


Error ------------------------------------------------------------------------------------------------------ bar.js:5:19

Cannot use `foo` as a type because it is an `any`-typed value. Type `foo` properly, so it is no longer `any`-typed, to
use it as an annotation. [value-as-type]

   5| function err(foo: foo): number {
                        ^^^


Error ------------------------------------------------------------------------------------------------------ bar.js:11:8

Cannot use `foo` as a type because it is an `any`-typed value. Type `foo` properly, so it is no longer `any`-typed, to
use it as an annotation. [value-as-type]

   11|   foo: foo
              ^^^



Found 3 errors

Restore foo.js (same as initial status):
Error ------------------------------------------------------------------------------------------------------ bar.js:6:10

Cannot return `foo.y` because string [1] is incompatible with number [2]. [incompatible-return]

   bar.js:6:10
    6|   return foo.y;
                ^^^^^

References:
   foo.js:10:6
   10|   y: string;
            ^^^^^^ [1]
   bar.js:5:25
    5| function err(foo: foo): number {
                               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ foo.js:6:10

Cannot return `bar.x` because string [1] is incompatible with number [2]. [incompatible-return]

   foo.js:6:10
    6|   return bar.x;
                ^^^^^

References:
   bar.js:10:6
   10|   x: string;
            ^^^^^^ [1]
   foo.js:5:25
    5| function err(bar: bar): number {
                               ^^^^^^ [2]



Found 2 errors

Introduce parse error in foo.js (unexpected identifier!):
Error ------------------------------------------------------------------------------------------------------ bar.js:3:14

Importing a type from an untyped module makes it `any` and is not safe! Did you mean to add `// @flow` to the top of
`./foo`? [untyped-type-import]

   3| import type {foo} from './foo';
                   ^^^


Error ------------------------------------------------------------------------------------------------------ bar.js:5:19

Cannot use `foo` as a type because it is an `any`-typed value. Type `foo` properly, so it is no longer `any`-typed, to
use it as an annotation. [value-as-type]

   5| function err(foo: foo): number {
                        ^^^


Error ------------------------------------------------------------------------------------------------------ bar.js:11:8

Cannot use `foo` as a type because it is an `any`-typed value. Type `foo` properly, so it is no longer `any`-typed, to
use it as an annotation. [value-as-type]

   11|   foo: foo
              ^^^


Error ----------------------------------------------------------------------------------------------------- foo.js:14:11

Unexpected identifier, expected the token `;`

   14| let parse error
                 ^^^^^



Found 4 errors

Restore foo.js (same as initial status):
Error ------------------------------------------------------------------------------------------------------ bar.js:6:10

Cannot return `foo.y` because string [1] is incompatible with number [2]. [incompatible-return]

   bar.js:6:10
    6|   return foo.y;
                ^^^^^

References:
   foo.js:10:6
   10|   y: string;
            ^^^^^^ [1]
   bar.js:5:25
    5| function err(foo: foo): number {
                               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ foo.js:6:10

Cannot return `bar.x` because string [1] is incompatible with number [2]. [incompatible-return]

   foo.js:6:10
    6|   return bar.x;
                ^^^^^

References:
   bar.js:10:6
   10|   x: string;
            ^^^^^^ [1]
   foo.js:5:25
    5| function err(bar: bar): number {
                               ^^^^^^ [2]



Found 2 errors

Done!
