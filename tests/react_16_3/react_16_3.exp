Error ---------------------------------------------------------------------------------------------- forwardRef.js:11:13

Cannot create `FancyButton` element because property `foo` is missing in props [1] but exists in `Props` [2].
[prop-missing]

   forwardRef.js:11:13
   11| const _a = <FancyButton />; // Error, missing foo
                   ^^^^^^^^^^^

References:
   forwardRef.js:11:12
   11| const _a = <FancyButton />; // Error, missing foo
                  ^^^^^^^^^^^^^^^ [1]
   forwardRef.js:5:38
    5| const FancyButton = React.forwardRef<Props, ButtonInstance>((props, ref) => (
                                            ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- forwardRef.js:13:13

Cannot create `FancyButton` element because property `bar` is extra in props [1] but missing in `Props` [2]. Exact
objects do not accept extra props. [prop-missing]

   forwardRef.js:13:13
   13| const _c = <FancyButton foo={3} bar={3} />; // Error bar, not allowed in exact props
                   ^^^^^^^^^^^

References:
   forwardRef.js:13:12
   13| const _c = <FancyButton foo={3} bar={3} />; // Error bar, not allowed in exact props
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   forwardRef.js:5:38
    5| const FancyButton = React.forwardRef<Props, ButtonInstance>((props, ref) => (
                                            ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- forwardRef.js:19:38

Cannot create `FancyButton` element because in property `ref`: [incompatible-type]
 - Either `ButtonInstance` [1] is incompatible with `DivInstance` [2] in property `current`.
 - Or `React.RefObject` [3] is incompatible with function type [4]. Non-callable objects are not compatible with
   functions.

   forwardRef.js:19:38
    19| const _e = <FancyButton foo={3} ref={badRef} />; // Incorrect ref type
                                             ^^^^^^

References:
   forwardRef.js:5:45
     5| const FancyButton = React.forwardRef<Props, ButtonInstance>((props, ref) => (
                                                    ^^^^^^^^^^^^^^ [1]
   forwardRef.js:18:32
    18| const badRef = React.createRef<DivInstance>();
                                       ^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:587:8
   587|     ): React$RefObject<T | null>;
               ^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:103:6
   103|   | ((T | null) => mixed)
             ^^^^^^^^^^^^^^^^^^^ [4]


Error ---------------------------------------------------------------------------------------------- forwardRef.js:22:38

Cannot create `FancyButton` element because in property `ref`: [incompatible-type]
 - Either `ButtonInstance` [1] is incompatible with `DivInstance` [2] in the first parameter.
 - Or `ButtonInstance` [1] is incompatible with null [3] in the first parameter.

   forwardRef.js:22:38
   22| const _g = <FancyButton foo={3} ref={(x: null | DivInstance) => x} />; // Incorrect ref type
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   forwardRef.js:5:45
    5| const FancyButton = React.forwardRef<Props, ButtonInstance>((props, ref) => (
                                                   ^^^^^^^^^^^^^^ [1]
   forwardRef.js:22:49
   22| const _g = <FancyButton foo={3} ref={(x: null | DivInstance) => x} />; // Incorrect ref type
                                                       ^^^^^^^^^^^ [2]
   forwardRef.js:22:42
   22| const _g = <FancyButton foo={3} ref={(x: null | DivInstance) => x} />; // Incorrect ref type
                                                ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- forwardRef.js:42:35

Cannot create `UnionRef` element because in property `ref`: [incompatible-type]
 - Either `AInstance` [1] is incompatible with `ButtonInstance` [2] in property `current`.
 - Or `AInstance` [1] is incompatible with `DivInstance` [3] in property `current`.
 - Or `React.RefObject` [4] is incompatible with function type [5]. Non-callable objects are not compatible with
   functions.

   forwardRef.js:42:35
    42| const _j = <UnionRef foo={3} ref={badUnionRef} />; // Error bad ref
                                          ^^^^^^^^^^^

References:
   forwardRef.js:28:20
    28|   ButtonInstance | AInstance,
                           ^^^^^^^^^ [1]
   forwardRef.js:41:37
    41| const badUnionRef = React.createRef<ButtonInstance | DivInstance>();
                                            ^^^^^^^^^^^^^^ [2]
   forwardRef.js:41:54
    41| const badUnionRef = React.createRef<ButtonInstance | DivInstance>();
                                                             ^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:587:8
   587|     ): React$RefObject<T | null>;
               ^^^^^^^^^^^^^^^^^^^^^^^^^ [4]
   <BUILTINS>/react.js:103:6
   103|   | ((T | null) => mixed)
             ^^^^^^^^^^^^^^^^^^^ [5]



Found 5 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
