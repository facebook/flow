Error -------------------------------------------------------------------------------------------------- enforced.js:2:1

Cannot cast `foo` to object type because property `bar` is missing in object literal [1] but exists in object type [2]. 

This optional property of object type [2] is invariantly typed. To fix,
- Either annotate object literal [1] with `{bar?: string}` [2]
- Or make object type [2] readonly. See
https://flow.org/en/docs/faq/#why-cant-i-pass-a-string-to-a-function-that-takes-a-string-number. [incompatible-type]

   enforced.js:2:1
   2| foo as {bar?: string}; // error. TODO: should show error with suggestions
      ^^^

References:
   enforced.js:1:13
   1| const foo = {};
                  ^^ [1]
   enforced.js:2:8
   2| foo as {bar?: string}; // error. TODO: should show error with suggestions
             ^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- enforced.js:5:1

Cannot cast `bar` to object type because `number` [1] is not exactly the same as `string | number` [2] in property
`baz`. 

The above-mentioned two types must be the same because property `baz` is invariantly typed. To fix the error,
- Either annotate object literal [3] with `{baz: string | number}` [4]
- Or make property `baz` in object type [4] readonly. See
https://flow.org/en/docs/faq/#why-cant-i-pass-a-string-to-a-function-that-takes-a-string-number. [incompatible-type]

   enforced.js:5:1
   5| bar as {baz: string | number}; // error
      ^^^

References:
   enforced.js:4:19
   4| const bar = {baz: 1};
                        ^ [1]
   enforced.js:5:14
   5| bar as {baz: string | number}; // error
                   ^^^^^^^^^^^^^^^ [2]
   enforced.js:4:13
   4| const bar = {baz: 1};
                  ^^^^^^^^ [3]
   enforced.js:5:8
   5| bar as {baz: string | number}; // error
             ^^^^^^^^^^^^^^^^^^^^^^ [4]


Error -------------------------------------------------------------------------------------------------- enforced.js:8:1

Cannot cast `bazArray` to array type because `{baz: number}` [1] is not exactly the same as `{baz: string | number}` [2]
in array element. 

The above-mentioned two types must be the same because arrays are invariantly typed. To fix the error,
- Either annotate array literal [3] with `Array<{baz: string | number}>` [4]
- Or make array type [4] a `$ReadOnlyArray`.
See https://flow.org/en/docs/faq/#why-cant-i-pass-an-arraystring-to-a-function-that-takes-an-arraystring-number.
[incompatible-type]

   enforced.js:8:1
   8| bazArray as Array<{baz: string | number}>; // error
      ^^^^^^^^

References:
   enforced.js:7:19
   7| const bazArray = [{baz: 1}];
                        ^^^^^^^^ [1]
   enforced.js:8:19
   8| bazArray as Array<{baz: string | number}>; // error
                        ^^^^^^^^^^^^^^^^^^^^^^ [2]
   enforced.js:7:18
   7| const bazArray = [{baz: 1}];
                       ^^^^^^^^^^ [3]
   enforced.js:8:13
   8| bazArray as Array<{baz: string | number}>; // error
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]



Found 3 errors
