Error ------------------------------------------------------------------------------------------------- generics.js:4:32

Cannot assign `x` to `r` because `X` [1] is incompatible with number [2]. [incompatible-type]

   generics.js:4:32
   4| function foo<X>(x: X): X { r = x; return x; }
                                     ^

References:
   generics.js:4:20
   4| function foo<X>(x: X): X { r = x; return x; }
                         ^ [1]
   generics.js:3:8
   3| var r: number = 0;
             ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- import_class.js:3:15

Cannot call `C` with empty string bound to `x` because string [1] is incompatible with number [2]. [incompatible-call]

   import_class.js:3:15
   3| var c = new C("");
                    ^^ [1]

References:
   export_class.js:3:20
   3|     constructor(x: number) { this.x = x; }
                         ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- objects.js:4:13

Cannot use `new` on function [1]. Only classes can be constructed. [invalid-constructor]

   objects.js:4:13
   4| var c = new C();
                  ^

References:
   objects.js:1:1
   1| function C() { this.x = 0; }
      ^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------- objects.js:13:17

Cannot assign `o2.bar()` to `y` because string [1] is incompatible with number [2]. [incompatible-type]

   objects.js:13:17
   13| var y: number = o2.bar();
                       ^^^^^^^^

References:
   objects.js:9:14
    9| var o = { y: "", foo: foo, bar: bar };
                    ^^ [1]
   objects.js:13:8
   13| var y: number = o2.bar();
              ^^^^^^ [2]



Found 4 errors
