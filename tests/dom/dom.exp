Error -------------------------------------------------------------------------------- CanvasRenderingContext2D.js:11:16

Cannot call `ctx.moveTo` with `'0'` bound to `x` because string [1] is incompatible with number [2]. [incompatible-call]

   CanvasRenderingContext2D.js:11:16
     11|     ctx.moveTo('0', '1');  // error: should be numbers
                        ^^^ [1]

References:
   <BUILTINS>/dom.js:2059:13
   2059|   moveTo(x: number, y: number): void;
                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------- CanvasRenderingContext2D.js:11:21

Cannot call `ctx.moveTo` with `'1'` bound to `y` because string [1] is incompatible with number [2]. [incompatible-call]

   CanvasRenderingContext2D.js:11:21
     11|     ctx.moveTo('0', '1');  // error: should be numbers
                             ^^^ [1]

References:
   <BUILTINS>/dom.js:2059:24
   2059|   moveTo(x: number, y: number): void;
                                ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:10:45

Cannot call `ClipboardEvent` with `'invalid'` bound to `type` because string [1] is incompatible with literal union [2].
[incompatible-call]

   ClipboardEvent.js:10:45
    10|     const invalidEvent = new ClipboardEvent('invalid'); // invalid
                                                    ^^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:575:21
   575|   constructor(type: ClipboardEventTypes, eventInit?: ClipboardEvent$Init): void;
                            ^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- ClipboardEvent.js:25:7

Cannot call `ClipboardEvent` with object literal bound to `eventInit` because property `clipboardData` is missing in
object literal [1] but exists in object type [2]. [prop-missing]

   ClipboardEvent.js:25:7
    25|       {}, // invalid, clipboardData may not be omitted
              ^^ [1]

References:
   <BUILTINS>/dom.js:572:41
   572| type ClipboardEvent$Init = Event$Init & { clipboardData: DataTransfer | null, ... };
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:27:64

Cannot call `ClipboardEvent` with object literal bound to `eventInit` because object literal [1] is incompatible with
`DataTransfer` [2] in property `clipboardData`. [incompatible-call]

   ClipboardEvent.js:27:64
                                                                       v
    27|     const invalid2 = new ClipboardEvent('cut', {clipboardData: {
    28|       'text/plain': 'thats not how you do it'}}); // invalid
              ---------------------------------------^ [1]

References:
   <BUILTINS>/dom.js:572:58
   572| type ClipboardEvent$Init = Event$Init & { clipboardData: DataTransfer | null, ... };
                                                                 ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:32:23

Cannot call `e.clipboardData.getData` because property `getData` is missing in null or undefined [1]. [incompatible-use]

   ClipboardEvent.js:32:23
    32|       e.clipboardData.getData('text/plain'); // invalid: null check required
                              ^^^^^^^

References:
   <BUILTINS>/dom.js:576:19
   576|   +clipboardData: ?DataTransfer; // readonly
                          ^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------- Element.js:14:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with literal
union [2] in property `behavior`. [incompatible-call]

   Element.js:14:28
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^^^^

References:
   Element.js:14:40
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                                ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1515:22
   1515|          behavior?: ('auto' | 'instant' | 'smooth'),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- Element.js:15:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with literal
union [2] in property `block`. [incompatible-call]

   Element.js:15:28
     15|     element.scrollIntoView({ block: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^

References:
   Element.js:15:37
     15|     element.scrollIntoView({ block: 'invalid' });
                                             ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1516:19
   1516|          block?: ('start' | 'center' | 'end' | 'nearest'),
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- Element.js:16:28

Cannot call `element.scrollIntoView` with `1` bound to `arg` because number [1] is incompatible with boolean [2].
[incompatible-call]

   Element.js:16:28
     16|     element.scrollIntoView(1);
                                    ^ [1]

References:
   <BUILTINS>/dom.js:1514:25
   1514|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- HTMLCollection.js:10:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLCollection.js:10:4
    10| el.className // invalid
           ^^^^^^^^^

References:
   <BUILTINS>/dom.js:696:56
   696|   item(nameOrIndex?: any, optionalIndex?: any): Elem | null;
                                                               ^^^^ [1]


Error ------------------------------------------------------------------------------------------- HTMLCollection.js:14:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLCollection.js:14:4
    14| el.className // invalid
           ^^^^^^^^^

References:
   <BUILTINS>/dom.js:697:35
   697|   namedItem(name: string): Elem | null;
                                          ^^^^ [1]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:9:27

Cannot call `element.hasAttributes` because no arguments are expected by function type [1]. [extra-arg]

   HTMLElement.js:9:27
      9|     element.hasAttributes('foo', 'bar');
                                   ^^^^^

References:
   <BUILTINS>/dom.js:1503:3
   1503|   hasAttributes(): boolean;
           ^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:22:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with literal
union [2] in property `behavior`. [incompatible-call]

   HTMLElement.js:22:28
     22|     element.scrollIntoView({behavior: 'invalid'});
                                    ^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:22:39
     22|     element.scrollIntoView({behavior: 'invalid'});
                                               ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1515:22
   1515|          behavior?: ('auto' | 'instant' | 'smooth'),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:23:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with literal
union [2] in property `block`. [incompatible-call]

   HTMLElement.js:23:28
     23|     element.scrollIntoView({block: 'invalid'});
                                    ^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:23:36
     23|     element.scrollIntoView({block: 'invalid'});
                                            ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1516:19
   1516|          block?: ('start' | 'center' | 'end' | 'nearest'),
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:24:28

Cannot call `element.scrollIntoView` with `1` bound to `arg` because number [1] is incompatible with boolean [2].
[incompatible-call]

   HTMLElement.js:24:28
     24|     element.scrollIntoView(1);
                                    ^ [1]

References:
   <BUILTINS>/dom.js:1514:25
   1514|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:46:6

Cannot cast `element.getElementsByTagName(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible with
`HTMLElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:46:6
     46|     (element.getElementsByTagName(str): HTMLCollection<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:46:56
     46|     (element.getElementsByTagName(str): HTMLCollection<HTMLAnchorElement>);
                                                                ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1446:54
   1446|   getElementsByTagName(name: string): HTMLCollection<HTMLElement>;
                                                              ^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:693:31
    693| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:47:6

Cannot cast `element.getElementsByTagNameNS(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible
with `HTMLElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:47:6
              v------------------------------
     47|     (element.getElementsByTagNameNS(
     48|       null,
     49|       str,
     50|     ): HTMLCollection<HTMLAnchorElement>);
             ^

References:
   HTMLElement.js:50:23
     50|     ): HTMLCollection<HTMLAnchorElement>);
                               ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1500:90
   1500|   getElementsByTagNameNS(namespaceURI: string | null, localName: string): HTMLCollection<HTMLElement>;
                                                                                                  ^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:693:31
    693| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:51:6

Cannot cast `element.querySelector(...)` to union type because `HTMLElement` [1] is incompatible with
`HTMLAnchorElement` [2]. [incompatible-cast]

   HTMLElement.js:51:6
     51|     (element.querySelector(str): HTMLAnchorElement | null);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1605:36
   1605|   querySelector(selector: string): HTMLElement | null;
                                            ^^^^^^^^^^^ [1]
   HTMLElement.js:51:34
     51|     (element.querySelector(str): HTMLAnchorElement | null);
                                          ^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:52:6

Cannot cast `element.querySelectorAll(...)` to `NodeList` because `HTMLAnchorElement` [1] is incompatible with
`HTMLElement` [2] in type argument `T` [3]. [incompatible-cast]

   HTMLElement.js:52:6
     52|     (element.querySelectorAll(str): NodeList<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:52:46
     52|     (element.querySelectorAll(str): NodeList<HTMLAnchorElement>);
                                                      ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1669:48
   1669|   querySelectorAll(selector: string): NodeList<HTMLElement>;
                                                        ^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:657:24
    657| declare class NodeList<T> {
                                ^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:55:6

Cannot cast `element.getElementsByTagName(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible with
`HTMLDivElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:55:6
     55|     (element.getElementsByTagName('div'): HTMLCollection<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:55:58
     55|     (element.getElementsByTagName('div'): HTMLCollection<HTMLAnchorElement>);
                                                                  ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1405:53
   1405|   getElementsByTagName(name: 'div'): HTMLCollection<HTMLDivElement>;
                                                             ^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:693:31
    693| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:56:6

Cannot cast `element.getElementsByTagNameNS(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible
with `HTMLDivElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:56:6
              v------------------------------
     56|     (element.getElementsByTagNameNS(
     57|       null,
     58|       'div',
     59|     ): HTMLCollection<HTMLAnchorElement>);
             ^

References:
   HTMLElement.js:59:23
     59|     ): HTMLCollection<HTMLAnchorElement>);
                               ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1459:89
   1459|   getElementsByTagNameNS(namespaceURI: string | null, localName: 'div'): HTMLCollection<HTMLDivElement>;
                                                                                                 ^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:693:31
    693| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:60:6

Cannot cast `element.querySelector(...)` to union type because `HTMLDivElement` [1] is incompatible with
`HTMLAnchorElement` [2]. [incompatible-cast]

   HTMLElement.js:60:6
     60|     (element.querySelector('div'): HTMLAnchorElement | null);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1558:35
   1558|   querySelector(selector: 'div'): HTMLDivElement | null;
                                           ^^^^^^^^^^^^^^ [1]
   HTMLElement.js:60:36
     60|     (element.querySelector('div'): HTMLAnchorElement | null);
                                            ^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:61:6

Cannot cast `element.querySelectorAll(...)` to `NodeList` because `HTMLDivElement` [1] is incompatible with
`HTMLAnchorElement` [2] in type argument `T` [3]. [incompatible-cast]

   HTMLElement.js:61:6
     61|     (element.querySelectorAll('div'): NodeList<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1622:47
   1622|   querySelectorAll(selector: 'div'): NodeList<HTMLDivElement>;
                                                       ^^^^^^^^^^^^^^ [1]
   HTMLElement.js:61:48
     61|     (element.querySelectorAll('div'): NodeList<HTMLAnchorElement>);
                                                        ^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:657:24
    657| declare class NodeList<T> {
                                ^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:61:6

Cannot cast `element.querySelectorAll(...)` to `NodeList` because `HTMLAnchorElement` [1] is incompatible with
`HTMLDivElement` [2] in type argument `T` [3]. [incompatible-cast]

   HTMLElement.js:61:6
     61|     (element.querySelectorAll('div'): NodeList<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:61:48
     61|     (element.querySelectorAll('div'): NodeList<HTMLAnchorElement>);
                                                        ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1622:47
   1622|   querySelectorAll(selector: 'div'): NodeList<HTMLDivElement>;
                                                       ^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:657:24
    657| declare class NodeList<T> {
                                ^ [3]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:72:35

Cannot call `element.focus` with object literal bound to `options` because string [1] is incompatible with boolean [2]
in property `preventScroll`. [incompatible-call]

   HTMLElement.js:72:35
     72|     element.focus({preventScroll: 'invalid'});
                                           ^^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:1338:39
   1338| type FocusOptions = { preventScroll?: boolean, ... }
                                               ^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:73:19

Cannot call `element.focus` with `1` bound to `options` because number [1] is incompatible with `FocusOptions` [2].
[incompatible-call]

   HTMLElement.js:73:19
     73|     element.focus(1);
                           ^ [1]

References:
   <BUILTINS>/dom.js:1681:19
   1681|   focus(options?: FocusOptions): void;
                           ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ HTMLFormElement.js:23:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLFormElement.js:23:4
     23| el.className // invalid
            ^^^^^^^^^

References:
   <BUILTINS>/dom.js:2988:43
   2988|   [index: number | string]: HTMLElement | null;
                                                   ^^^^ [1]


Error ------------------------------------------------------------------------------------------ HTMLFormElement.js:27:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLFormElement.js:27:4
     27| el.className // invalid
            ^^^^^^^^^

References:
   <BUILTINS>/dom.js:2988:43
   2988|   [index: number | string]: HTMLElement | null;
                                                   ^^^^ [1]


Error ------------------------------------------------------------------------------------------ HTMLInputElement.js:7:8

Cannot call `el.setRangeText` because number [1] is incompatible with undefined [2]. [incompatible-call]

   HTMLInputElement.js:7:8
      7|     el.setRangeText('foo', 123); // end is required
                ^^^^^^^^^^^^

References:
   HTMLInputElement.js:7:28
      7|     el.setRangeText('foo', 123); // end is required
                                    ^^^ [1]
   <BUILTINS>/dom.js:3369:45
   3369|   setRangeText(replacement: string, start?: void, end?: void, selectMode?: void): void;
                                                     ^^^^ [2]


Error ----------------------------------------------------------------------------------------- HTMLInputElement.js:10:8

Cannot call `el.setRangeText` because string [1] is incompatible with literal union [2]. [incompatible-call]

   HTMLInputElement.js:10:8
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
                ^^^^^^^^^^^^

References:
   HTMLInputElement.js:10:38
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
                                              ^^^^^^^ [1]
   <BUILTINS>/dom.js:3370:78
   3370|   setRangeText(replacement: string, start: number, end: number, selectMode?: SelectionMode): void;
                                                                                      ^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:11:6

Cannot get `form.action` because property `action` is missing in null [1]. [incompatible-use]

   HTMLSelectElement.js:11:6
     11| form.action // invalid
              ^^^^^^

References:
   <BUILTINS>/dom.js:3430:27
   3430|   form: HTMLFormElement | null;
                                   ^^^^ [1]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:19:6

Cannot get `item.value` because property `value` is missing in null [1]. [incompatible-use]

   HTMLSelectElement.js:19:6
     19| item.value // invalid
              ^^^^^

References:
   <BUILTINS>/dom.js:3448:44
   3448|   item(index: number): HTMLOptionElement | null;
                                                    ^^^^ [1]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:22:6

Cannot get `item.value` because property `value` is missing in null [1]. [incompatible-use]

   HTMLSelectElement.js:22:6
     22| item.value // invalid
              ^^^^^

References:
   <BUILTINS>/dom.js:3449:48
   3449|   namedItem(name: string): HTMLOptionElement | null;
                                                        ^^^^ [1]


Error --------------------------------------------------------------------------------------------- NamedNodeMap.js:9:16

Cannot get `attributes[null]` because: [incompatible-type]
 - Either null [1] is incompatible with number [2].
 - Or null [1] is incompatible with string [3].

   NamedNodeMap.js:9:16
     9|     attributes[null];
                       ^^^^ [1]

References:
   <BUILTINS>/dom.js:674:11
   674|   [index: number | string]: Attr;
                  ^^^^^^ [2]
   <BUILTINS>/dom.js:674:20
   674|   [index: number | string]: Attr;
                           ^^^^^^ [3]


Error -------------------------------------------------------------------------------------------- NamedNodeMap.js:10:16

Cannot get `attributes[{...}]` because: [incompatible-type]
 - Either object literal [1] is incompatible with number [2].
 - Or object literal [1] is incompatible with string [3].

   NamedNodeMap.js:10:16
    10|     attributes[{}];
                       ^^ [1]

References:
   <BUILTINS>/dom.js:674:11
   674|   [index: number | string]: Attr;
                  ^^^^^^ [2]
   <BUILTINS>/dom.js:674:20
   674|   [index: number | string]: Attr;
                           ^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------------ URL.js:8:21

Cannot get `c.path` because property `path` is missing in `URL` [1]. [prop-missing]

   URL.js:8:21
   8| const e: string = c.path; // not correct
                          ^^^^

References:
   URL.js:5:11
   5| const c = new URL('/docs', 'http://flowtype.org/'); // correct
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- eventtarget.js:9:13

Cannot call `target.attachEvent` because undefined [1] is not a function. [not-a-function]

   eventtarget.js:9:13
     9|     (target.attachEvent('foo', listener): void); // invalid, may be undefined
                    ^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:255:17
   255|   attachEvent?: (type: string, listener: EventListener) => void;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- eventtarget.js:16:13

Cannot call `target.detachEvent` because undefined [1] is not a function. [not-a-function]

   eventtarget.js:16:13
    16|     (target.detachEvent('foo', listener): void); // invalid, may be undefined
                    ^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:273:17
   273|   detachEvent?: (type: string, listener: EventListener) => void;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- eventtarget.js:22:22

Cannot use `window` as a type because it is an `any`-typed value. Type `window` properly, so it is no longer
`any`-typed, to use it as an annotation. [value-as-type]

   22|       (event.target: window);
                            ^^^^^^


Error -------------------------------------------------------------------------------------------------- path2d.js:16:11

Cannot call `path.arcTo` because string [1] is incompatible with number [2]. [incompatible-call]

   path2d.js:16:11
     16|     (path.arcTo(0, 0, 0, 0, 10, '20', 5): void); // invalid
                   ^^^^^

References:
   path2d.js:16:33
     16|     (path.arcTo(0, 0, 0, 0, 10, '20', 5): void); // invalid
                                         ^^^^ [1]
   <BUILTINS>/dom.js:1924:83
   1924|   arcTo(x1: number, y1: number, x2: number, y2: number, radiusX: number, radiusY: number, rotation: number): void;
                                                                                           ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- registerElement.js:52:19

Cannot call `document.registerElement` with object literal bound to `options` because string [1] is incompatible with
null [2] in the second argument of property `prototype.attributeChangedCallback`. [incompatible-call]

   registerElement.js:52:19
    52|           oldVal: string, // Error: This might be null
                          ^^^^^^ [1]

References:
   <BUILTINS>/dom.js:714:36
   714|                 oldAttributeValue: null,
                                           ^^^^ [2]


Error ----------------------------------------------------------------------------------------- registerElement.js:53:19

Cannot call `document.registerElement` with object literal bound to `options` because string [1] is incompatible with
null [2] in the third argument of property `prototype.attributeChangedCallback`. [incompatible-call]

   registerElement.js:53:19
    53|           newVal: string, // Error: This might be null
                          ^^^^^^ [1]

References:
   <BUILTINS>/dom.js:729:36
   729|                 newAttributeValue: null,
                                           ^^^^ [2]


Error ----------------------------------------------------------------------------------------------- traversal.js:29:14

Cannot call `document.createNodeIterator` because: [incompatible-call]
 - Either object literal [1] is incompatible with `Attr` [2].
 - Or object literal [1] is incompatible with `Document` [3].
 - Or object literal [1] is incompatible with `Document` [4].
 - Or object literal [1] is incompatible with `Document` [5].
 - Or object literal [1] is incompatible with `Document` [6].
 - Or object literal [1] is incompatible with `Document` [7].
 - Or object literal [1] is incompatible with `Document` [8].
 - Or object literal [1] is incompatible with `Document` [9].
 - Or object literal [1] is incompatible with `Document` [10].
 - Or object literal [1] is incompatible with `Document` [11].
 - Or object literal [1] is incompatible with `Document` [12].
 - Or object literal [1] is incompatible with `Document` [13].
 - Or object literal [1] is incompatible with `Document` [14].
 - Or object literal [1] is incompatible with `Document` [15].
 - Or object literal [1] is incompatible with `Document` [16].
 - Or object literal [1] is incompatible with `Document` [17].
 - Or object literal [1] is incompatible with `Document` [18].
 - Or object literal [1] is incompatible with `Document` [19].
 - Or object literal [1] is incompatible with `Document` [20].
 - Or object literal [1] is incompatible with `Document` [21].
 - Or object literal [1] is incompatible with `Document` [22].
 - Or object literal [1] is incompatible with `Document` [23].
 - Or object literal [1] is incompatible with `Document` [24].
 - Or object literal [1] is incompatible with `Document` [25].
 - Or object literal [1] is incompatible with `Document` [26].
 - Or object literal [1] is incompatible with `DocumentFragment` [27].
 - Or object literal [1] is incompatible with `DocumentFragment` [28].
 - Or object literal [1] is incompatible with `DocumentFragment` [29].
 - Or object literal [1] is incompatible with `DocumentFragment` [30].
 - Or object literal [1] is incompatible with `DocumentFragment` [31].
 - Or object literal [1] is incompatible with `DocumentFragment` [32].
 - Or object literal [1] is incompatible with `DocumentFragment` [33].
 - Or object literal [1] is incompatible with `DocumentFragment` [34].
 - Or object literal [1] is incompatible with `Node` [35].
 - Or object literal [1] is incompatible with `Node` [36].
 - Or object literal [1] is incompatible with `Node` [37].
 - Or object literal [1] is incompatible with `Node` [38].
 - Or object literal [1] is incompatible with `Node` [39].
 - Or object literal [1] is incompatible with `Node` [40].
 - Or object literal [1] is incompatible with `Node` [41].
 - Or object literal [1] is incompatible with `Node` [42].

   traversal.js:29:14
     29|     document.createNodeIterator({}); // invalid
                      ^^^^^^^^^^^^^^^^^^

References:
   traversal.js:29:33
     29|     document.createNodeIterator({}); // invalid
                                         ^^ [1]
   <BUILTINS>/dom.js:1157:33
   1157|   createNodeIterator<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Attr>;
                                         ^^^^ [2]
   <BUILTINS>/dom.js:1165:33
   1165|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document>;
                                         ^^^^^^^^ [3]
   <BUILTINS>/dom.js:1166:33
   1166|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element>;
                                         ^^^^^^^^ [4]
   <BUILTINS>/dom.js:1167:33
   1167|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text>;
                                         ^^^^^^^^ [5]
   <BUILTINS>/dom.js:1168:33
   1168|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text>;
                                         ^^^^^^^^ [6]
   <BUILTINS>/dom.js:1169:33
   1169|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Comment>;
                                         ^^^^^^^^ [7]
   <BUILTINS>/dom.js:1170:33
   1170|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Comment>;
                                         ^^^^^^^^ [8]
   <BUILTINS>/dom.js:1171:33
   1171|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text|Comment>;
                                         ^^^^^^^^ [9]
   <BUILTINS>/dom.js:1172:33
   1172|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text|Comment>;
                                         ^^^^^^^^ [10]
   <BUILTINS>/dom.js:1173:33
   1173|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType>;
                                         ^^^^^^^^ [11]
   <BUILTINS>/dom.js:1174:33
   1174|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element>;
                                         ^^^^^^^^ [12]
   <BUILTINS>/dom.js:1175:33
   1175|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text>;
                                         ^^^^^^^^ [13]
   <BUILTINS>/dom.js:1176:33
   1176|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text>;
                                         ^^^^^^^^ [14]
   <BUILTINS>/dom.js:1177:33
   1177|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Comment>;
                                         ^^^^^^^^ [15]
   <BUILTINS>/dom.js:1178:33
   1178|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Comment>;
                                         ^^^^^^^^ [16]
   <BUILTINS>/dom.js:1179:33
   1179|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text|Comment>;
                                         ^^^^^^^^ [17]
   <BUILTINS>/dom.js:1180:33
   1180|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text|Comment>;
                                         ^^^^^^^^ [18]
   <BUILTINS>/dom.js:1181:33
   1181|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document>;
                                         ^^^^^^^^ [19]
   <BUILTINS>/dom.js:1182:33
   1182|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element>;
                                         ^^^^^^^^ [20]
   <BUILTINS>/dom.js:1183:33
   1183|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text>;
                                         ^^^^^^^^ [21]
   <BUILTINS>/dom.js:1184:33
   1184|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text>;
                                         ^^^^^^^^ [22]
   <BUILTINS>/dom.js:1185:33
   1185|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Comment>;
                                         ^^^^^^^^ [23]
   <BUILTINS>/dom.js:1186:33
   1186|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Comment>;
                                         ^^^^^^^^ [24]
   <BUILTINS>/dom.js:1187:33
   1187|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text|Comment>;
                                         ^^^^^^^^ [25]
   <BUILTINS>/dom.js:1188:33
   1188|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                         ^^^^^^^^ [26]
   <BUILTINS>/dom.js:1216:33
   1216|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment>;
                                         ^^^^^^^^^^^^^^^^ [27]
   <BUILTINS>/dom.js:1217:33
   1217|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element>;
                                         ^^^^^^^^^^^^^^^^ [28]
   <BUILTINS>/dom.js:1218:33
   1218|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text>;
                                         ^^^^^^^^^^^^^^^^ [29]
   <BUILTINS>/dom.js:1219:33
   1219|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text>;
                                         ^^^^^^^^^^^^^^^^ [30]
   <BUILTINS>/dom.js:1220:33
   1220|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Comment>;
                                         ^^^^^^^^^^^^^^^^ [31]
   <BUILTINS>/dom.js:1221:33
   1221|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Comment>;
                                         ^^^^^^^^^^^^^^^^ [32]
   <BUILTINS>/dom.js:1222:33
   1222|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text|Comment>;
                                         ^^^^^^^^^^^^^^^^ [33]
   <BUILTINS>/dom.js:1223:33
   1223|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                         ^^^^^^^^^^^^^^^^ [34]
   <BUILTINS>/dom.js:1236:33
   1236|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element>;
                                         ^^^^ [35]
   <BUILTINS>/dom.js:1237:33
   1237|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text>;
                                         ^^^^ [36]
   <BUILTINS>/dom.js:1238:33
   1238|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Text>;
                                         ^^^^ [37]
   <BUILTINS>/dom.js:1239:33
   1239|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Comment>;
                                         ^^^^ [38]
   <BUILTINS>/dom.js:1240:33
   1240|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Comment>;
                                         ^^^^ [39]
   <BUILTINS>/dom.js:1241:33
   1241|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Comment>;
                                         ^^^^ [40]
   <BUILTINS>/dom.js:1242:33
   1242|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                         ^^^^ [41]
   <BUILTINS>/dom.js:1253:33
   1253|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow?: number, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Node>;
                                         ^^^^ [42]


Error ----------------------------------------------------------------------------------------------- traversal.js:33:14

Cannot call `document.createTreeWalker` because: [incompatible-call]
 - Either object literal [1] is incompatible with `Attr` [2].
 - Or object literal [1] is incompatible with `Document` [3].
 - Or object literal [1] is incompatible with `Document` [4].
 - Or object literal [1] is incompatible with `Document` [5].
 - Or object literal [1] is incompatible with `Document` [6].
 - Or object literal [1] is incompatible with `Document` [7].
 - Or object literal [1] is incompatible with `Document` [8].
 - Or object literal [1] is incompatible with `Document` [9].
 - Or object literal [1] is incompatible with `Document` [10].
 - Or object literal [1] is incompatible with `Document` [11].
 - Or object literal [1] is incompatible with `Document` [12].
 - Or object literal [1] is incompatible with `Document` [13].
 - Or object literal [1] is incompatible with `Document` [14].
 - Or object literal [1] is incompatible with `Document` [15].
 - Or object literal [1] is incompatible with `Document` [16].
 - Or object literal [1] is incompatible with `Document` [17].
 - Or object literal [1] is incompatible with `Document` [18].
 - Or object literal [1] is incompatible with `Document` [19].
 - Or object literal [1] is incompatible with `Document` [20].
 - Or object literal [1] is incompatible with `Document` [21].
 - Or object literal [1] is incompatible with `Document` [22].
 - Or object literal [1] is incompatible with `Document` [23].
 - Or object literal [1] is incompatible with `Document` [24].
 - Or object literal [1] is incompatible with `Document` [25].
 - Or object literal [1] is incompatible with `Document` [26].
 - Or object literal [1] is incompatible with `DocumentFragment` [27].
 - Or object literal [1] is incompatible with `DocumentFragment` [28].
 - Or object literal [1] is incompatible with `DocumentFragment` [29].
 - Or object literal [1] is incompatible with `DocumentFragment` [30].
 - Or object literal [1] is incompatible with `DocumentFragment` [31].
 - Or object literal [1] is incompatible with `DocumentFragment` [32].
 - Or object literal [1] is incompatible with `DocumentFragment` [33].
 - Or object literal [1] is incompatible with `DocumentFragment` [34].
 - Or object literal [1] is incompatible with `Node` [35].
 - Or object literal [1] is incompatible with `Node` [36].
 - Or object literal [1] is incompatible with `Node` [37].
 - Or object literal [1] is incompatible with `Node` [38].
 - Or object literal [1] is incompatible with `Node` [39].
 - Or object literal [1] is incompatible with `Node` [40].
 - Or object literal [1] is incompatible with `Node` [41].
 - Or object literal [1] is incompatible with `Node` [42].

   traversal.js:33:14
     33|     document.createTreeWalker({}); // invalid
                      ^^^^^^^^^^^^^^^^

References:
   traversal.js:33:31
     33|     document.createTreeWalker({}); // invalid
                                       ^^ [1]
   <BUILTINS>/dom.js:1158:31
   1158|   createTreeWalker<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Attr>;
                                       ^^^^ [2]
   <BUILTINS>/dom.js:1189:31
   1189|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document>;
                                       ^^^^^^^^ [3]
   <BUILTINS>/dom.js:1190:31
   1190|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element>;
                                       ^^^^^^^^ [4]
   <BUILTINS>/dom.js:1191:31
   1191|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text>;
                                       ^^^^^^^^ [5]
   <BUILTINS>/dom.js:1192:31
   1192|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text>;
                                       ^^^^^^^^ [6]
   <BUILTINS>/dom.js:1193:31
   1193|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Comment>;
                                       ^^^^^^^^ [7]
   <BUILTINS>/dom.js:1194:31
   1194|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Comment>;
                                       ^^^^^^^^ [8]
   <BUILTINS>/dom.js:1195:31
   1195|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text|Comment>;
                                       ^^^^^^^^ [9]
   <BUILTINS>/dom.js:1196:31
   1196|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text|Comment>;
                                       ^^^^^^^^ [10]
   <BUILTINS>/dom.js:1197:31
   1197|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType>;
                                       ^^^^^^^^ [11]
   <BUILTINS>/dom.js:1198:31
   1198|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element>;
                                       ^^^^^^^^ [12]
   <BUILTINS>/dom.js:1199:31
   1199|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text>;
                                       ^^^^^^^^ [13]
   <BUILTINS>/dom.js:1200:31
   1200|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text>;
                                       ^^^^^^^^ [14]
   <BUILTINS>/dom.js:1201:31
   1201|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Comment>;
                                       ^^^^^^^^ [15]
   <BUILTINS>/dom.js:1202:31
   1202|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Comment>;
                                       ^^^^^^^^ [16]
   <BUILTINS>/dom.js:1203:31
   1203|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text|Comment>;
                                       ^^^^^^^^ [17]
   <BUILTINS>/dom.js:1204:31
   1204|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text|Comment>;
                                       ^^^^^^^^ [18]
   <BUILTINS>/dom.js:1205:31
   1205|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document>;
                                       ^^^^^^^^ [19]
   <BUILTINS>/dom.js:1206:31
   1206|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element>;
                                       ^^^^^^^^ [20]
   <BUILTINS>/dom.js:1207:31
   1207|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text>;
                                       ^^^^^^^^ [21]
   <BUILTINS>/dom.js:1208:31
   1208|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text>;
                                       ^^^^^^^^ [22]
   <BUILTINS>/dom.js:1209:31
   1209|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Comment>;
                                       ^^^^^^^^ [23]
   <BUILTINS>/dom.js:1210:31
   1210|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Comment>;
                                       ^^^^^^^^ [24]
   <BUILTINS>/dom.js:1211:31
   1211|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text|Comment>;
                                       ^^^^^^^^ [25]
   <BUILTINS>/dom.js:1212:31
   1212|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                       ^^^^^^^^ [26]
   <BUILTINS>/dom.js:1224:31
   1224|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment>;
                                       ^^^^^^^^^^^^^^^^ [27]
   <BUILTINS>/dom.js:1225:31
   1225|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element>;
                                       ^^^^^^^^^^^^^^^^ [28]
   <BUILTINS>/dom.js:1226:31
   1226|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text>;
                                       ^^^^^^^^^^^^^^^^ [29]
   <BUILTINS>/dom.js:1227:31
   1227|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text>;
                                       ^^^^^^^^^^^^^^^^ [30]
   <BUILTINS>/dom.js:1228:31
   1228|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Comment>;
                                       ^^^^^^^^^^^^^^^^ [31]
   <BUILTINS>/dom.js:1229:31
   1229|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Comment>;
                                       ^^^^^^^^^^^^^^^^ [32]
   <BUILTINS>/dom.js:1230:31
   1230|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text|Comment>;
                                       ^^^^^^^^^^^^^^^^ [33]
   <BUILTINS>/dom.js:1231:31
   1231|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                       ^^^^^^^^^^^^^^^^ [34]
   <BUILTINS>/dom.js:1243:31
   1243|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element>;
                                       ^^^^ [35]
   <BUILTINS>/dom.js:1244:31
   1244|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text>;
                                       ^^^^ [36]
   <BUILTINS>/dom.js:1245:31
   1245|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Text>;
                                       ^^^^ [37]
   <BUILTINS>/dom.js:1246:31
   1246|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Comment>;
                                       ^^^^ [38]
   <BUILTINS>/dom.js:1247:31
   1247|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Comment>;
                                       ^^^^ [39]
   <BUILTINS>/dom.js:1248:31
   1248|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Comment>;
                                       ^^^^ [40]
   <BUILTINS>/dom.js:1249:31
   1249|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                       ^^^^ [41]
   <BUILTINS>/dom.js:1254:31
   1254|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow?: number, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Node>;
                                       ^^^^ [42]


Error ---------------------------------------------------------------------------------------------- traversal.js:186:60

Cannot call `document.createNodeIterator` with function bound to `filter` because string [1] is incompatible with
literal union [2] in the return value. [incompatible-call]

   traversal.js:186:60
    186|     document.createNodeIterator(document_body, -1, node => 'accept'); // invalid
                                                                    ^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:3914:1
         v--------------------------------
   3914| typeof NodeFilter.FILTER_ACCEPT |
   3915| typeof NodeFilter.FILTER_REJECT |
   3916| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:188:74

Cannot call `document.createNodeIterator` with object literal bound to `filter` because string [1] is incompatible with
literal union [2] in the return value of property `acceptNode`. [incompatible-call]

   traversal.js:188:74
    188|     document.createNodeIterator(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                                                  ^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:3914:1
         v--------------------------------
   3914| typeof NodeFilter.FILTER_ACCEPT |
   3915| typeof NodeFilter.FILTER_REJECT |
   3916| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:189:14

Cannot call `document.createNodeIterator` because: [incompatible-call]
 - Either number [1] is incompatible with number literal `1` [2].
 - Or number [1] is incompatible with number literal `4` [3].
 - Or number [1] is incompatible with number literal `5` [4].
 - Or number [1] is incompatible with number literal `128` [5].
 - Or number [1] is incompatible with number literal `129` [6].
 - Or number [1] is incompatible with number literal `132` [7].
 - Or number [1] is incompatible with number literal `133` [8].

   traversal.js:189:14
    189|     document.createNodeIterator(document_body, -1, {}); // invalid
                      ^^^^^^^^^^^^^^^^^^

References:
   traversal.js:189:48
    189|     document.createNodeIterator(document_body, -1, {}); // invalid
                                                        ^^ [1]
   <BUILTINS>/dom.js:1236:68
   1236|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element>;
                                                                            ^ [2]
   <BUILTINS>/dom.js:1237:68
   1237|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text>;
                                                                            ^ [3]
   <BUILTINS>/dom.js:1238:68
   1238|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Text>;
                                                                            ^ [4]
   <BUILTINS>/dom.js:1239:68
   1239|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Comment>;
                                                                            ^^^ [5]
   <BUILTINS>/dom.js:1240:68
   1240|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Comment>;
                                                                            ^^^ [6]
   <BUILTINS>/dom.js:1241:68
   1241|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Comment>;
                                                                            ^^^ [7]
   <BUILTINS>/dom.js:1242:68
   1242|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                                                            ^^^ [8]


Error ---------------------------------------------------------------------------------------------- traversal.js:193:58

Cannot call `document.createTreeWalker` with function bound to `filter` because string [1] is incompatible with literal
union [2] in the return value. [incompatible-call]

   traversal.js:193:58
    193|     document.createTreeWalker(document_body, -1, node => 'accept'); // invalid
                                                                  ^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:3914:1
         v--------------------------------
   3914| typeof NodeFilter.FILTER_ACCEPT |
   3915| typeof NodeFilter.FILTER_REJECT |
   3916| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:195:72

Cannot call `document.createTreeWalker` with object literal bound to `filter` because string [1] is incompatible with
literal union [2] in the return value of property `acceptNode`. [incompatible-call]

   traversal.js:195:72
    195|     document.createTreeWalker(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                                                ^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:3914:1
         v--------------------------------
   3914| typeof NodeFilter.FILTER_ACCEPT |
   3915| typeof NodeFilter.FILTER_REJECT |
   3916| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:196:14

Cannot call `document.createTreeWalker` because: [incompatible-call]
 - Either number [1] is incompatible with number literal `1` [2].
 - Or number [1] is incompatible with number literal `4` [3].
 - Or number [1] is incompatible with number literal `5` [4].
 - Or number [1] is incompatible with number literal `128` [5].
 - Or number [1] is incompatible with number literal `129` [6].
 - Or number [1] is incompatible with number literal `132` [7].
 - Or number [1] is incompatible with number literal `133` [8].

   traversal.js:196:14
    196|     document.createTreeWalker(document_body, -1, {}); // invalid
                      ^^^^^^^^^^^^^^^^

References:
   traversal.js:196:46
    196|     document.createTreeWalker(document_body, -1, {}); // invalid
                                                      ^^ [1]
   <BUILTINS>/dom.js:1243:66
   1243|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element>;
                                                                          ^ [2]
   <BUILTINS>/dom.js:1244:66
   1244|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text>;
                                                                          ^ [3]
   <BUILTINS>/dom.js:1245:66
   1245|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Text>;
                                                                          ^ [4]
   <BUILTINS>/dom.js:1246:66
   1246|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Comment>;
                                                                          ^^^ [5]
   <BUILTINS>/dom.js:1247:66
   1247|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Comment>;
                                                                          ^^^ [6]
   <BUILTINS>/dom.js:1248:66
   1248|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Comment>;
                                                                          ^^^ [7]
   <BUILTINS>/dom.js:1249:66
   1249|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                                                          ^^^ [8]



Found 50 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
