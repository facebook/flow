Error -------------------------------------------------------------------------------- CanvasRenderingContext2D.js:11:16

Cannot call `ctx.moveTo` with `'0'` bound to `x` because string [1] is incompatible with number [2]. [incompatible-call]

   CanvasRenderingContext2D.js:11:16
     11|     ctx.moveTo('0', '1');  // error: should be numbers
                        ^^^ [1]

References:
   <BUILTINS>/dom.js:2442:13
   2442|   moveTo(x: number, y: number): void;
                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------- CanvasRenderingContext2D.js:11:21

Cannot call `ctx.moveTo` with `'1'` bound to `y` because string [1] is incompatible with number [2]. [incompatible-call]

   CanvasRenderingContext2D.js:11:21
     11|     ctx.moveTo('0', '1');  // error: should be numbers
                             ^^^ [1]

References:
   <BUILTINS>/dom.js:2442:24
   2442|   moveTo(x: number, y: number): void;
                                ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:10:45

Cannot call `ClipboardEvent` with `'invalid'` bound to `type` because string [1] is incompatible with literal union [2].
[incompatible-call]

   ClipboardEvent.js:10:45
    10|     const invalidEvent = new ClipboardEvent('invalid'); // invalid
                                                    ^^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:918:21
   918|   constructor(type: ClipboardEventTypes, eventInit?: ClipboardEvent$Init): void;
                            ^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- ClipboardEvent.js:25:7

Cannot call `ClipboardEvent` with object literal bound to `eventInit` because property `clipboardData` is missing in
object literal [1] but exists in object type [2]. [prop-missing]

   ClipboardEvent.js:25:7
    25|       {}, // invalid, clipboardData may not be omitted
              ^^ [1]

References:
   <BUILTINS>/dom.js:918:54
   918|   constructor(type: ClipboardEventTypes, eventInit?: ClipboardEvent$Init): void;
                                                             ^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:27:64

Cannot call `ClipboardEvent` with object literal bound to `eventInit` because in property `clipboardData`:
[incompatible-call]
 - Either object literal [1] is incompatible with `DataTransfer` [2].
 - Or object literal [1] is incompatible with null [3].

   ClipboardEvent.js:27:64
                                                                       v
    27|     const invalid2 = new ClipboardEvent('cut', {clipboardData: {
    28|       'text/plain': 'thats not how you do it'}}); // invalid
              ---------------------------------------^ [1]

References:
   <BUILTINS>/dom.js:913:18
   913|   clipboardData: DataTransfer | null,
                         ^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:913:33
   913|   clipboardData: DataTransfer | null,
                                        ^^^^ [3]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:32:23

Cannot call `e.clipboardData.getData` because property `getData` is missing in null or undefined [1]. [incompatible-use]

   ClipboardEvent.js:32:23
    32|       e.clipboardData.getData('text/plain'); // invalid: null check required
                              ^^^^^^^

References:
   <BUILTINS>/dom.js:919:19
   919|   +clipboardData: ?DataTransfer; // readonly
                          ^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------- Element.js:14:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because: [incompatible-call]
 - Either string [1] is incompatible with literal union [2] in property `behavior`.
 - Or object literal [3] is incompatible with boolean [4].

   Element.js:14:28
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^^^^ [3]

References:
   Element.js:14:40
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                                ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1887:22
   1887|          behavior?: ('auto' | 'instant' | 'smooth'),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1886:25
   1886|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [4]


Error ------------------------------------------------------------------------------------------------- Element.js:15:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because: [incompatible-call]
 - Either string [1] is incompatible with literal union [2] in property `block`.
 - Or object literal [3] is incompatible with boolean [4].

   Element.js:15:28
     15|     element.scrollIntoView({ block: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^ [3]

References:
   Element.js:15:37
     15|     element.scrollIntoView({ block: 'invalid' });
                                             ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1888:19
   1888|          block?: ('start' | 'center' | 'end' | 'nearest'),
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1886:25
   1886|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [4]


Error ------------------------------------------------------------------------------------------------- Element.js:16:28

Cannot call `element.scrollIntoView` with `1` bound to `arg` because: [incompatible-call]
 - Either number [1] is incompatible with boolean [2].
 - Or number [1] is incompatible with object type [3].

   Element.js:16:28
     16|     element.scrollIntoView(1);
                                    ^ [1]

References:
   <BUILTINS>/dom.js:1886:25
   1886|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [2]
   <BUILTINS>/dom.js:1886:35
                                           v
   1886|   scrollIntoView(arg?: (boolean | {
   1887|          behavior?: ('auto' | 'instant' | 'smooth'),
   1888|          block?: ('start' | 'center' | 'end' | 'nearest'),
   1889|          inline?: ('start' | 'center' | 'end' | 'nearest'),
   1890|          ...
   1891|   })): void;
           ^ [3]


Error ------------------------------------------------------------------------------------------- HTMLCollection.js:10:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLCollection.js:10:4
     10| el.className // invalid
            ^^^^^^^^^

References:
   <BUILTINS>/dom.js:1040:56
   1040|   item(nameOrIndex?: any, optionalIndex?: any): Elem | null;
                                                                ^^^^ [1]


Error ------------------------------------------------------------------------------------------- HTMLCollection.js:14:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLCollection.js:14:4
     14| el.className // invalid
            ^^^^^^^^^

References:
   <BUILTINS>/dom.js:1041:35
   1041|   namedItem(name: string): Elem | null;
                                           ^^^^ [1]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:9:27

Cannot call `element.hasAttributes` because no arguments are expected by function type [1]. [extra-arg]

   HTMLElement.js:9:27
      9|     element.hasAttributes('foo', 'bar');
                                   ^^^^^

References:
   <BUILTINS>/dom.js:1874:3
   1874|   hasAttributes(): boolean;
           ^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:22:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because: [incompatible-call]
 - Either string [1] is incompatible with literal union [2] in property `behavior`.
 - Or object literal [3] is incompatible with boolean [4].

   HTMLElement.js:22:28
     22|     element.scrollIntoView({behavior: 'invalid'});
                                    ^^^^^^^^^^^^^^^^^^^^^ [3]

References:
   HTMLElement.js:22:39
     22|     element.scrollIntoView({behavior: 'invalid'});
                                               ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1887:22
   1887|          behavior?: ('auto' | 'instant' | 'smooth'),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1886:25
   1886|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [4]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:23:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because: [incompatible-call]
 - Either string [1] is incompatible with literal union [2] in property `block`.
 - Or object literal [3] is incompatible with boolean [4].

   HTMLElement.js:23:28
     23|     element.scrollIntoView({block: 'invalid'});
                                    ^^^^^^^^^^^^^^^^^^ [3]

References:
   HTMLElement.js:23:36
     23|     element.scrollIntoView({block: 'invalid'});
                                            ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1888:19
   1888|          block?: ('start' | 'center' | 'end' | 'nearest'),
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1886:25
   1886|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [4]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:24:28

Cannot call `element.scrollIntoView` with `1` bound to `arg` because: [incompatible-call]
 - Either number [1] is incompatible with boolean [2].
 - Or number [1] is incompatible with object type [3].

   HTMLElement.js:24:28
     24|     element.scrollIntoView(1);
                                    ^ [1]

References:
   <BUILTINS>/dom.js:1886:25
   1886|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [2]
   <BUILTINS>/dom.js:1886:35
                                           v
   1886|   scrollIntoView(arg?: (boolean | {
   1887|          behavior?: ('auto' | 'instant' | 'smooth'),
   1888|          block?: ('start' | 'center' | 'end' | 'nearest'),
   1889|          inline?: ('start' | 'center' | 'end' | 'nearest'),
   1890|          ...
   1891|   })): void;
           ^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:46:6

Cannot cast `element.getElementsByTagName(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible with
`HTMLElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:46:6
     46|     (element.getElementsByTagName(str): HTMLCollection<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:46:56
     46|     (element.getElementsByTagName(str): HTMLCollection<HTMLAnchorElement>);
                                                                ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1817:54
   1817|   getElementsByTagName(name: string): HTMLCollection<HTMLElement>;
                                                              ^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1037:31
   1037| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:47:6

Cannot cast `element.getElementsByTagNameNS(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible
with `HTMLElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:47:6
              v------------------------------
     47|     (element.getElementsByTagNameNS(
     48|       null,
     49|       str,
     50|     ): HTMLCollection<HTMLAnchorElement>);
             ^

References:
   HTMLElement.js:50:23
     50|     ): HTMLCollection<HTMLAnchorElement>);
                               ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1871:90
   1871|   getElementsByTagNameNS(namespaceURI: string | null, localName: string): HTMLCollection<HTMLElement>;
                                                                                                  ^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1037:31
   1037| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:51:6

Cannot cast `element.querySelector(...)` to union type because: [incompatible-cast]
 - Either `HTMLElement` [1] is incompatible with `HTMLAnchorElement` [2].
 - Or `HTMLElement` [1] is incompatible with null [3].

   HTMLElement.js:51:6
     51|     (element.querySelector(str): HTMLAnchorElement | null);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1977:36
   1977|   querySelector(selector: string): HTMLElement | null;
                                            ^^^^^^^^^^^ [1]
   HTMLElement.js:51:34
     51|     (element.querySelector(str): HTMLAnchorElement | null);
                                          ^^^^^^^^^^^^^^^^^ [2]
   HTMLElement.js:51:54
     51|     (element.querySelector(str): HTMLAnchorElement | null);
                                                              ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:52:6

Cannot cast `element.querySelectorAll(...)` to `NodeList` because `HTMLAnchorElement` [1] is incompatible with
`HTMLElement` [2] in type argument `T` [3]. [incompatible-cast]

   HTMLElement.js:52:6
     52|     (element.querySelectorAll(str): NodeList<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:52:46
     52|     (element.querySelectorAll(str): NodeList<HTMLAnchorElement>);
                                                      ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:2041:48
   2041|   querySelectorAll(selector: string): NodeList<HTMLElement>;
                                                        ^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1001:24
   1001| declare class NodeList<T> {
                                ^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:55:6

Cannot cast `element.getElementsByTagName(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible with
`HTMLDivElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:55:6
     55|     (element.getElementsByTagName('div'): HTMLCollection<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:55:58
     55|     (element.getElementsByTagName('div'): HTMLCollection<HTMLAnchorElement>);
                                                                  ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1776:53
   1776|   getElementsByTagName(name: 'div'): HTMLCollection<HTMLDivElement>;
                                                             ^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1037:31
   1037| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:56:6

Cannot cast `element.getElementsByTagNameNS(...)` to `HTMLCollection` because `HTMLAnchorElement` [1] is incompatible
with `HTMLDivElement` [2] in type argument `Elem` [3]. [incompatible-cast]

   HTMLElement.js:56:6
              v------------------------------
     56|     (element.getElementsByTagNameNS(
     57|       null,
     58|       'div',
     59|     ): HTMLCollection<HTMLAnchorElement>);
             ^

References:
   HTMLElement.js:59:23
     59|     ): HTMLCollection<HTMLAnchorElement>);
                               ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1830:89
   1830|   getElementsByTagNameNS(namespaceURI: string | null, localName: 'div'): HTMLCollection<HTMLDivElement>;
                                                                                                 ^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1037:31
   1037| declare class HTMLCollection<+Elem: HTMLElement> {
                                       ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:60:6

Cannot cast `element.querySelector(...)` to union type because: [incompatible-cast]
 - Either `HTMLDivElement` [1] is incompatible with `HTMLAnchorElement` [2].
 - Or `HTMLDivElement` [1] is incompatible with null [3].

   HTMLElement.js:60:6
     60|     (element.querySelector('div'): HTMLAnchorElement | null);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1930:35
   1930|   querySelector(selector: 'div'): HTMLDivElement | null;
                                           ^^^^^^^^^^^^^^ [1]
   HTMLElement.js:60:36
     60|     (element.querySelector('div'): HTMLAnchorElement | null);
                                            ^^^^^^^^^^^^^^^^^ [2]
   HTMLElement.js:60:56
     60|     (element.querySelector('div'): HTMLAnchorElement | null);
                                                                ^^^^ [3]


Error ---------------------------------------------------------------------------------------------- HTMLElement.js:61:6

Cannot cast `element.querySelectorAll(...)` to `NodeList` because `HTMLAnchorElement` [1] is incompatible with
`HTMLDivElement` [2] in type argument `T` [3]. [incompatible-cast]

   HTMLElement.js:61:6
     61|     (element.querySelectorAll('div'): NodeList<HTMLAnchorElement>);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:61:48
     61|     (element.querySelectorAll('div'): NodeList<HTMLAnchorElement>);
                                                        ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1994:47
   1994|   querySelectorAll(selector: 'div'): NodeList<HTMLDivElement>;
                                                       ^^^^^^^^^^^^^^ [2]
   <BUILTINS>/dom.js:1001:24
   1001| declare class NodeList<T> {
                                ^ [3]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:72:35

Cannot call `element.focus` with object literal bound to `options` because string [1] is incompatible with boolean [2]
in property `preventScroll`. [incompatible-call]

   HTMLElement.js:72:35
     72|     element.focus({preventScroll: 'invalid'});
                                           ^^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:1698:39
   1698| type FocusOptions = { preventScroll?: boolean, ... }
                                               ^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:73:19

Cannot call `element.focus` with `1` bound to `options` because number [1] is incompatible with `FocusOptions` [2].
[incompatible-call]

   HTMLElement.js:73:19
     73|     element.focus(1);
                           ^ [1]

References:
   <BUILTINS>/dom.js:2053:19
   2053|   focus(options?: FocusOptions): void;
                           ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ HTMLFormElement.js:23:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLFormElement.js:23:4
     23| el.className // invalid
            ^^^^^^^^^

References:
   <BUILTINS>/dom.js:3371:43
   3371|   [index: number | string]: HTMLElement | null;
                                                   ^^^^ [1]


Error ------------------------------------------------------------------------------------------ HTMLFormElement.js:27:4

Cannot get `el.className` because property `className` is missing in null [1]. [incompatible-use]

   HTMLFormElement.js:27:4
     27| el.className // invalid
            ^^^^^^^^^

References:
   <BUILTINS>/dom.js:3371:43
   3371|   [index: number | string]: HTMLElement | null;
                                                   ^^^^ [1]


Error ------------------------------------------------------------------------------------------ HTMLInputElement.js:7:8

Cannot call `el.setRangeText` because: [incompatible-call]
 - Either number [1] is incompatible with undefined [2].
 - Or function type [3] requires another argument from call of method `setRangeText` [4].

   HTMLInputElement.js:7:8
      7|     el.setRangeText('foo', 123); // end is required
                ^^^^^^^^^^^^

References:
   HTMLInputElement.js:7:28
      7|     el.setRangeText('foo', 123); // end is required
                                    ^^^ [1]
   <BUILTINS>/dom.js:3756:45
   3756|   setRangeText(replacement: string, start?: void, end?: void, selectMode?: void): void;
                                                     ^^^^ [2]
   <BUILTINS>/dom.js:3757:3
   3757|   setRangeText(replacement: string, start: number, end: number, selectMode?: SelectionMode): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   HTMLInputElement.js:7:5
      7|     el.setRangeText('foo', 123); // end is required
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error ----------------------------------------------------------------------------------------- HTMLInputElement.js:10:8

Cannot call `el.setRangeText` because: [incompatible-call]
 - Either string [1] is incompatible with literal union [2].
 - Or number [3] is incompatible with undefined [4].

   HTMLInputElement.js:10:8
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
                ^^^^^^^^^^^^

References:
   HTMLInputElement.js:10:38
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
                                              ^^^^^^^ [1]
   <BUILTINS>/dom.js:3757:78
   3757|   setRangeText(replacement: string, start: number, end: number, selectMode?: SelectionMode): void;
                                                                                      ^^^^^^^^^^^^^ [2]
   HTMLInputElement.js:10:28
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
                                    ^^^ [3]
   <BUILTINS>/dom.js:3756:45
   3756|   setRangeText(replacement: string, start?: void, end?: void, selectMode?: void): void;
                                                     ^^^^ [4]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:11:6

Cannot get `form.action` because property `action` is missing in null [1]. [incompatible-use]

   HTMLSelectElement.js:11:6
     11| form.action // invalid
              ^^^^^^

References:
   <BUILTINS>/dom.js:3820:27
   3820|   form: HTMLFormElement | null;
                                   ^^^^ [1]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:19:6

Cannot get `item.value` because property `value` is missing in null [1]. [incompatible-use]

   HTMLSelectElement.js:19:6
     19| item.value // invalid
              ^^^^^

References:
   <BUILTINS>/dom.js:3838:44
   3838|   item(index: number): HTMLOptionElement | null;
                                                    ^^^^ [1]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:22:6

Cannot get `item.value` because property `value` is missing in null [1]. [incompatible-use]

   HTMLSelectElement.js:22:6
     22| item.value // invalid
              ^^^^^

References:
   <BUILTINS>/dom.js:3839:48
   3839|   namedItem(name: string): HTMLOptionElement | null;
                                                        ^^^^ [1]


Error --------------------------------------------------------------------------------------------- NamedNodeMap.js:9:16

Cannot get `attributes[null]` because: [incompatible-type]
 - Either null [1] is incompatible with number [2].
 - Or null [1] is incompatible with string [3].

   NamedNodeMap.js:9:16
      9|     attributes[null];
                        ^^^^ [1]

References:
   <BUILTINS>/dom.js:1018:11
   1018|   [index: number | string]: Attr;
                   ^^^^^^ [2]
   <BUILTINS>/dom.js:1018:20
   1018|   [index: number | string]: Attr;
                            ^^^^^^ [3]


Error -------------------------------------------------------------------------------------------- NamedNodeMap.js:10:16

Cannot get `attributes[{...}]` because: [incompatible-type]
 - Either object literal [1] is incompatible with number [2].
 - Or object literal [1] is incompatible with string [3].

   NamedNodeMap.js:10:16
     10|     attributes[{}];
                        ^^ [1]

References:
   <BUILTINS>/dom.js:1018:11
   1018|   [index: number | string]: Attr;
                   ^^^^^^ [2]
   <BUILTINS>/dom.js:1018:20
   1018|   [index: number | string]: Attr;
                            ^^^^^^ [3]


Error ----------------------------------------------------------------------------------------------- ShadowRoot.js:7:10

Cannot assign `true` to `root.delegatesFocus` because property `delegatesFocus` is not writable. [cannot-write]

   7|     root.delegatesFocus = true;
               ^^^^^^^^^^^^^^


Error ---------------------------------------------------------------------------------------------- ShadowRoot.js:13:10

Cannot assign `element` to `root.host` because property `host` is not writable. [cannot-write]

   13|     root.host = element;
                ^^^^


Error ---------------------------------------------------------------------------------------------- ShadowRoot.js:21:22

Cannot assign `true` to `root.innerHTML` because: [incompatible-type]
 - Either boolean [1] is incompatible with string [2].
 - Or boolean [1] is incompatible with `TrustedHTML` [3].

   ShadowRoot.js:21:22
    21|     root.innerHTML = true;
                             ^^^^ [1]

References:
   <BUILTINS>/dom.js:157:24
   157|   set innerHTML(value: string | TrustedHTML): void;
                               ^^^^^^ [2]
   <BUILTINS>/dom.js:157:33
   157|   set innerHTML(value: string | TrustedHTML): void;
                                        ^^^^^^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------- ShadowRoot.js:27:10

Cannot assign `'open'` to `root.mode` because property `mode` is not writable. [cannot-write]

   27|     root.mode = 'open';
                ^^^^


Error ------------------------------------------------------------------------------------------------------ URL.js:8:21

Cannot get `c.path` because property `path` is missing in `URL` [1]. [prop-missing]

   URL.js:8:21
   8| const e: string = c.path; // not correct
                          ^^^^

References:
   URL.js:5:11
   5| const c = new URL('/docs', 'http://flowtype.org/'); // correct
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- eventtarget.js:9:13

Cannot call `target.attachEvent` because undefined [1] is not a function. [not-a-function]

   eventtarget.js:9:13
     9|     (target.attachEvent('foo', listener): void); // invalid, may be undefined
                    ^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:295:17
   295|   attachEvent?: (type: string, listener: EventListener) => void;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- eventtarget.js:16:13

Cannot call `target.detachEvent` because undefined [1] is not a function. [not-a-function]

   eventtarget.js:16:13
    16|     (target.detachEvent('foo', listener): void); // invalid, may be undefined
                    ^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:313:17
   313|   detachEvent?: (type: string, listener: EventListener) => void;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- eventtarget.js:22:22

Cannot use `window` as a type because it is an `any`-typed value. Type `window` properly, so it is no longer
`any`-typed, to use it as an annotation. [value-as-type]

   22|       (event.target: window);
                            ^^^^^^


Error -------------------------------------------------------------------------------------------------- path2d.js:16:11

Cannot call `path.arcTo` because: [incompatible-call]
 - Either string [1] is incompatible with number [2].
 - Or string [1] is incompatible with undefined [3].

   path2d.js:16:11
     16|     (path.arcTo(0, 0, 0, 0, 10, '20', 5): void); // invalid
                   ^^^^^

References:
   path2d.js:16:33
     16|     (path.arcTo(0, 0, 0, 0, 10, '20', 5): void); // invalid
                                         ^^^^ [1]
   <BUILTINS>/dom.js:2307:83
   2307|   arcTo(x1: number, y1: number, x2: number, y2: number, radiusX: number, radiusY: number, rotation: number): void;
                                                                                           ^^^^^^ [2]
   <BUILTINS>/dom.js:2306:76
   2306|   arcTo(x1: number, y1: number, x2: number, y2: number, radius: number, _: void, _: void): void;
                                                                                    ^^^^ [3]


Error ----------------------------------------------------------------------------------------- registerElement.js:32:19

Cannot call `document.registerElement` with object literal bound to `options` because string [1] is incompatible with
null [2] in the second parameter of property `prototype.attributeChangedCallback`. [incompatible-call]

   registerElement.js:32:19
     32|           oldVal: string, // Error: This might be null
                           ^^^^^^ [1]

References:
   <BUILTINS>/dom.js:1058:36
   1058|                 oldAttributeValue: null,
                                            ^^^^ [2]


Error ----------------------------------------------------------------------------------------- registerElement.js:33:19

Cannot call `document.registerElement` with object literal bound to `options` because string [1] is incompatible with
null [2] in the third parameter of property `prototype.attributeChangedCallback`. [incompatible-call]

   registerElement.js:33:19
     33|           newVal: string, // Error: This might be null
                           ^^^^^^ [1]

References:
   <BUILTINS>/dom.js:1073:36
   1073|                 newAttributeValue: null,
                                            ^^^^ [2]


Error ----------------------------------------------------------------------------------------------- traversal.js:29:14

Cannot call `document.createNodeIterator` because: [incompatible-call]
 - Either object literal [1] is incompatible with `Node` [2].
 - Or function type [3] requires another argument from call of method `createNodeIterator` [4].

   traversal.js:29:14
     29|     document.createNodeIterator({}); // invalid
                      ^^^^^^^^^^^^^^^^^^

References:
   traversal.js:29:33
     29|     document.createNodeIterator({}); // invalid
                                         ^^ [1]
   <BUILTINS>/dom.js:1607:33
   1607|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow?: number, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Node>;
                                         ^^^^ [2]
   <BUILTINS>/dom.js:1596:3
   1596|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   traversal.js:29:5
     29|     document.createNodeIterator({}); // invalid
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error ----------------------------------------------------------------------------------------------- traversal.js:33:14

Cannot call `document.createTreeWalker` because: [incompatible-call]
 - Either object literal [1] is incompatible with `Node` [2].
 - Or function type [3] requires another argument from call of method `createTreeWalker` [4].

   traversal.js:33:14
     33|     document.createTreeWalker({}); // invalid
                      ^^^^^^^^^^^^^^^^

References:
   traversal.js:33:31
     33|     document.createTreeWalker({}); // invalid
                                       ^^ [1]
   <BUILTINS>/dom.js:1608:31
   1608|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow?: number, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Node>;
                                       ^^^^ [2]
   <BUILTINS>/dom.js:1603:3
   1603|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   traversal.js:33:5
     33|     document.createTreeWalker({}); // invalid
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error ---------------------------------------------------------------------------------------------- traversal.js:186:14

Cannot call `document.createNodeIterator` because: [incompatible-call]
 - Either number [1] is incompatible with number literal `2` [2].
 - Or number [1] is incompatible with number literal `256` [3].
 - Or number [1] is incompatible with number literal `257` [4].
 - Or number [1] is incompatible with number literal `260` [5].
 - Or number [1] is incompatible with number literal `261` [6].
 - Or number [1] is incompatible with number literal `384` [7].
 - Or number [1] is incompatible with number literal `385` [8].
 - Or number [1] is incompatible with number literal `388` [9].
 - Or number [1] is incompatible with number literal `389` [10].
 - Or number [1] is incompatible with number literal `512` [11].
 - Or number [1] is incompatible with number literal `513` [12].
 - Or number [1] is incompatible with number literal `516` [13].
 - Or number [1] is incompatible with number literal `517` [14].
 - Or number [1] is incompatible with number literal `640` [15].
 - Or number [1] is incompatible with number literal `641` [16].
 - Or number [1] is incompatible with number literal `644` [17].
 - Or number [1] is incompatible with number literal `645` [18].
 - Or number [1] is incompatible with number literal `768` [19].
 - Or number [1] is incompatible with number literal `769` [20].
 - Or number [1] is incompatible with number literal `772` [21].
 - Or number [1] is incompatible with number literal `773` [22].
 - Or number [1] is incompatible with number literal `896` [23].
 - Or number [1] is incompatible with number literal `897` [24].
 - Or number [1] is incompatible with number literal `900` [25].
 - Or number [1] is incompatible with number literal `901` [26].
 - Or number [1] is incompatible with number literal `1024` [27].
 - Or number [1] is incompatible with number literal `1025` [28].
 - Or number [1] is incompatible with number literal `1028` [29].
 - Or number [1] is incompatible with number literal `1029` [30].
 - Or number [1] is incompatible with number literal `1152` [31].
 - Or number [1] is incompatible with number literal `1153` [32].
 - Or number [1] is incompatible with number literal `1156` [33].
 - Or number [1] is incompatible with number literal `1157` [34].
 - Or number [1] is incompatible with number literal `1` [35].
 - Or number [1] is incompatible with number literal `4` [36].
 - Or number [1] is incompatible with number literal `5` [37].
 - Or number [1] is incompatible with number literal `128` [38].
 - Or number [1] is incompatible with number literal `129` [39].
 - Or number [1] is incompatible with number literal `132` [40].
 - Or number [1] is incompatible with number literal `133` [41].

   traversal.js:186:14
    186|     document.createNodeIterator(document_body, -1, node => 'accept'); // invalid
                      ^^^^^^^^^^^^^^^^^^

References:
   traversal.js:186:48
    186|     document.createNodeIterator(document_body, -1, node => 'accept'); // invalid
                                                        ^^ [1]
   <BUILTINS>/dom.js:1511:68
   1511|   createNodeIterator<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Attr>;
                                                                            ^ [2]
   <BUILTINS>/dom.js:1519:72
   1519|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document>;
                                                                                ^^^ [3]
   <BUILTINS>/dom.js:1520:72
   1520|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element>;
                                                                                ^^^ [4]
   <BUILTINS>/dom.js:1521:72
   1521|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text>;
                                                                                ^^^ [5]
   <BUILTINS>/dom.js:1522:72
   1522|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text>;
                                                                                ^^^ [6]
   <BUILTINS>/dom.js:1523:72
   1523|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Comment>;
                                                                                ^^^ [7]
   <BUILTINS>/dom.js:1524:72
   1524|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Comment>;
                                                                                ^^^ [8]
   <BUILTINS>/dom.js:1525:72
   1525|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text|Comment>;
                                                                                ^^^ [9]
   <BUILTINS>/dom.js:1526:72
   1526|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text|Comment>;
                                                                                ^^^ [10]
   <BUILTINS>/dom.js:1527:72
   1527|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType>;
                                                                                ^^^ [11]
   <BUILTINS>/dom.js:1528:72
   1528|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element>;
                                                                                ^^^ [12]
   <BUILTINS>/dom.js:1529:72
   1529|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text>;
                                                                                ^^^ [13]
   <BUILTINS>/dom.js:1530:72
   1530|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text>;
                                                                                ^^^ [14]
   <BUILTINS>/dom.js:1531:72
   1531|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Comment>;
                                                                                ^^^ [15]
   <BUILTINS>/dom.js:1532:72
   1532|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Comment>;
                                                                                ^^^ [16]
   <BUILTINS>/dom.js:1533:72
   1533|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text|Comment>;
                                                                                ^^^ [17]
   <BUILTINS>/dom.js:1534:72
   1534|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text|Comment>;
                                                                                ^^^ [18]
   <BUILTINS>/dom.js:1535:72
   1535|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document>;
                                                                                ^^^ [19]
   <BUILTINS>/dom.js:1536:72
   1536|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element>;
                                                                                ^^^ [20]
   <BUILTINS>/dom.js:1537:72
   1537|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text>;
                                                                                ^^^ [21]
   <BUILTINS>/dom.js:1538:72
   1538|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text>;
                                                                                ^^^ [22]
   <BUILTINS>/dom.js:1539:72
   1539|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Comment>;
                                                                                ^^^ [23]
   <BUILTINS>/dom.js:1540:72
   1540|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Comment>;
                                                                                ^^^ [24]
   <BUILTINS>/dom.js:1541:72
   1541|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text|Comment>;
                                                                                ^^^ [25]
   <BUILTINS>/dom.js:1542:72
   1542|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                                                                ^^^ [26]
   <BUILTINS>/dom.js:1570:80
   1570|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment>;
                                                                                        ^^^^ [27]
   <BUILTINS>/dom.js:1571:80
   1571|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element>;
                                                                                        ^^^^ [28]
   <BUILTINS>/dom.js:1572:80
   1572|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text>;
                                                                                        ^^^^ [29]
   <BUILTINS>/dom.js:1573:80
   1573|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text>;
                                                                                        ^^^^ [30]
   <BUILTINS>/dom.js:1574:80
   1574|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Comment>;
                                                                                        ^^^^ [31]
   <BUILTINS>/dom.js:1575:80
   1575|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Comment>;
                                                                                        ^^^^ [32]
   <BUILTINS>/dom.js:1576:80
   1576|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text|Comment>;
                                                                                        ^^^^ [33]
   <BUILTINS>/dom.js:1577:80
   1577|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                                                                        ^^^^ [34]
   <BUILTINS>/dom.js:1590:68
   1590|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element>;
                                                                            ^ [35]
   <BUILTINS>/dom.js:1591:68
   1591|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text>;
                                                                            ^ [36]
   <BUILTINS>/dom.js:1592:68
   1592|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Text>;
                                                                            ^ [37]
   <BUILTINS>/dom.js:1593:68
   1593|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Comment>;
                                                                            ^^^ [38]
   <BUILTINS>/dom.js:1594:68
   1594|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Comment>;
                                                                            ^^^ [39]
   <BUILTINS>/dom.js:1595:68
   1595|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Comment>;
                                                                            ^^^ [40]
   <BUILTINS>/dom.js:1596:68
   1596|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                                                            ^^^ [41]


Error ---------------------------------------------------------------------------------------------- traversal.js:188:14

Cannot call `document.createNodeIterator` because: [incompatible-call]
 - Either string [1] is incompatible with literal union [2] in the return value of property `acceptNode`.
 - Or number [3] is incompatible with number literal `133` [4].

   traversal.js:188:14
    188|     document.createNodeIterator(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                      ^^^^^^^^^^^^^^^^^^

References:
   traversal.js:188:74
    188|     document.createNodeIterator(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                                                  ^^^^^^^^ [1]
   <BUILTINS>/dom.js:4311:1
         v--------------------------------
   4311| typeof NodeFilter.FILTER_ACCEPT |
   4312| typeof NodeFilter.FILTER_REJECT |
   4313| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]
   traversal.js:188:48
    188|     document.createNodeIterator(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                        ^^ [3]
   <BUILTINS>/dom.js:1596:68
   1596|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                                                            ^^^ [4]


Error ---------------------------------------------------------------------------------------------- traversal.js:189:14

Cannot call `document.createNodeIterator` because: [incompatible-call]
 - Either number [1] is incompatible with number literal `2` [2].
 - Or number [1] is incompatible with number literal `256` [3].
 - Or number [1] is incompatible with number literal `257` [4].
 - Or number [1] is incompatible with number literal `260` [5].
 - Or number [1] is incompatible with number literal `261` [6].
 - Or number [1] is incompatible with number literal `384` [7].
 - Or number [1] is incompatible with number literal `385` [8].
 - Or number [1] is incompatible with number literal `388` [9].
 - Or number [1] is incompatible with number literal `389` [10].
 - Or number [1] is incompatible with number literal `512` [11].
 - Or number [1] is incompatible with number literal `513` [12].
 - Or number [1] is incompatible with number literal `516` [13].
 - Or number [1] is incompatible with number literal `517` [14].
 - Or number [1] is incompatible with number literal `640` [15].
 - Or number [1] is incompatible with number literal `641` [16].
 - Or number [1] is incompatible with number literal `644` [17].
 - Or number [1] is incompatible with number literal `645` [18].
 - Or number [1] is incompatible with number literal `768` [19].
 - Or number [1] is incompatible with number literal `769` [20].
 - Or number [1] is incompatible with number literal `772` [21].
 - Or number [1] is incompatible with number literal `773` [22].
 - Or number [1] is incompatible with number literal `896` [23].
 - Or number [1] is incompatible with number literal `897` [24].
 - Or number [1] is incompatible with number literal `900` [25].
 - Or number [1] is incompatible with number literal `901` [26].
 - Or number [1] is incompatible with number literal `1024` [27].
 - Or number [1] is incompatible with number literal `1025` [28].
 - Or number [1] is incompatible with number literal `1028` [29].
 - Or number [1] is incompatible with number literal `1029` [30].
 - Or number [1] is incompatible with number literal `1152` [31].
 - Or number [1] is incompatible with number literal `1153` [32].
 - Or number [1] is incompatible with number literal `1156` [33].
 - Or number [1] is incompatible with number literal `1157` [34].
 - Or number [1] is incompatible with number literal `1` [35].
 - Or number [1] is incompatible with number literal `4` [36].
 - Or number [1] is incompatible with number literal `5` [37].
 - Or number [1] is incompatible with number literal `128` [38].
 - Or number [1] is incompatible with number literal `129` [39].
 - Or number [1] is incompatible with number literal `132` [40].
 - Or number [1] is incompatible with number literal `133` [41].

   traversal.js:189:14
    189|     document.createNodeIterator(document_body, -1, {}); // invalid
                      ^^^^^^^^^^^^^^^^^^

References:
   traversal.js:189:48
    189|     document.createNodeIterator(document_body, -1, {}); // invalid
                                                        ^^ [1]
   <BUILTINS>/dom.js:1511:68
   1511|   createNodeIterator<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Attr>;
                                                                            ^ [2]
   <BUILTINS>/dom.js:1519:72
   1519|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document>;
                                                                                ^^^ [3]
   <BUILTINS>/dom.js:1520:72
   1520|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element>;
                                                                                ^^^ [4]
   <BUILTINS>/dom.js:1521:72
   1521|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text>;
                                                                                ^^^ [5]
   <BUILTINS>/dom.js:1522:72
   1522|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text>;
                                                                                ^^^ [6]
   <BUILTINS>/dom.js:1523:72
   1523|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Comment>;
                                                                                ^^^ [7]
   <BUILTINS>/dom.js:1524:72
   1524|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Comment>;
                                                                                ^^^ [8]
   <BUILTINS>/dom.js:1525:72
   1525|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text|Comment>;
                                                                                ^^^ [9]
   <BUILTINS>/dom.js:1526:72
   1526|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text|Comment>;
                                                                                ^^^ [10]
   <BUILTINS>/dom.js:1527:72
   1527|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType>;
                                                                                ^^^ [11]
   <BUILTINS>/dom.js:1528:72
   1528|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element>;
                                                                                ^^^ [12]
   <BUILTINS>/dom.js:1529:72
   1529|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text>;
                                                                                ^^^ [13]
   <BUILTINS>/dom.js:1530:72
   1530|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text>;
                                                                                ^^^ [14]
   <BUILTINS>/dom.js:1531:72
   1531|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Comment>;
                                                                                ^^^ [15]
   <BUILTINS>/dom.js:1532:72
   1532|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Comment>;
                                                                                ^^^ [16]
   <BUILTINS>/dom.js:1533:72
   1533|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text|Comment>;
                                                                                ^^^ [17]
   <BUILTINS>/dom.js:1534:72
   1534|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text|Comment>;
                                                                                ^^^ [18]
   <BUILTINS>/dom.js:1535:72
   1535|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document>;
                                                                                ^^^ [19]
   <BUILTINS>/dom.js:1536:72
   1536|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element>;
                                                                                ^^^ [20]
   <BUILTINS>/dom.js:1537:72
   1537|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text>;
                                                                                ^^^ [21]
   <BUILTINS>/dom.js:1538:72
   1538|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text>;
                                                                                ^^^ [22]
   <BUILTINS>/dom.js:1539:72
   1539|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Comment>;
                                                                                ^^^ [23]
   <BUILTINS>/dom.js:1540:72
   1540|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Comment>;
                                                                                ^^^ [24]
   <BUILTINS>/dom.js:1541:72
   1541|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text|Comment>;
                                                                                ^^^ [25]
   <BUILTINS>/dom.js:1542:72
   1542|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                                                                ^^^ [26]
   <BUILTINS>/dom.js:1570:80
   1570|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment>;
                                                                                        ^^^^ [27]
   <BUILTINS>/dom.js:1571:80
   1571|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element>;
                                                                                        ^^^^ [28]
   <BUILTINS>/dom.js:1572:80
   1572|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text>;
                                                                                        ^^^^ [29]
   <BUILTINS>/dom.js:1573:80
   1573|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text>;
                                                                                        ^^^^ [30]
   <BUILTINS>/dom.js:1574:80
   1574|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Comment>;
                                                                                        ^^^^ [31]
   <BUILTINS>/dom.js:1575:80
   1575|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Comment>;
                                                                                        ^^^^ [32]
   <BUILTINS>/dom.js:1576:80
   1576|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text|Comment>;
                                                                                        ^^^^ [33]
   <BUILTINS>/dom.js:1577:80
   1577|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                                                                        ^^^^ [34]
   <BUILTINS>/dom.js:1590:68
   1590|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element>;
                                                                            ^ [35]
   <BUILTINS>/dom.js:1591:68
   1591|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text>;
                                                                            ^ [36]
   <BUILTINS>/dom.js:1592:68
   1592|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Text>;
                                                                            ^ [37]
   <BUILTINS>/dom.js:1593:68
   1593|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Comment>;
                                                                            ^^^ [38]
   <BUILTINS>/dom.js:1594:68
   1594|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Comment>;
                                                                            ^^^ [39]
   <BUILTINS>/dom.js:1595:68
   1595|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Comment>;
                                                                            ^^^ [40]
   <BUILTINS>/dom.js:1596:68
   1596|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                                                            ^^^ [41]


Error ---------------------------------------------------------------------------------------------- traversal.js:193:14

Cannot call `document.createTreeWalker` because: [incompatible-call]
 - Either number [1] is incompatible with number literal `2` [2].
 - Or number [1] is incompatible with number literal `256` [3].
 - Or number [1] is incompatible with number literal `257` [4].
 - Or number [1] is incompatible with number literal `260` [5].
 - Or number [1] is incompatible with number literal `261` [6].
 - Or number [1] is incompatible with number literal `384` [7].
 - Or number [1] is incompatible with number literal `385` [8].
 - Or number [1] is incompatible with number literal `388` [9].
 - Or number [1] is incompatible with number literal `389` [10].
 - Or number [1] is incompatible with number literal `512` [11].
 - Or number [1] is incompatible with number literal `513` [12].
 - Or number [1] is incompatible with number literal `516` [13].
 - Or number [1] is incompatible with number literal `517` [14].
 - Or number [1] is incompatible with number literal `640` [15].
 - Or number [1] is incompatible with number literal `641` [16].
 - Or number [1] is incompatible with number literal `644` [17].
 - Or number [1] is incompatible with number literal `645` [18].
 - Or number [1] is incompatible with number literal `768` [19].
 - Or number [1] is incompatible with number literal `769` [20].
 - Or number [1] is incompatible with number literal `772` [21].
 - Or number [1] is incompatible with number literal `773` [22].
 - Or number [1] is incompatible with number literal `896` [23].
 - Or number [1] is incompatible with number literal `897` [24].
 - Or number [1] is incompatible with number literal `900` [25].
 - Or number [1] is incompatible with number literal `901` [26].
 - Or number [1] is incompatible with number literal `1024` [27].
 - Or number [1] is incompatible with number literal `1025` [28].
 - Or number [1] is incompatible with number literal `1028` [29].
 - Or number [1] is incompatible with number literal `1029` [30].
 - Or number [1] is incompatible with number literal `1152` [31].
 - Or number [1] is incompatible with number literal `1153` [32].
 - Or number [1] is incompatible with number literal `1156` [33].
 - Or number [1] is incompatible with number literal `1157` [34].
 - Or number [1] is incompatible with number literal `1` [35].
 - Or number [1] is incompatible with number literal `4` [36].
 - Or number [1] is incompatible with number literal `5` [37].
 - Or number [1] is incompatible with number literal `128` [38].
 - Or number [1] is incompatible with number literal `129` [39].
 - Or number [1] is incompatible with number literal `132` [40].
 - Or number [1] is incompatible with number literal `133` [41].

   traversal.js:193:14
    193|     document.createTreeWalker(document_body, -1, node => 'accept'); // invalid
                      ^^^^^^^^^^^^^^^^

References:
   traversal.js:193:46
    193|     document.createTreeWalker(document_body, -1, node => 'accept'); // invalid
                                                      ^^ [1]
   <BUILTINS>/dom.js:1512:66
   1512|   createTreeWalker<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Attr>;
                                                                          ^ [2]
   <BUILTINS>/dom.js:1543:70
   1543|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document>;
                                                                              ^^^ [3]
   <BUILTINS>/dom.js:1544:70
   1544|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element>;
                                                                              ^^^ [4]
   <BUILTINS>/dom.js:1545:70
   1545|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text>;
                                                                              ^^^ [5]
   <BUILTINS>/dom.js:1546:70
   1546|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text>;
                                                                              ^^^ [6]
   <BUILTINS>/dom.js:1547:70
   1547|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Comment>;
                                                                              ^^^ [7]
   <BUILTINS>/dom.js:1548:70
   1548|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Comment>;
                                                                              ^^^ [8]
   <BUILTINS>/dom.js:1549:70
   1549|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text|Comment>;
                                                                              ^^^ [9]
   <BUILTINS>/dom.js:1550:70
   1550|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text|Comment>;
                                                                              ^^^ [10]
   <BUILTINS>/dom.js:1551:70
   1551|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType>;
                                                                              ^^^ [11]
   <BUILTINS>/dom.js:1552:70
   1552|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element>;
                                                                              ^^^ [12]
   <BUILTINS>/dom.js:1553:70
   1553|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text>;
                                                                              ^^^ [13]
   <BUILTINS>/dom.js:1554:70
   1554|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text>;
                                                                              ^^^ [14]
   <BUILTINS>/dom.js:1555:70
   1555|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Comment>;
                                                                              ^^^ [15]
   <BUILTINS>/dom.js:1556:70
   1556|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Comment>;
                                                                              ^^^ [16]
   <BUILTINS>/dom.js:1557:70
   1557|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text|Comment>;
                                                                              ^^^ [17]
   <BUILTINS>/dom.js:1558:70
   1558|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text|Comment>;
                                                                              ^^^ [18]
   <BUILTINS>/dom.js:1559:70
   1559|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document>;
                                                                              ^^^ [19]
   <BUILTINS>/dom.js:1560:70
   1560|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element>;
                                                                              ^^^ [20]
   <BUILTINS>/dom.js:1561:70
   1561|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text>;
                                                                              ^^^ [21]
   <BUILTINS>/dom.js:1562:70
   1562|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text>;
                                                                              ^^^ [22]
   <BUILTINS>/dom.js:1563:70
   1563|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Comment>;
                                                                              ^^^ [23]
   <BUILTINS>/dom.js:1564:70
   1564|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Comment>;
                                                                              ^^^ [24]
   <BUILTINS>/dom.js:1565:70
   1565|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text|Comment>;
                                                                              ^^^ [25]
   <BUILTINS>/dom.js:1566:70
   1566|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                                                              ^^^ [26]
   <BUILTINS>/dom.js:1578:78
   1578|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment>;
                                                                                      ^^^^ [27]
   <BUILTINS>/dom.js:1579:78
   1579|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element>;
                                                                                      ^^^^ [28]
   <BUILTINS>/dom.js:1580:78
   1580|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text>;
                                                                                      ^^^^ [29]
   <BUILTINS>/dom.js:1581:78
   1581|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text>;
                                                                                      ^^^^ [30]
   <BUILTINS>/dom.js:1582:78
   1582|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Comment>;
                                                                                      ^^^^ [31]
   <BUILTINS>/dom.js:1583:78
   1583|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Comment>;
                                                                                      ^^^^ [32]
   <BUILTINS>/dom.js:1584:78
   1584|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text|Comment>;
                                                                                      ^^^^ [33]
   <BUILTINS>/dom.js:1585:78
   1585|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                                                                      ^^^^ [34]
   <BUILTINS>/dom.js:1597:66
   1597|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element>;
                                                                          ^ [35]
   <BUILTINS>/dom.js:1598:66
   1598|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text>;
                                                                          ^ [36]
   <BUILTINS>/dom.js:1599:66
   1599|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Text>;
                                                                          ^ [37]
   <BUILTINS>/dom.js:1600:66
   1600|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Comment>;
                                                                          ^^^ [38]
   <BUILTINS>/dom.js:1601:66
   1601|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Comment>;
                                                                          ^^^ [39]
   <BUILTINS>/dom.js:1602:66
   1602|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Comment>;
                                                                          ^^^ [40]
   <BUILTINS>/dom.js:1603:66
   1603|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                                                          ^^^ [41]


Error ---------------------------------------------------------------------------------------------- traversal.js:195:14

Cannot call `document.createTreeWalker` because: [incompatible-call]
 - Either string [1] is incompatible with literal union [2] in the return value of property `acceptNode`.
 - Or number [3] is incompatible with number literal `133` [4].

   traversal.js:195:14
    195|     document.createTreeWalker(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                      ^^^^^^^^^^^^^^^^

References:
   traversal.js:195:72
    195|     document.createTreeWalker(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                                                ^^^^^^^^ [1]
   <BUILTINS>/dom.js:4311:1
         v--------------------------------
   4311| typeof NodeFilter.FILTER_ACCEPT |
   4312| typeof NodeFilter.FILTER_REJECT |
   4313| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]
   traversal.js:195:46
    195|     document.createTreeWalker(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                      ^^ [3]
   <BUILTINS>/dom.js:1603:66
   1603|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                                                          ^^^ [4]


Error ---------------------------------------------------------------------------------------------- traversal.js:196:14

Cannot call `document.createTreeWalker` because: [incompatible-call]
 - Either number [1] is incompatible with number literal `2` [2].
 - Or number [1] is incompatible with number literal `256` [3].
 - Or number [1] is incompatible with number literal `257` [4].
 - Or number [1] is incompatible with number literal `260` [5].
 - Or number [1] is incompatible with number literal `261` [6].
 - Or number [1] is incompatible with number literal `384` [7].
 - Or number [1] is incompatible with number literal `385` [8].
 - Or number [1] is incompatible with number literal `388` [9].
 - Or number [1] is incompatible with number literal `389` [10].
 - Or number [1] is incompatible with number literal `512` [11].
 - Or number [1] is incompatible with number literal `513` [12].
 - Or number [1] is incompatible with number literal `516` [13].
 - Or number [1] is incompatible with number literal `517` [14].
 - Or number [1] is incompatible with number literal `640` [15].
 - Or number [1] is incompatible with number literal `641` [16].
 - Or number [1] is incompatible with number literal `644` [17].
 - Or number [1] is incompatible with number literal `645` [18].
 - Or number [1] is incompatible with number literal `768` [19].
 - Or number [1] is incompatible with number literal `769` [20].
 - Or number [1] is incompatible with number literal `772` [21].
 - Or number [1] is incompatible with number literal `773` [22].
 - Or number [1] is incompatible with number literal `896` [23].
 - Or number [1] is incompatible with number literal `897` [24].
 - Or number [1] is incompatible with number literal `900` [25].
 - Or number [1] is incompatible with number literal `901` [26].
 - Or number [1] is incompatible with number literal `1024` [27].
 - Or number [1] is incompatible with number literal `1025` [28].
 - Or number [1] is incompatible with number literal `1028` [29].
 - Or number [1] is incompatible with number literal `1029` [30].
 - Or number [1] is incompatible with number literal `1152` [31].
 - Or number [1] is incompatible with number literal `1153` [32].
 - Or number [1] is incompatible with number literal `1156` [33].
 - Or number [1] is incompatible with number literal `1157` [34].
 - Or number [1] is incompatible with number literal `1` [35].
 - Or number [1] is incompatible with number literal `4` [36].
 - Or number [1] is incompatible with number literal `5` [37].
 - Or number [1] is incompatible with number literal `128` [38].
 - Or number [1] is incompatible with number literal `129` [39].
 - Or number [1] is incompatible with number literal `132` [40].
 - Or number [1] is incompatible with number literal `133` [41].

   traversal.js:196:14
    196|     document.createTreeWalker(document_body, -1, {}); // invalid
                      ^^^^^^^^^^^^^^^^

References:
   traversal.js:196:46
    196|     document.createTreeWalker(document_body, -1, {}); // invalid
                                                      ^^ [1]
   <BUILTINS>/dom.js:1512:66
   1512|   createTreeWalker<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Attr>;
                                                                          ^ [2]
   <BUILTINS>/dom.js:1543:70
   1543|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document>;
                                                                              ^^^ [3]
   <BUILTINS>/dom.js:1544:70
   1544|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element>;
                                                                              ^^^ [4]
   <BUILTINS>/dom.js:1545:70
   1545|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text>;
                                                                              ^^^ [5]
   <BUILTINS>/dom.js:1546:70
   1546|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text>;
                                                                              ^^^ [6]
   <BUILTINS>/dom.js:1547:70
   1547|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Comment>;
                                                                              ^^^ [7]
   <BUILTINS>/dom.js:1548:70
   1548|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Comment>;
                                                                              ^^^ [8]
   <BUILTINS>/dom.js:1549:70
   1549|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text|Comment>;
                                                                              ^^^ [9]
   <BUILTINS>/dom.js:1550:70
   1550|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text|Comment>;
                                                                              ^^^ [10]
   <BUILTINS>/dom.js:1551:70
   1551|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType>;
                                                                              ^^^ [11]
   <BUILTINS>/dom.js:1552:70
   1552|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element>;
                                                                              ^^^ [12]
   <BUILTINS>/dom.js:1553:70
   1553|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text>;
                                                                              ^^^ [13]
   <BUILTINS>/dom.js:1554:70
   1554|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text>;
                                                                              ^^^ [14]
   <BUILTINS>/dom.js:1555:70
   1555|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Comment>;
                                                                              ^^^ [15]
   <BUILTINS>/dom.js:1556:70
   1556|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Comment>;
                                                                              ^^^ [16]
   <BUILTINS>/dom.js:1557:70
   1557|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text|Comment>;
                                                                              ^^^ [17]
   <BUILTINS>/dom.js:1558:70
   1558|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text|Comment>;
                                                                              ^^^ [18]
   <BUILTINS>/dom.js:1559:70
   1559|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document>;
                                                                              ^^^ [19]
   <BUILTINS>/dom.js:1560:70
   1560|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element>;
                                                                              ^^^ [20]
   <BUILTINS>/dom.js:1561:70
   1561|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text>;
                                                                              ^^^ [21]
   <BUILTINS>/dom.js:1562:70
   1562|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text>;
                                                                              ^^^ [22]
   <BUILTINS>/dom.js:1563:70
   1563|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Comment>;
                                                                              ^^^ [23]
   <BUILTINS>/dom.js:1564:70
   1564|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Comment>;
                                                                              ^^^ [24]
   <BUILTINS>/dom.js:1565:70
   1565|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text|Comment>;
                                                                              ^^^ [25]
   <BUILTINS>/dom.js:1566:70
   1566|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                                                              ^^^ [26]
   <BUILTINS>/dom.js:1578:78
   1578|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment>;
                                                                                      ^^^^ [27]
   <BUILTINS>/dom.js:1579:78
   1579|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element>;
                                                                                      ^^^^ [28]
   <BUILTINS>/dom.js:1580:78
   1580|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text>;
                                                                                      ^^^^ [29]
   <BUILTINS>/dom.js:1581:78
   1581|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text>;
                                                                                      ^^^^ [30]
   <BUILTINS>/dom.js:1582:78
   1582|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Comment>;
                                                                                      ^^^^ [31]
   <BUILTINS>/dom.js:1583:78
   1583|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Comment>;
                                                                                      ^^^^ [32]
   <BUILTINS>/dom.js:1584:78
   1584|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text|Comment>;
                                                                                      ^^^^ [33]
   <BUILTINS>/dom.js:1585:78
   1585|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                                                                      ^^^^ [34]
   <BUILTINS>/dom.js:1597:66
   1597|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element>;
                                                                          ^ [35]
   <BUILTINS>/dom.js:1598:66
   1598|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text>;
                                                                          ^ [36]
   <BUILTINS>/dom.js:1599:66
   1599|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Text>;
                                                                          ^ [37]
   <BUILTINS>/dom.js:1600:66
   1600|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Comment>;
                                                                          ^^^ [38]
   <BUILTINS>/dom.js:1601:66
   1601|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Comment>;
                                                                          ^^^ [39]
   <BUILTINS>/dom.js:1602:66
   1602|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Comment>;
                                                                          ^^^ [40]
   <BUILTINS>/dom.js:1603:66
   1603|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                                                          ^^^ [41]



Found 53 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
