Error -------------------------------------------------------------------------------- CanvasRenderingContext2D.js:11:16

Cannot call `ctx.moveTo` with `'0'` bound to `x` because string [1] is incompatible with number [2].

   CanvasRenderingContext2D.js:11:16
     11|     ctx.moveTo('0', '1');  // error: should be numbers
                        ^^^ [1]

References:
   <BUILTINS>/dom.js:2016:13
   2016|   moveTo(x: number, y: number): void;
                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------- CanvasRenderingContext2D.js:11:21

Cannot call `ctx.moveTo` with `'1'` bound to `y` because string [1] is incompatible with number [2].

   CanvasRenderingContext2D.js:11:21
     11|     ctx.moveTo('0', '1');  // error: should be numbers
                             ^^^ [1]

References:
   <BUILTINS>/dom.js:2016:24
   2016|   moveTo(x: number, y: number): void;
                                ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:10:45

Cannot call `ClipboardEvent` with `'invalid'` bound to `type` because string [1] is incompatible with enum [2].

   ClipboardEvent.js:10:45
    10|     const invalidEvent = new ClipboardEvent('invalid'); // invalid
                                                    ^^^^^^^^^ [1]

References:
   <BUILTINS>/dom.js:550:21
   550|   constructor(type: ClipboardEventTypes, eventInit?: ClipboardEvent$Init): void;
                            ^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- ClipboardEvent.js:25:7

Cannot call `ClipboardEvent` with object literal bound to `eventInit` because property `clipboardData` is missing in
object literal [1] but exists in object type [2].

   ClipboardEvent.js:25:7
    25|       {}, // invalid, clipboardData may not be omitted
              ^^ [1]

References:
   <BUILTINS>/dom.js:547:41
   547| type ClipboardEvent$Init = Event$Init & { clipboardData: DataTransfer | null, ... };
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ ClipboardEvent.js:27:48

Cannot call `ClipboardEvent` with object literal bound to `eventInit` because object literal [1] is incompatible with
`DataTransfer` [2] in property `clipboardData`.

   ClipboardEvent.js:27:48
                                                       v----------------
    27|     const invalid2 = new ClipboardEvent('cut', {clipboardData: {
    28|       'text/plain': 'thats not how you do it'}}); // invalid
              ----------------------------------------^

References:
   ClipboardEvent.js:27:64
                                                                       v
    27|     const invalid2 = new ClipboardEvent('cut', {clipboardData: {
    28|       'text/plain': 'thats not how you do it'}}); // invalid
              ---------------------------------------^ [1]
   <BUILTINS>/dom.js:547:58
   547| type ClipboardEvent$Init = Event$Init & { clipboardData: DataTransfer | null, ... };
                                                                 ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- ClipboardEvent.js:32:7

Cannot call `e.clipboardData.getData` because property `getData` is missing in null or undefined [1].

   ClipboardEvent.js:32:7
    32|       e.clipboardData.getData('text/plain'); // invalid: null check required
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:551:19
   551|   +clipboardData: ?DataTransfer; // readonly
                          ^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------- Element.js:14:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with enum [2]
in property `behavior`.

   Element.js:14:28
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^^^^

References:
   Element.js:14:40
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                                ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1478:22
   1478|          behavior?: ('auto' | 'instant' | 'smooth'),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- Element.js:15:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with enum [2]
in property `block`.

   Element.js:15:28
     15|     element.scrollIntoView({ block: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^

References:
   Element.js:15:37
     15|     element.scrollIntoView({ block: 'invalid' });
                                             ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1479:19
   1479|          block?: ('start' | 'center' | 'end' | 'nearest'),
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- Element.js:16:28

Cannot call `element.scrollIntoView` with `1` bound to `arg` because number [1] is incompatible with boolean [2].

   Element.js:16:28
     16|     element.scrollIntoView(1);
                                    ^ [1]

References:
   <BUILTINS>/dom.js:1477:25
   1477|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- HTMLCollection.js:10:1

Cannot get `el.className` because property `className` is missing in null [1].

   HTMLCollection.js:10:1
    10| el.className // invalid
        ^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:671:56
   671|   item(nameOrIndex?: any, optionalIndex?: any): Elem | null;
                                                               ^^^^ [1]


Error ------------------------------------------------------------------------------------------- HTMLCollection.js:14:1

Cannot get `el.className` because property `className` is missing in null [1].

   HTMLCollection.js:14:1
    14| el.className // invalid
        ^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:672:35
   672|   namedItem(name: string): Elem | null;
                                          ^^^^ [1]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:14:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with enum [2]
in property `behavior`.

   HTMLElement.js:14:28
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:14:40
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                                ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1478:22
   1478|          behavior?: ('auto' | 'instant' | 'smooth'),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:15:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with enum [2]
in property `block`.

   HTMLElement.js:15:28
     15|     element.scrollIntoView({ block: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:15:37
     15|     element.scrollIntoView({ block: 'invalid' });
                                             ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1479:19
   1479|          block?: ('start' | 'center' | 'end' | 'nearest'),
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:16:28

Cannot call `element.scrollIntoView` with `1` bound to `arg` because number [1] is incompatible with boolean [2].

   HTMLElement.js:16:28
     16|     element.scrollIntoView(1);
                                    ^ [1]

References:
   <BUILTINS>/dom.js:1477:25
   1477|   scrollIntoView(arg?: (boolean | {
                                 ^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:27:19

Cannot call `element.focus` with object literal bound to `options` because string [1] is incompatible with boolean [2]
in property `preventScroll`.

   HTMLElement.js:27:19
     27|     element.focus({ preventScroll: 'invalid' });
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:27:36
     27|     element.focus({ preventScroll: 'invalid' });
                                            ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1301:39
   1301| type FocusOptions = { preventScroll?: boolean, ... }
                                               ^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:28:19

Cannot call `element.focus` with `1` bound to `options` because number [1] is incompatible with `FocusOptions` [2].

   HTMLElement.js:28:19
     28|     element.focus(1);
                           ^ [1]

References:
   <BUILTINS>/dom.js:1638:19
   1638|   focus(options?: FocusOptions): void;
                           ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ HTMLFormElement.js:23:1

Cannot get `el.className` because property `className` is missing in null [1].

   HTMLFormElement.js:23:1
     23| el.className // invalid
         ^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:2945:43
   2945|   [index: number | string]: HTMLElement | null;
                                                   ^^^^ [1]


Error ------------------------------------------------------------------------------------------ HTMLFormElement.js:27:1

Cannot get `el.className` because property `className` is missing in null [1].

   HTMLFormElement.js:27:1
     27| el.className // invalid
         ^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:2945:43
   2945|   [index: number | string]: HTMLElement | null;
                                                   ^^^^ [1]


Error ------------------------------------------------------------------------------------------ HTMLInputElement.js:7:5

Cannot call `el.setRangeText` because number [1] is incompatible with undefined [2].

   HTMLInputElement.js:7:5
      7|     el.setRangeText('foo', 123); // end is required
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLInputElement.js:7:28
      7|     el.setRangeText('foo', 123); // end is required
                                    ^^^ [1]
   <BUILTINS>/dom.js:3326:45
   3326|   setRangeText(replacement: string, start?: void, end?: void, selectMode?: void): void;
                                                     ^^^^ [2]


Error ----------------------------------------------------------------------------------------- HTMLInputElement.js:10:5

Cannot call `el.setRangeText` because string [1] is incompatible with enum [2].

   HTMLInputElement.js:10:5
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLInputElement.js:10:38
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
                                              ^^^^^^^ [1]
   <BUILTINS>/dom.js:3327:78
   3327|   setRangeText(replacement: string, start: number, end: number, selectMode?: SelectionMode): void;
                                                                                      ^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:11:1

Cannot get `form.action` because property `action` is missing in null [1].

   HTMLSelectElement.js:11:1
     11| form.action // invalid
         ^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:3387:27
   3387|   form: HTMLFormElement | null;
                                   ^^^^ [1]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:19:1

Cannot get `item.value` because property `value` is missing in null [1].

   HTMLSelectElement.js:19:1
     19| item.value // invalid
         ^^^^^^^^^^

References:
   <BUILTINS>/dom.js:3405:44
   3405|   item(index: number): HTMLOptionElement | null;
                                                    ^^^^ [1]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:22:1

Cannot get `item.value` because property `value` is missing in null [1].

   HTMLSelectElement.js:22:1
     22| item.value // invalid
         ^^^^^^^^^^

References:
   <BUILTINS>/dom.js:3406:48
   3406|   namedItem(name: string): HTMLOptionElement | null;
                                                        ^^^^ [1]


Error ------------------------------------------------------------------------------------------------------ URL.js:8:19

Cannot get `c.path` because property `path` is missing in `URL` [1].

   URL.js:8:19
   8| const e: string = c.path; // not correct
                        ^^^^^^

References:
   URL.js:5:11
   5| const c = new URL('/docs', 'http://flowtype.org/'); // correct
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------- eventtarget.js:9:6

Cannot call `target.attachEvent` because undefined [1] is not a function.

   eventtarget.js:9:6
     9|     (target.attachEvent('foo', listener): void); // invalid, may be undefined
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:231:17
   231|   attachEvent?: (type: string, listener: EventListener) => void;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- eventtarget.js:16:6

Cannot call `target.detachEvent` because undefined [1] is not a function.

   eventtarget.js:16:6
    16|     (target.detachEvent('foo', listener): void); // invalid, may be undefined
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:248:17
   248|   detachEvent?: (type: string, listener: EventListener) => void;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------------- path2d.js:16:6

Cannot call `path.arcTo` because string [1] is incompatible with number [2].

   path2d.js:16:6
     16|     (path.arcTo(0, 0, 0, 0, 10, '20', 5): void); // invalid
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   path2d.js:16:33
     16|     (path.arcTo(0, 0, 0, 0, 10, '20', 5): void); // invalid
                                         ^^^^ [1]
   <BUILTINS>/dom.js:1881:83
   1881|   arcTo(x1: number, y1: number, x2: number, y2: number, radiusX: number, radiusY: number, rotation: number): void;
                                                                                           ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- registerElement.js:48:48

Cannot call `document.registerElement` with object literal bound to `options` because:
 - string [1] is incompatible with null [2] in the second argument of property `prototype.attributeChangedCallback`.
 - string [3] is incompatible with null [4] in the third argument of property `prototype.attributeChangedCallback`.

   registerElement.js:48:48
                                                       v
    48|     document.registerElement('custom-element', {
    49|       prototype: {
    50|         attributeChangedCallback(
    51|           localName: string,
    52|           oldVal: string, // Error: This might be null
    53|           newVal: string, // Error: This might be null
    54|           namespace: string) {}
    55|       },
    56|     });
            ^

References:
   registerElement.js:52:19
    52|           oldVal: string, // Error: This might be null
                          ^^^^^^ [1]
   <BUILTINS>/dom.js:689:36
   689|                 oldAttributeValue: null,
                                           ^^^^ [2]
   registerElement.js:53:19
    53|           newVal: string, // Error: This might be null
                          ^^^^^^ [3]
   <BUILTINS>/dom.js:704:36
   704|                 newAttributeValue: null,
                                           ^^^^ [4]


Error ------------------------------------------------------------------------------------------------ traversal.js:29:5

Cannot call `document.createNodeIterator` because:
 - Either object literal [1] is incompatible with `Attr` [2].
 - Or object literal [1] is incompatible with `Document` [3].
 - Or object literal [1] is incompatible with `Document` [4].
 - Or object literal [1] is incompatible with `Document` [5].
 - Or object literal [1] is incompatible with `Document` [6].
 - Or object literal [1] is incompatible with `Document` [7].
 - Or object literal [1] is incompatible with `Document` [8].
 - Or object literal [1] is incompatible with `Document` [9].
 - Or object literal [1] is incompatible with `Document` [10].
 - Or object literal [1] is incompatible with `Document` [11].
 - Or object literal [1] is incompatible with `Document` [12].
 - Or object literal [1] is incompatible with `Document` [13].
 - Or object literal [1] is incompatible with `Document` [14].
 - Or object literal [1] is incompatible with `Document` [15].
 - Or object literal [1] is incompatible with `Document` [16].
 - Or object literal [1] is incompatible with `Document` [17].
 - Or object literal [1] is incompatible with `Document` [18].
 - Or object literal [1] is incompatible with `Document` [19].
 - Or object literal [1] is incompatible with `Document` [20].
 - Or object literal [1] is incompatible with `Document` [21].
 - Or object literal [1] is incompatible with `Document` [22].
 - Or object literal [1] is incompatible with `Document` [23].
 - Or object literal [1] is incompatible with `Document` [24].
 - Or object literal [1] is incompatible with `Document` [25].
 - Or object literal [1] is incompatible with `Document` [26].
 - Or object literal [1] is incompatible with `DocumentFragment` [27].
 - Or object literal [1] is incompatible with `DocumentFragment` [28].
 - Or object literal [1] is incompatible with `DocumentFragment` [29].
 - Or object literal [1] is incompatible with `DocumentFragment` [30].
 - Or object literal [1] is incompatible with `DocumentFragment` [31].
 - Or object literal [1] is incompatible with `DocumentFragment` [32].
 - Or object literal [1] is incompatible with `DocumentFragment` [33].
 - Or object literal [1] is incompatible with `DocumentFragment` [34].
 - Or object literal [1] is incompatible with `Node` [35].
 - Or object literal [1] is incompatible with `Node` [36].
 - Or object literal [1] is incompatible with `Node` [37].
 - Or object literal [1] is incompatible with `Node` [38].
 - Or object literal [1] is incompatible with `Node` [39].
 - Or object literal [1] is incompatible with `Node` [40].
 - Or object literal [1] is incompatible with `Node` [41].
 - Or object literal [1] is incompatible with `Node` [42].

   traversal.js:29:5
     29|     document.createNodeIterator({}); // invalid
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:29:33
     29|     document.createNodeIterator({}); // invalid
                                         ^^ [1]
   <BUILTINS>/dom.js:1126:33
   1126|   createNodeIterator<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Attr>;
                                         ^^^^ [2]
   <BUILTINS>/dom.js:1134:33
   1134|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document>;
                                         ^^^^^^^^ [3]
   <BUILTINS>/dom.js:1135:33
   1135|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element>;
                                         ^^^^^^^^ [4]
   <BUILTINS>/dom.js:1136:33
   1136|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text>;
                                         ^^^^^^^^ [5]
   <BUILTINS>/dom.js:1137:33
   1137|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text>;
                                         ^^^^^^^^ [6]
   <BUILTINS>/dom.js:1138:33
   1138|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Comment>;
                                         ^^^^^^^^ [7]
   <BUILTINS>/dom.js:1139:33
   1139|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Comment>;
                                         ^^^^^^^^ [8]
   <BUILTINS>/dom.js:1140:33
   1140|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text|Comment>;
                                         ^^^^^^^^ [9]
   <BUILTINS>/dom.js:1141:33
   1141|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text|Comment>;
                                         ^^^^^^^^ [10]
   <BUILTINS>/dom.js:1142:33
   1142|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType>;
                                         ^^^^^^^^ [11]
   <BUILTINS>/dom.js:1143:33
   1143|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element>;
                                         ^^^^^^^^ [12]
   <BUILTINS>/dom.js:1144:33
   1144|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text>;
                                         ^^^^^^^^ [13]
   <BUILTINS>/dom.js:1145:33
   1145|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text>;
                                         ^^^^^^^^ [14]
   <BUILTINS>/dom.js:1146:33
   1146|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Comment>;
                                         ^^^^^^^^ [15]
   <BUILTINS>/dom.js:1147:33
   1147|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Comment>;
                                         ^^^^^^^^ [16]
   <BUILTINS>/dom.js:1148:33
   1148|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text|Comment>;
                                         ^^^^^^^^ [17]
   <BUILTINS>/dom.js:1149:33
   1149|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text|Comment>;
                                         ^^^^^^^^ [18]
   <BUILTINS>/dom.js:1150:33
   1150|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document>;
                                         ^^^^^^^^ [19]
   <BUILTINS>/dom.js:1151:33
   1151|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element>;
                                         ^^^^^^^^ [20]
   <BUILTINS>/dom.js:1152:33
   1152|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text>;
                                         ^^^^^^^^ [21]
   <BUILTINS>/dom.js:1153:33
   1153|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text>;
                                         ^^^^^^^^ [22]
   <BUILTINS>/dom.js:1154:33
   1154|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Comment>;
                                         ^^^^^^^^ [23]
   <BUILTINS>/dom.js:1155:33
   1155|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Comment>;
                                         ^^^^^^^^ [24]
   <BUILTINS>/dom.js:1156:33
   1156|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text|Comment>;
                                         ^^^^^^^^ [25]
   <BUILTINS>/dom.js:1157:33
   1157|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                         ^^^^^^^^ [26]
   <BUILTINS>/dom.js:1185:33
   1185|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment>;
                                         ^^^^^^^^^^^^^^^^ [27]
   <BUILTINS>/dom.js:1186:33
   1186|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element>;
                                         ^^^^^^^^^^^^^^^^ [28]
   <BUILTINS>/dom.js:1187:33
   1187|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text>;
                                         ^^^^^^^^^^^^^^^^ [29]
   <BUILTINS>/dom.js:1188:33
   1188|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text>;
                                         ^^^^^^^^^^^^^^^^ [30]
   <BUILTINS>/dom.js:1189:33
   1189|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Comment>;
                                         ^^^^^^^^^^^^^^^^ [31]
   <BUILTINS>/dom.js:1190:33
   1190|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Comment>;
                                         ^^^^^^^^^^^^^^^^ [32]
   <BUILTINS>/dom.js:1191:33
   1191|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text|Comment>;
                                         ^^^^^^^^^^^^^^^^ [33]
   <BUILTINS>/dom.js:1192:33
   1192|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                         ^^^^^^^^^^^^^^^^ [34]
   <BUILTINS>/dom.js:1205:33
   1205|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element>;
                                         ^^^^ [35]
   <BUILTINS>/dom.js:1206:33
   1206|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text>;
                                         ^^^^ [36]
   <BUILTINS>/dom.js:1207:33
   1207|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Text>;
                                         ^^^^ [37]
   <BUILTINS>/dom.js:1208:33
   1208|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Comment>;
                                         ^^^^ [38]
   <BUILTINS>/dom.js:1209:33
   1209|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Comment>;
                                         ^^^^ [39]
   <BUILTINS>/dom.js:1210:33
   1210|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Comment>;
                                         ^^^^ [40]
   <BUILTINS>/dom.js:1211:33
   1211|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                         ^^^^ [41]
   <BUILTINS>/dom.js:1222:33
   1222|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow?: number, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Node>;
                                         ^^^^ [42]


Error ------------------------------------------------------------------------------------------------ traversal.js:33:5

Cannot call `document.createTreeWalker` because:
 - Either object literal [1] is incompatible with `Attr` [2].
 - Or object literal [1] is incompatible with `Document` [3].
 - Or object literal [1] is incompatible with `Document` [4].
 - Or object literal [1] is incompatible with `Document` [5].
 - Or object literal [1] is incompatible with `Document` [6].
 - Or object literal [1] is incompatible with `Document` [7].
 - Or object literal [1] is incompatible with `Document` [8].
 - Or object literal [1] is incompatible with `Document` [9].
 - Or object literal [1] is incompatible with `Document` [10].
 - Or object literal [1] is incompatible with `Document` [11].
 - Or object literal [1] is incompatible with `Document` [12].
 - Or object literal [1] is incompatible with `Document` [13].
 - Or object literal [1] is incompatible with `Document` [14].
 - Or object literal [1] is incompatible with `Document` [15].
 - Or object literal [1] is incompatible with `Document` [16].
 - Or object literal [1] is incompatible with `Document` [17].
 - Or object literal [1] is incompatible with `Document` [18].
 - Or object literal [1] is incompatible with `Document` [19].
 - Or object literal [1] is incompatible with `Document` [20].
 - Or object literal [1] is incompatible with `Document` [21].
 - Or object literal [1] is incompatible with `Document` [22].
 - Or object literal [1] is incompatible with `Document` [23].
 - Or object literal [1] is incompatible with `Document` [24].
 - Or object literal [1] is incompatible with `Document` [25].
 - Or object literal [1] is incompatible with `Document` [26].
 - Or object literal [1] is incompatible with `DocumentFragment` [27].
 - Or object literal [1] is incompatible with `DocumentFragment` [28].
 - Or object literal [1] is incompatible with `DocumentFragment` [29].
 - Or object literal [1] is incompatible with `DocumentFragment` [30].
 - Or object literal [1] is incompatible with `DocumentFragment` [31].
 - Or object literal [1] is incompatible with `DocumentFragment` [32].
 - Or object literal [1] is incompatible with `DocumentFragment` [33].
 - Or object literal [1] is incompatible with `DocumentFragment` [34].
 - Or object literal [1] is incompatible with `Node` [35].
 - Or object literal [1] is incompatible with `Node` [36].
 - Or object literal [1] is incompatible with `Node` [37].
 - Or object literal [1] is incompatible with `Node` [38].
 - Or object literal [1] is incompatible with `Node` [39].
 - Or object literal [1] is incompatible with `Node` [40].
 - Or object literal [1] is incompatible with `Node` [41].
 - Or object literal [1] is incompatible with `Node` [42].

   traversal.js:33:5
     33|     document.createTreeWalker({}); // invalid
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:33:31
     33|     document.createTreeWalker({}); // invalid
                                       ^^ [1]
   <BUILTINS>/dom.js:1127:31
   1127|   createTreeWalker<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Attr>;
                                       ^^^^ [2]
   <BUILTINS>/dom.js:1158:31
   1158|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document>;
                                       ^^^^^^^^ [3]
   <BUILTINS>/dom.js:1159:31
   1159|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element>;
                                       ^^^^^^^^ [4]
   <BUILTINS>/dom.js:1160:31
   1160|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text>;
                                       ^^^^^^^^ [5]
   <BUILTINS>/dom.js:1161:31
   1161|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text>;
                                       ^^^^^^^^ [6]
   <BUILTINS>/dom.js:1162:31
   1162|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Comment>;
                                       ^^^^^^^^ [7]
   <BUILTINS>/dom.js:1163:31
   1163|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Comment>;
                                       ^^^^^^^^ [8]
   <BUILTINS>/dom.js:1164:31
   1164|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text|Comment>;
                                       ^^^^^^^^ [9]
   <BUILTINS>/dom.js:1165:31
   1165|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text|Comment>;
                                       ^^^^^^^^ [10]
   <BUILTINS>/dom.js:1166:31
   1166|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType>;
                                       ^^^^^^^^ [11]
   <BUILTINS>/dom.js:1167:31
   1167|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element>;
                                       ^^^^^^^^ [12]
   <BUILTINS>/dom.js:1168:31
   1168|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text>;
                                       ^^^^^^^^ [13]
   <BUILTINS>/dom.js:1169:31
   1169|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text>;
                                       ^^^^^^^^ [14]
   <BUILTINS>/dom.js:1170:31
   1170|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Comment>;
                                       ^^^^^^^^ [15]
   <BUILTINS>/dom.js:1171:31
   1171|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Comment>;
                                       ^^^^^^^^ [16]
   <BUILTINS>/dom.js:1172:31
   1172|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text|Comment>;
                                       ^^^^^^^^ [17]
   <BUILTINS>/dom.js:1173:31
   1173|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text|Comment>;
                                       ^^^^^^^^ [18]
   <BUILTINS>/dom.js:1174:31
   1174|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document>;
                                       ^^^^^^^^ [19]
   <BUILTINS>/dom.js:1175:31
   1175|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element>;
                                       ^^^^^^^^ [20]
   <BUILTINS>/dom.js:1176:31
   1176|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text>;
                                       ^^^^^^^^ [21]
   <BUILTINS>/dom.js:1177:31
   1177|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text>;
                                       ^^^^^^^^ [22]
   <BUILTINS>/dom.js:1178:31
   1178|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Comment>;
                                       ^^^^^^^^ [23]
   <BUILTINS>/dom.js:1179:31
   1179|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Comment>;
                                       ^^^^^^^^ [24]
   <BUILTINS>/dom.js:1180:31
   1180|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text|Comment>;
                                       ^^^^^^^^ [25]
   <BUILTINS>/dom.js:1181:31
   1181|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                       ^^^^^^^^ [26]
   <BUILTINS>/dom.js:1193:31
   1193|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment>;
                                       ^^^^^^^^^^^^^^^^ [27]
   <BUILTINS>/dom.js:1194:31
   1194|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element>;
                                       ^^^^^^^^^^^^^^^^ [28]
   <BUILTINS>/dom.js:1195:31
   1195|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text>;
                                       ^^^^^^^^^^^^^^^^ [29]
   <BUILTINS>/dom.js:1196:31
   1196|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text>;
                                       ^^^^^^^^^^^^^^^^ [30]
   <BUILTINS>/dom.js:1197:31
   1197|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Comment>;
                                       ^^^^^^^^^^^^^^^^ [31]
   <BUILTINS>/dom.js:1198:31
   1198|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Comment>;
                                       ^^^^^^^^^^^^^^^^ [32]
   <BUILTINS>/dom.js:1199:31
   1199|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text|Comment>;
                                       ^^^^^^^^^^^^^^^^ [33]
   <BUILTINS>/dom.js:1200:31
   1200|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                       ^^^^^^^^^^^^^^^^ [34]
   <BUILTINS>/dom.js:1212:31
   1212|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element>;
                                       ^^^^ [35]
   <BUILTINS>/dom.js:1213:31
   1213|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text>;
                                       ^^^^ [36]
   <BUILTINS>/dom.js:1214:31
   1214|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Text>;
                                       ^^^^ [37]
   <BUILTINS>/dom.js:1215:31
   1215|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Comment>;
                                       ^^^^ [38]
   <BUILTINS>/dom.js:1216:31
   1216|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Comment>;
                                       ^^^^ [39]
   <BUILTINS>/dom.js:1217:31
   1217|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Comment>;
                                       ^^^^ [40]
   <BUILTINS>/dom.js:1218:31
   1218|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                       ^^^^ [41]
   <BUILTINS>/dom.js:1223:31
   1223|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow?: number, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Node>;
                                       ^^^^ [42]


Error ---------------------------------------------------------------------------------------------- traversal.js:186:52

Cannot call `document.createNodeIterator` with function bound to `filter` because string [1] is incompatible with
enum [2] in the return value.

   traversal.js:186:52
    186|     document.createNodeIterator(document_body, -1, node => 'accept'); // invalid
                                                            ^^^^^^^^^^^^^^^^

References:
   traversal.js:186:60
    186|     document.createNodeIterator(document_body, -1, node => 'accept'); // invalid
                                                                    ^^^^^^^^ [1]
   <BUILTINS>/dom.js:3869:1
         v--------------------------------
   3869| typeof NodeFilter.FILTER_ACCEPT |
   3870| typeof NodeFilter.FILTER_REJECT |
   3871| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:188:52

Cannot call `document.createNodeIterator` with object literal bound to `filter` because string [1] is incompatible with
enum [2] in the return value of property `acceptNode`.

   traversal.js:188:52
    188|     document.createNodeIterator(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:188:74
    188|     document.createNodeIterator(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                                                  ^^^^^^^^ [1]
   <BUILTINS>/dom.js:3869:1
         v--------------------------------
   3869| typeof NodeFilter.FILTER_ACCEPT |
   3870| typeof NodeFilter.FILTER_REJECT |
   3871| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ----------------------------------------------------------------------------------------------- traversal.js:189:5

Cannot call `document.createNodeIterator` because:
 - Either number [1] is incompatible with number literal `1` [2].
 - Or number [1] is incompatible with number literal `4` [3].
 - Or number [1] is incompatible with number literal `5` [4].
 - Or number [1] is incompatible with number literal `128` [5].
 - Or number [1] is incompatible with number literal `129` [6].
 - Or number [1] is incompatible with number literal `132` [7].
 - Or number [1] is incompatible with number literal `133` [8].

   traversal.js:189:5
    189|     document.createNodeIterator(document_body, -1, {}); // invalid
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:189:48
    189|     document.createNodeIterator(document_body, -1, {}); // invalid
                                                        ^^ [1]
   <BUILTINS>/dom.js:1205:68
   1205|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element>;
                                                                            ^ [2]
   <BUILTINS>/dom.js:1206:68
   1206|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text>;
                                                                            ^ [3]
   <BUILTINS>/dom.js:1207:68
   1207|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Text>;
                                                                            ^ [4]
   <BUILTINS>/dom.js:1208:68
   1208|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Comment>;
                                                                            ^^^ [5]
   <BUILTINS>/dom.js:1209:68
   1209|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Comment>;
                                                                            ^^^ [6]
   <BUILTINS>/dom.js:1210:68
   1210|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Comment>;
                                                                            ^^^ [7]
   <BUILTINS>/dom.js:1211:68
   1211|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                                                            ^^^ [8]


Error ---------------------------------------------------------------------------------------------- traversal.js:193:50

Cannot call `document.createTreeWalker` with function bound to `filter` because string [1] is incompatible with enum [2]
in the return value.

   traversal.js:193:50
    193|     document.createTreeWalker(document_body, -1, node => 'accept'); // invalid
                                                          ^^^^^^^^^^^^^^^^

References:
   traversal.js:193:58
    193|     document.createTreeWalker(document_body, -1, node => 'accept'); // invalid
                                                                  ^^^^^^^^ [1]
   <BUILTINS>/dom.js:3869:1
         v--------------------------------
   3869| typeof NodeFilter.FILTER_ACCEPT |
   3870| typeof NodeFilter.FILTER_REJECT |
   3871| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:195:50

Cannot call `document.createTreeWalker` with object literal bound to `filter` because string [1] is incompatible with
enum [2] in the return value of property `acceptNode`.

   traversal.js:195:50
    195|     document.createTreeWalker(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:195:72
    195|     document.createTreeWalker(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                                                ^^^^^^^^ [1]
   <BUILTINS>/dom.js:3869:1
         v--------------------------------
   3869| typeof NodeFilter.FILTER_ACCEPT |
   3870| typeof NodeFilter.FILTER_REJECT |
   3871| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ----------------------------------------------------------------------------------------------- traversal.js:196:5

Cannot call `document.createTreeWalker` because:
 - Either number [1] is incompatible with number literal `1` [2].
 - Or number [1] is incompatible with number literal `4` [3].
 - Or number [1] is incompatible with number literal `5` [4].
 - Or number [1] is incompatible with number literal `128` [5].
 - Or number [1] is incompatible with number literal `129` [6].
 - Or number [1] is incompatible with number literal `132` [7].
 - Or number [1] is incompatible with number literal `133` [8].

   traversal.js:196:5
    196|     document.createTreeWalker(document_body, -1, {}); // invalid
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:196:46
    196|     document.createTreeWalker(document_body, -1, {}); // invalid
                                                      ^^ [1]
   <BUILTINS>/dom.js:1212:66
   1212|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element>;
                                                                          ^ [2]
   <BUILTINS>/dom.js:1213:66
   1213|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text>;
                                                                          ^ [3]
   <BUILTINS>/dom.js:1214:66
   1214|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Text>;
                                                                          ^ [4]
   <BUILTINS>/dom.js:1215:66
   1215|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Comment>;
                                                                          ^^^ [5]
   <BUILTINS>/dom.js:1216:66
   1216|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Comment>;
                                                                          ^^^ [6]
   <BUILTINS>/dom.js:1217:66
   1217|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Comment>;
                                                                          ^^^ [7]
   <BUILTINS>/dom.js:1218:66
   1218|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                                                          ^^^ [8]



Found 37 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
