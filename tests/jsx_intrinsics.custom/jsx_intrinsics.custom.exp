main.js:12
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ React element `CustomComponent`
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                          ^^^^^^^^^^^^^^^ property `prop1`. Property not found in
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `CustomComponent`

main.js:12
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ React element `CustomComponent`
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `prop`. Property not found in
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                          ^^^^^^^^^^^^^^^ object type

main.js:15
 15: <div id={42} />; // Error: (`id` prop) number ~> string
     ^^^^^^^^^^^^^^^ props of React element `div`. This type is incompatible with
  5:   div: $JSXIntrinsic<{id: string}>,
                          ^^^^^^^^^^^^ object type. See lib: lib/jsx.js:5
  Property `id` is incompatible:
     15: <div id={42} />; // Error: (`id` prop) number ~> string
                  ^^ number. This type is incompatible with
      5:   div: $JSXIntrinsic<{id: string}>,
                                   ^^^^^^ string. See lib: lib/jsx.js:5

main.js:17
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                          ^^^^^^^^^^^^^^^^^ props of React element `div`. This type is incompatible with
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                          ^^^^^^^^^^^^ object type
  Property `id` is incompatible:
     17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                   ^^^^^^ number. This type is incompatible with
     17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                                      ^^^^^^ string

main.js:17
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                          ^^^^^^^^^^^^^^^^^ props of React element `div`. This type is incompatible with
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                          ^^^^^^^^^^^^ object type
  Property `id` is incompatible:
     17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                                      ^^^^^^ string. This type is incompatible with
     17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                   ^^^^^^ number

strings.js:10
 10: <Bad />; // Error: 'bad' not in JSXIntrinsics
     ^^^^^^^ React element `Bad`
  6: var Bad = 'bad';
               ^^^^^ property `bad`. Property not found in
 10: <Bad />; // Error: 'bad' not in JSXIntrinsics
     ^^^^^^^ object type

strings.js:11
 11: <Str />; // Error: string ~> keys of JSXIntrinsics
     ^^^^^^^ React element `Str`
  7: var Str: string = 'str';
              ^^^^^^ some string with unknown value. Property not found in
 11: <Str />; // Error: string ~> keys of JSXIntrinsics
     ^^^^^^^ object type

strings.js:14
 14: React.createElement('bad', {}); // Error: 'bad' not in JSXIntrinsics
                         ^^^^^ property `bad`. Property not found in
 14: React.createElement('bad', {}); // Error: 'bad' not in JSXIntrinsics
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type

strings.js:15
 15: React.createElement(Str, {}); // Error: string ~> keys of JSXIntrinsics
                         ^^^ some string with unknown value. Property not found in
 15: React.createElement(Str, {}); // Error: string ~> keys of JSXIntrinsics
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type


Found 9 errors
