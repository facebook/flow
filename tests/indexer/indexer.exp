Error ------------------------------------------------------------------------------------------------------- A.js:13:10

Cannot return object literal because string `foo` [1] is incompatible with number [2] in the indexer property's key.

   A.js:13:10
   13|   return { foo: "bar" }
                ^^^^^^^^^^^^^^ [1]

References:
   A.js:12:25
   12| function foo2(): {[key: number]: string} {
                               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------- A.js:18:10

Cannot return object literal because string [1] is incompatible with number [2] in property `foo`.

   A.js:18:10
   18|   return { foo: "bar" }
                ^^^^^^^^^^^^^^

References:
   A.js:18:17
   18|   return { foo: "bar" }
                       ^^^^^ [1]
   A.js:17:34
   17| function foo3(): {[key: string]: number} {
                                        ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------- A.js:23:10

Cannot return object literal because:
 - string `foo` [1] is incompatible with number [2] in the indexer property's key.
 - string [3] is incompatible with number [4] in property `foo`.

   A.js:23:10
   23|   return { foo: "bar" }
                ^^^^^^^^^^^^^^ [1]

References:
   A.js:22:25
   22| function foo4(): {[key: number]: number} {
                               ^^^^^^ [2]
   A.js:23:17
   23|   return { foo: "bar" }
                       ^^^^^ [3]
   A.js:22:34
   22| function foo4(): {[key: number]: number} {
                                        ^^^^^^ [4]


Error ------------------------------------------------------------------------------------------------------- A.js:38:10

Cannot return object literal because string [1] is incompatible with number [2] in property `foo`.

   A.js:38:10
   38|   return { foo: "bar" }
                ^^^^^^^^^^^^^^

References:
   A.js:38:17
   38|   return { foo: "bar" }
                       ^^^^^ [1]
   A.js:37:47
   37| function foo7(): {[key: string]: number; foo: number} {
                                                     ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ call.js:4:2

Cannot cast `y` to object type because:
 - object type [1] is incompatible with function prototype [2].
 - a callable signature is missing in object type [1] but exists in object type [2].

   call.js:4:2
   4| (y: {(number): string});
       ^

References:
   call.js:3:16
   3| declare var y: {[string]: boolean};
                     ^^^^^^^^^^^^^^^^^^^ [1]
   call.js:4:5
   4| (y: {(number): string});
          ^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- multiple.js:7:7

Multiple indexers are not supported.

   7|       [k2: number]: number, // error: not supported (yet)
            ^^^^^^^^^^^^^^^^^^^^


Error -------------------------------------------------------------------------------------------------- variance.js:5:2

Cannot get `w[0]` because an indexer property is not readable.

   5| (w[0]: number); //ng
       ^^^^


Error -------------------------------------------------------------------------------------------------- variance.js:8:1

Cannot assign `3` to `w[null]` because:
 - Either null [1] is incompatible with number [2].
 - Or null [1] is incompatible with string [3].

   variance.js:8:1
   8| w[null] = 3; //ng
      ^^^^^^^

References:
   variance.js:8:3
   8| w[null] = 3; //ng
        ^^^^ [1]
   variance.js:2:5
   2|   -[number | string]: number;
          ^^^^^^ [2]
   variance.js:2:14
   2|   -[number | string]: number;
                   ^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------- variance.js:15:1

Cannot assign `5.5` to `r[5]` because an indexer property is not writable.

   15| r[5] = 5.5; //ng
       ^^^^


Error ------------------------------------------------------------------------------------------------- variance.js:16:1

Cannot assign `6` to `r["another string"]` because an indexer property is not writable.

   16| r["another string"] = 6; //ng
       ^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------------------------- variance.js:17:1

Cannot assign `7` to `r[null]` because:
 - an indexer property is not writable.
 - all branches are incompatible:
    - Either null [1] is incompatible with number [2].
    - Or null [1] is incompatible with string [3].

   variance.js:17:1
   17| r[null] = 7; //ng
       ^^^^^^^

References:
   variance.js:17:3
   17| r[null] = 7; //ng
         ^^^^ [1]
   variance.js:11:5
   11|   +[number | string]: number;
           ^^^^^^ [2]
   variance.js:11:14
   11|   +[number | string]: number;
                    ^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------- variance.js:26:1

Cannot assign `11` to `rw[null]` because:
 - Either null [1] is incompatible with number [2].
 - Or null [1] is incompatible with string [3].

   variance.js:26:1
   26| rw[null] = 11; //ng
       ^^^^^^^^

References:
   variance.js:26:4
   26| rw[null] = 11; //ng
          ^^^^ [1]
   variance.js:20:4
   20|   [number | string]: number
          ^^^^^^ [2]
   variance.js:20:13
   20|   [number | string]: number
                   ^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------- variance.js:32:2

Cannot cast `b` to object type because string [1] is incompatible with number [2] in the indexer property's key.

   variance.js:32:2
   32| (b: { +[number | string]: number }); //ng
        ^

References:
   variance.js:32:18
   32| (b: { +[number | string]: number }); //ng
                        ^^^^^^ [1]
   variance.js:31:14
   31| const b: { +[number]: number } = {};
                    ^^^^^^ [2]



Found 16 errors
