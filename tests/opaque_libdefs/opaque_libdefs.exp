Error ----------------------------------------------------------------------------------------------------- test.js:8:59

Cannot return `x` because number [1] is incompatible with `Queue` [2].

   test.js:8:59
   8| function flowsSomethingToQueue(x: number): Queue { return x; } // Error number ~> Queue
                                                                ^

References:
   test.js:8:35
   8| function flowsSomethingToQueue(x: number): Queue { return x; } // Error number ~> Queue
                                        ^^^^^^ [1]
   test.js:8:44
   8| function flowsSomethingToQueue(x: number): Queue { return x; } // Error number ~> Queue
                                                 ^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:9:58

Cannot return `q` because `Queue` [1] is incompatible with number [2].

   test.js:9:58
   9| function flowsQueueToSomething(q: Queue): number {return q; } // Error Queue ~> number
                                                               ^

References:
   test.js:9:35
   9| function flowsQueueToSomething(q: Queue): number {return q; } // Error Queue ~> number
                                        ^^^^^ [1]
   test.js:9:43
   9| function flowsQueueToSomething(q: Queue): number {return q; } // Error Queue ~> number
                                                ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:13:19

Cannot call `counter_to_number` with `y` bound to `c` because number [1] is incompatible with `Counter` [2].

   test.js:13:19
   13| counter_to_number(y); // Error: number ~> Counter
                         ^

References:
   test.js:12:9
   12| var y = c + 1; // Fine, since Counter is a number.
               ^^^^^ [1]
   flow-typed/decls.js:8:39
    8| declare function counter_to_number(c: Counter): number;
                                             ^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:22:12

Cannot return `x` because number [1] is incompatible with string [2] in type argument `T` [3].

   test.js:22:12
   22|     return x; // Error: string ~> number, number ~> string
                  ^

References:
   test.js:21:45
   21| function convertNumberToString(x: PolyStack<number>): PolyStack<string> {
                                                   ^^^^^^ [1]
   test.js:21:65
   21| function convertNumberToString(x: PolyStack<number>): PolyStack<string> {
                                                                       ^^^^^^ [2]
   flow-typed/decls.js:10:38
   10| declare export opaque type PolyStack<T>;
                                            ^ [3]


Error ---------------------------------------------------------------------------------------------------- test.js:27:12

Cannot return `x` because number [1] is incompatible with string [2] in type argument `T` [3].

   test.js:27:12
   27|     return x; // Error string ~> number
                  ^

References:
   test.js:26:30
   26| function contraBad(x: Contra<number>): Contra<number | string> {
                                    ^^^^^^ [1]
   test.js:26:56
   26| function contraBad(x: Contra<number>): Contra<number | string> {
                                                              ^^^^^^ [2]
   flow-typed/decls.js:15:36
   15| declare export opaque type Contra<-T>;
                                          ^ [3]



Found 5 errors
