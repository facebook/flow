Error -------------------------------------------------------------------------------------------------------- A.js:8:10

Cannot return `f()` because string [1] is incompatible with number [2].

   A.js:8:10
   8|   return f();
               ^^^

References:
   A.js:7:21
   7| function b(f: { (): string }): number {
                          ^^^^^^ [1]
   A.js:7:32
   7| function b(f: { (): string }): number {
                                     ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------- A.js:13:12

Cannot call `f` with `"hello"` bound to `x` because string [1] is incompatible with number [2].

   A.js:13:12
   13|   return f("hello");
                  ^^^^^^^ [1]

References:
   A.js:12:21
   12| function c(f: { (x: number): number }): number {
                           ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------- A.js:18:10

Cannot call `f` because function [1] requires another argument.

   A.js:18:10
   18|   return f();
                ^^^

References:
   A.js:17:17
   17| function d(f: { (x: number): number }): number {
                       ^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------------- A.js:23:10

Cannot call `f` because a callable signature is missing in object type [1].

   A.js:23:10
   23|   return f();
                ^^^

References:
   A.js:22:15
   22| function e(f: {}): number {
                     ^^ [1]


Error ------------------------------------------------------------------------------------------------------- A.js:29:10

Cannot call `x` because a callable signature is missing in object literal [1].

   A.js:29:10
   29|   return x();
                ^^^

References:
   A.js:28:11
   28|   var x = {};
                 ^^ [1]


Error -------------------------------------------------------------------------------------------------------- B.js:5:34

Cannot assign function to `b` because string [1] is incompatible with number [2] in the return value.

   B.js:5:34
   5| var b: { (x: number): number } = function (x: number): string { return "hi"; };
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   B.js:5:56
   5| var b: { (x: number): number } = function (x: number): string { return "hi"; };
                                                             ^^^^^^ [1]
   B.js:5:23
   5| var b: { (x: number): number } = function (x: number): string { return "hi"; };
                            ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------------- B.js:8:34

Cannot assign function to `c` because number [1] is incompatible with string [2] in the first argument.

   B.js:8:34
   8| var c: { (x: string): string } = function (x: number): string { return "hi"; };
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   B.js:8:47
   8| var c: { (x: string): string } = function (x: number): string { return "hi"; };
                                                    ^^^^^^ [1]
   B.js:8:14
   8| var c: { (x: string): string } = function (x: number): string { return "hi"; };
                   ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------- B.js:11:25

Cannot assign function to `d` because function [1] requires another argument from function type [2].

   B.js:11:25
   11| var d: { (): string } = function (x: number): string { return "hi"; };
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   B.js:11:25
   11| var d: { (): string } = function (x: number): string { return "hi"; };
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   B.js:11:10
   11| var d: { (): string } = function (x: number): string { return "hi"; };
                ^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------------- C.js:8:10

Cannot return `x` because string [1] is incompatible with number [2] in the return value.

   C.js:8:10
   8|   return x;
               ^

References:
   C.js:7:30
   7| function b(x: { (z: number): string }): (z: number) => number {
                                   ^^^^^^ [1]
   C.js:7:56
   7| function b(x: { (z: number): string }): (z: number) => number {
                                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------- C.js:13:10

Cannot return `x` because number [1] is incompatible with string [2] in the first argument.

   C.js:13:10
   13|   return x;
                ^

References:
   C.js:12:21
   12| function c(x: { (z: number): string }): (z: string) => string {
                           ^^^^^^ [1]
   C.js:12:45
   12| function c(x: { (z: number): string }): (z: string) => string {
                                                   ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------- C.js:18:10

Cannot return `x` because function type [1] requires another argument from function type [2].

   C.js:18:10
   18|   return x;
                ^

References:
   C.js:17:17
   17| function d(x: { (z: number): string }): () => string {
                       ^^^^^^^^^^^^^^^^^^^ [1]
   C.js:17:41
   17| function d(x: { (z: number): string }): () => string {
                                               ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------- C.js:23:10

Cannot return `x` because a callable signature is missing in object type [1] but exists in function type [2].

   C.js:23:10
   23|   return x;
                ^

References:
   C.js:22:15
   22| function e(x: {}): () => string {
                     ^^ [1]
   C.js:22:20
   22| function e(x: {}): () => string {
                          ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------- C.js:33:10

Cannot return `x` because a callable signature is missing in object type [1] but exists in function type [2].

   C.js:33:10
   33|   return x; // error
                ^

References:
   C.js:32:15
   32| function g(x: {}): Function {
                     ^^ [1]
   C.js:32:20
   32| function g(x: {}): Function {
                          ^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------------- D.js:12:3

Cannot assign function to `c` because function [1] requires another argument from function type [2].

   D.js:12:3
   12|   function (x: number): string { return "hi"; };
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   D.js:12:3
   12|   function (x: number): string { return "hi"; };
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   D.js:11:10
   11| var c: { (): string; (x: number): string } =
                ^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------- D.js:21:10

Cannot return `x` because string [1] is incompatible with number [2] in the return value of the callable signature.

   D.js:21:10
   21|   return x;
                ^

References:
   D.js:20:21
   20| function e(x: { (): string; (x: number): string }): () => number {
                           ^^^^^^ [1]
   D.js:20:59
   20| function e(x: { (): string; (x: number): string }): () => number {
                                                                 ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------------- E.js:2:32

Cannot assign function to `a` because property `someProp` is missing in function [1] but exists in object type [2].

   E.js:2:32
   2| var a : { someProp: number } = function () {};
                                     ^^^^^^^^^^^^^^

References:
   E.js:2:32
   2| var a : { someProp: number } = function () {};
                                     ^^^^^^^^^^^ [1]
   E.js:2:9
   2| var a : { someProp: number } = function () {};
              ^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------------- F.js:6:34

Cannot assign function to `b` because string [1] is incompatible with number [2] in the return value.

   F.js:6:34
   6| var b: { (x: number): number } = (x) => "hi"
                                       ^^^^^^^^^^^

References:
   F.js:6:41
   6| var b: { (x: number): number } = (x) => "hi"
                                              ^^^^ [1]
   F.js:6:23
   6| var b: { (x: number): number } = (x) => "hi"
                            ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------------- F.js:9:41

Cannot call `x.toFixed` because property `toFixed` is missing in `String` [1].

   F.js:9:41
   9| var c: { (x: string): string } = (x) => x.toFixed()
                                              ^^^^^^^^^^^

References:
   F.js:9:14
   9| var c: { (x: string): string } = (x) => x.toFixed()
                   ^^^^^^ [1]


Error --------------------------------------------------------------------------------------------------- use_ops.js:4:2

Cannot cast `a` to `B` because a callable signature is missing in object type [1] but exists in function type [2] in
property `p`.

   use_ops.js:4:2
   4| (a: B); // error HERE and preserve use ops
       ^

References:
   use_ops.js:1:15
   1| type A = { p: {} }
                    ^^ [1]
   use_ops.js:2:16
   2| type B = { +p: () => void }
                     ^^^^^^^^^^ [2]



Found 19 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
