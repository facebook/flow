class.js:24
 24:   return D; //ng
              ^ newable D
  4:   constructor(n: number) {}
                      ^^^^^^ number. This type is incompatible with
  9:   constructor(s: string) { super(2); }
                      ^^^^^^ string

class_function.js:14
 14:   return class F_ extends X { //ng (non-newable `X`)
              ^ class expr `F_`. Cannot inherit non-newable
 14:   return class F_ extends X { //ng (non-newable `X`)
                               ^ C

class_function.js:14
 14:   return class F_ extends X { //ng (non-newable `X`)
              ^ newable class expr `F_`
  4:   constructor(n: number) {}
                      ^^^^^^ number. This type is incompatible with
 17:     constructor(s: string) {} //ng (non-subtype ctor)
                        ^^^^^^ string

class_function.js:27
 27: let g = new G("one"); //ng
             ^^^^^^^^^^^^ constructor call. This type is non-newable
 27: let g = new G("one"); //ng
                 ^ C

class_function.js:49
 49:   return class M_ extends X { //ok
              ^ newable class expr `M_`
 36:   constructor(o: {x:number, y:number}): void
                      ^^^^^^^^^^^^^^^^^^^^ object type. This type is incompatible with
 50:     constructor(n: number) {} //ng
                        ^^^^^^ number

class_function.js:61
 61: let n = new N({x1:"not a number", x2:7}); //ng
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructor call
 61: let n = new N({x1:"not a number", x2:7}); //ng
                       ^^^^^^^^^^^^^^ string. This type is incompatible with
 56:     constructor(config: {x1:number, x2:string}) {}
                                 ^^^^^^ number

class_function.js:61
 61: let n = new N({x1:"not a number", x2:7}); //ng
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructor call
 61: let n = new N({x1:"not a number", x2:7}); //ng
                                          ^ number. This type is incompatible with
 56:     constructor(config: {x1:number, x2:string}) {}
                                            ^^^^^^ string

class_function.js:62
 62: let a: string = n.m(); //ng
                     ^^^^^ number. This type is incompatible with
 62: let a: string = n.m(); //ng
            ^^^^^^ string

extends_type.js:17
 17:   return class F_ extends X { //ng (extending non-newable)
              ^ class expr `F_`. Cannot inherit non-newable
 17:   return class F_ extends X { //ng (extending non-newable)
                               ^ C

extends_type.js:17
 17:   return class F_ extends X { //ng (extending non-newable)
              ^ newable class expr `F_`
 13:   constructor(n: number): void;
                      ^^^^^^ number. This type is incompatible with
 18:     constructor(s: string) {} //ng (non-subtype ctor)
                        ^^^^^^ string

extends_type.js:31
 31: let h1 = hn(C); //ng
                 ^ newable C
 13:   constructor(n: number): void;
                      ^^^^^^ number. This type is incompatible with
  7:   constructor(s: string): void;
                      ^^^^^^ string

import.js:5
  5: let L = Ln(E); //ok
             ^^^^^ function call
  7: let ell2 = new L("not an object"); //ng
                ^^^^^^^^^^^^^^^^^^^^^^ constructor call. Constructor cannot be called on non-newable any member of intersection type
  7: let ell2 = new L("not an object"); //ng
                    ^ intersection
  Member 1:
   39: export function Ln(X: Class<Newable<C>>): Class<C> & Class<Newable<I>> {
                                                       ^ class type: C. See: class_function.js:39
  Error:
    7: let ell2 = new L("not an object"); //ng
                  ^^^^^^^^^^^^^^^^^^^^^^ constructor call. This type is non-newable
   39: export function Ln(X: Class<Newable<C>>): Class<C> & Class<Newable<I>> {
                                                       ^ C. See: class_function.js:39
  Member 2:
   39: export function Ln(X: Class<Newable<C>>): Class<C> & Class<Newable<I>> {
                                                                          ^ class type: I. See: class_function.js:39
  Error:
    7: let ell2 = new L("not an object"); //ng
                        ^^^^^^^^^^^^^^^ string. This type is incompatible with
   36:   constructor(o: {x:number, y:number}): void
                        ^^^^^^^^^^^^^^^^^^^^ object type. See: class_function.js:36

instance.js:21
 21:   return new D("five"); //ng
                  ^ newable D
  4:   constructor(n: number) {}
                      ^^^^^^ number. This type is incompatible with
  9:   constructor(s: string) { super(2); }
                      ^^^^^^ string

test.js:17
 17: var X2: Class<Newable<A>> = B; //ng
                                 ^ newable B
  4:   constructor(n: number) {}
                      ^^^^^^ number. This type is incompatible with
 10:   constructor(s: string) {
                      ^^^^^^ string

test.js:26
 26: var m: A = new a.constructor(10); //ng
                ^^^^^^^^^^^^^^^^^^^^^ constructor call. This type is non-newable
 26: var m: A = new a.constructor(10); //ng
                    ^ A

test.js:28
 28: var o: B = new e.constructor("twelve"); //ng
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructor call. This type is non-newable
 28: var o: B = new e.constructor("twelve"); //ng
                    ^ B

test.js:40
 40:   return new X("twenty five"); //ng
              ^^^^^^^^^^^^^^^^^^^^ constructor call. This type is non-newable
 40:   return new X("twenty five"); //ng
                  ^ B

test.js:43
 43:   return new X(26);
              ^^^^^^^^^ constructor call
 43:   return new X(26);
                    ^^ number. This type is incompatible with
 10:   constructor(s: string) {
                      ^^^^^^ string


Found 18 errors
