Error: test.js:7
  7: type A = $Call; // Error: one or more arguments are required.
              ^^^^^ Incorrect number of type parameters (expected at least 1)

Error: test.js:8
  8: type B = $Call<>; // Error: one or more arguments are required.
              ^^^^^^^ Incorrect number of type parameters (expected at least 1)

Error: test.js:13
 13: ((null: mixed): C); // Error: mixed ~> number
             ^^^^^ mixed. This type is incompatible with
 13: ((null: mixed): C); // Error: mixed ~> number
                     ^ number

Error: test.js:15
 15: (c: empty); // Error: number ~> empty
      ^ number. This type is incompatible with
 15: (c: empty); // Error: number ~> empty
         ^^^^^ empty

Error: test.js:19
 19: (42: D); // Error: number ~> undefined
      ^^ number. This type is incompatible with
 19: (42: D); // Error: number ~> undefined
          ^ undefined

Error: test.js:24
 24: ((null: mixed): E); // Error: mixed ~> number
             ^^^^^ mixed. This type is incompatible with
 24: ((null: mixed): E); // Error: mixed ~> number
                     ^ number

Error: test.js:26
 26: (e: empty); // Error: number ~> empty
      ^ number. This type is incompatible with
 26: (e: empty); // Error: number ~> empty
         ^^^^^ empty

Error: test.js:31
 31: ((null: mixed): F); // Error: mixed ~> number
             ^^^^^ mixed. This type is incompatible with
 31: ((null: mixed): F); // Error: mixed ~> number
                     ^ number

Error: test.js:33
 33: (f: empty); // Error: number ~> empty
      ^ number. This type is incompatible with
 33: (f: empty); // Error: number ~> empty
         ^^^^^ empty

Error: test.js:38
 38: ((null: mixed): G); // Error: mixed ~> number | string
             ^^^^^ mixed. This type is incompatible with
 38: ((null: mixed): G); // Error: mixed ~> number | string
                     ^ union: type parameter `A` of function call | type parameter `B` of function call
  Member 1:
   35: type G = $Call<Fn2, number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `A` of function call
  Error:
   38: ((null: mixed): G); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   35: type G = $Call<Fn2, number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^ number
  Member 2:
   35: type G = $Call<Fn2, number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `B` of function call
  Error:
   38: ((null: mixed): G); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   35: type G = $Call<Fn2, number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^ string

Error: test.js:39
 39: (g: number); // Error: number | string ~> number
      ^ string. This type is incompatible with
 39: (g: number); // Error: number | string ~> number
         ^^^^^^ number

Error: test.js:41
 41: (g: empty); // Error: number | string ~> empty
      ^ number. This type is incompatible with
 41: (g: empty); // Error: number | string ~> empty
         ^^^^^ empty

Error: test.js:41
 41: (g: empty); // Error: number | string ~> empty
      ^ string. This type is incompatible with
 41: (g: empty); // Error: number | string ~> empty
         ^^^^^ empty

Error: union.js:6
  6: ((null: mixed): A); // Error: mixed ~> number | string
             ^^^^^ mixed. This type is incompatible with
  6: ((null: mixed): A); // Error: mixed ~> number | string
                     ^ union: function call(s)
  Member 1:
    3: type A = $Call<(() => number) | (() => string)>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
  Error:
    6: ((null: mixed): A); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
    3: type A = $Call<(() => number) | (() => string)>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number
  Member 2:
    3: type A = $Call<(() => number) | (() => string)>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
  Error:
    6: ((null: mixed): A); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
    3: type A = $Call<(() => number) | (() => string)>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string

Error: union.js:7
  7: (a: number); // Error: number | string ~> number
      ^ string. This type is incompatible with
  7: (a: number); // Error: number | string ~> number
         ^^^^^^ number

Error: union.js:9
  9: (a: empty); // Error: number | string ~> empty
      ^ number. This type is incompatible with
  9: (a: empty); // Error: number | string ~> empty
         ^^^^^ empty

Error: union.js:9
  9: (a: empty); // Error: number | string ~> empty
      ^ string. This type is incompatible with
  9: (a: empty); // Error: number | string ~> empty
         ^^^^^ empty

Error: union.js:14
 14: ((null: mixed): B); // Error: mixed ~> number | string
             ^^^^^ mixed. This type is incompatible with
 14: ((null: mixed): B); // Error: mixed ~> number | string
                     ^ union: function call(s)
  Member 1:
   11: type B = $Call<(<T>(T) => T) | (<T>(any, T) => T), number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
  Error:
   14: ((null: mixed): B); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   11: type B = $Call<(<T>(T) => T) | (<T>(any, T) => T), number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number
  Member 2:
   11: type B = $Call<(<T>(T) => T) | (<T>(any, T) => T), number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
  Error:
   14: ((null: mixed): B); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   11: type B = $Call<(<T>(T) => T) | (<T>(any, T) => T), number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string

Error: union.js:15
 15: (b: number); // Error: number | string ~> number
      ^ string. This type is incompatible with
 15: (b: number); // Error: number | string ~> number
         ^^^^^^ number

Error: union.js:17
 17: (b: empty); // Error: number | string ~> empty
      ^ number. This type is incompatible with
 17: (b: empty); // Error: number | string ~> empty
         ^^^^^ empty

Error: union.js:17
 17: (b: empty); // Error: number | string ~> empty
      ^ string. This type is incompatible with
 17: (b: empty); // Error: number | string ~> empty
         ^^^^^ empty

Error: union.js:22
 22: ((null: mixed): C); // Error: mixed ~> number | string
             ^^^^^ mixed. This type is incompatible with
 22: ((null: mixed): C); // Error: mixed ~> number | string
                     ^ union: number | string
  Member 1:
   19: type C = $Call<<T>(T) => T, number | string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number
  Error:
   22: ((null: mixed): C); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   19: type C = $Call<<T>(T) => T, number | string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number
  Member 2:
   19: type C = $Call<<T>(T) => T, number | string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string
  Error:
   22: ((null: mixed): C); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   19: type C = $Call<<T>(T) => T, number | string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string

Error: union.js:23
 23: (c: number); // Error: number | string ~> number
      ^ string. This type is incompatible with
 23: (c: number); // Error: number | string ~> number
         ^^^^^^ number

Error: union.js:25
 25: (c: empty); // Error: number | string ~> empty
      ^ number. This type is incompatible with
 25: (c: empty); // Error: number | string ~> empty
         ^^^^^ empty

Error: union.js:25
 25: (c: empty); // Error: number | string ~> empty
      ^ string. This type is incompatible with
 25: (c: empty); // Error: number | string ~> empty
         ^^^^^ empty


Found 25 errors
