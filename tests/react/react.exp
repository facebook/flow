Error ------------------------------------------------------------------------------------------ abstractelement.js:13:3

Cannot get `e.props.a` because property `a` is missing in mixed [1].

   abstractelement.js:13:3
    13|   e.props.a; // error
          ^^^^^^^^^

References:
   <BUILTINS>/react.js:184:49
   184| declare type React$MixedElement = React$Element<React$ElementType>;
                                                        ^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------- createContext.js:17:15

Cannot create `Consumer` element because enum [1] is incompatible with string [2] in the first argument of property
`children`.

   createContext.js:17:15
                     v---------
   17|               <Consumer>
   18|                 {(Tag: 'div' | 'span' | 'img') => <Tag />}
   19|               </Consumer>
                     ----------^

References:
   createContext.js:18:24
   18|                 {(Tag: 'div' | 'span' | 'img') => <Tag />}
                              ^^^^^^^^^^^^^^^^^^^^^^ [1]
   createContext.js:22:27
   22|           <Provider value='spam'> {/* Error: enum is incompatible with string */}
                                 ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- createContext.js:23:13

Cannot create `Consumer` element because enum [1] is incompatible with string [2] in the first argument of property
`children`.

   createContext.js:23:13
                   v---------
   23|             <Consumer>
   24|               {(Tag: 'div' | 'span' | 'img') => <Tag />}
   25|             </Consumer>
                   ----------^

References:
   createContext.js:24:22
   24|               {(Tag: 'div' | 'span' | 'img') => <Tag />}
                            ^^^^^^^^^^^^^^^^^^^^^^ [1]
   createContext.js:22:27
   22|           <Provider value='spam'> {/* Error: enum is incompatible with string */}
                                 ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- createContext.js:33:44

Cannot assign `this.divRef.current` to `image` because `HTMLDivElement` [1] is incompatible with `HTMLImageElement` [2].

   createContext.js:33:44
   33|       var image: null | HTMLImageElement = this.divRef.current; // Error: HTMLDivElement is incompatible with HTMLImageElement
                                                  ^^^^^^^^^^^^^^^^^^^

References:
   createContext.js:10:30
   10|     divRef: {current: null | HTMLDivElement} = React.createRef();
                                    ^^^^^^^^^^^^^^ [1]
   createContext.js:33:25
   33|       var image: null | HTMLImageElement = this.divRef.current; // Error: HTMLDivElement is incompatible with HTMLImageElement
                               ^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- createContext.js:55:24

Cannot resolve name `createContext`.

   55|   const ThemeContext = createContext("light");
                              ^^^^^^^^^^^^^


Error ------------------------------------------------------------------------ createElementRequiredProp_string.js:17:13

Cannot create `Cmp` element because property `test` is missing in props [1] but exists in object type [2].

   createElementRequiredProp_string.js:17:13
   17|     return (<Cmp/>);
                   ^^^^^^ [1]

References:
   createElementRequiredProp_string.js:4:35
    4| class Bar extends React.Component<{test: number}> {
                                         ^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- create_class.js:7:6

Cannot cast `this.props.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:7:6
     7|     (this.props.foo: empty); // error: string ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:7:22
     7|     (this.props.foo: empty); // error: string ~> empty
                             ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- create_class.js:8:6

Cannot cast `this.props.bar` to empty because number [1] is incompatible with empty [2].

   create_class.js:8:6
     8|     (this.props.bar: empty); // error: number ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:447:36
   447|   number: React$PropType$Primitive<number>,
                                           ^^^^^^ [1]
   create_class.js:8:22
     8|     (this.props.bar: empty); // error: number ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:15:14

Cannot assign `0` to `this.p` because number [1] is incompatible with string [2].

   create_class.js:15:14
   15|     this.p = 0; // error: number ~> string
                    ^ [1]

References:
   create_class.js:13:6
   13|   p: "",
            ^^ [2]


Error --------------------------------------------------------------------------------------------- create_class.js:48:6

Cannot cast `this.foo` to string because number [1] is incompatible with string [2].

   create_class.js:48:6
   48|     (this.foo: string); // error: number ~> string
            ^^^^^^^^

References:
   create_class.js:46:8
   46|   foo: 0,
              ^ [1]
   create_class.js:48:16
   48|     (this.foo: string); // error: number ~> string
                      ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- create_class.js:71:6

Cannot get `this.mixins` because property `mixins` is missing in React component [1].

   create_class.js:71:6
   71|     (this.mixins: mixed); // error: property `mixins` not found
            ^^^^^^^^^^^

References:
   create_class.js:66:11
                 v------------------
   66| const G = React.createClass({
   67|   mixins: [],
   68|   autobind: true,
   69|   statics: {},
   70|   m() {
   71|     (this.mixins: mixed); // error: property `mixins` not found
   72|     (this.autobind: mixed); // error: property `autobind` not found
   73|     (this.statics: mixed); // error: property `statics` not found
   74|   },
   75| });
       -^ [1]


Error --------------------------------------------------------------------------------------------- create_class.js:72:6

Cannot get `this.autobind` because property `autobind` is missing in React component [1].

   create_class.js:72:6
   72|     (this.autobind: mixed); // error: property `autobind` not found
            ^^^^^^^^^^^^^

References:
   create_class.js:66:11
                 v------------------
   66| const G = React.createClass({
   67|   mixins: [],
   68|   autobind: true,
   69|   statics: {},
   70|   m() {
   71|     (this.mixins: mixed); // error: property `mixins` not found
   72|     (this.autobind: mixed); // error: property `autobind` not found
   73|     (this.statics: mixed); // error: property `statics` not found
   74|   },
   75| });
       -^ [1]


Error --------------------------------------------------------------------------------------------- create_class.js:73:6

Cannot get `this.statics` because property `statics` is missing in React component [1].

   create_class.js:73:6
   73|     (this.statics: mixed); // error: property `statics` not found
            ^^^^^^^^^^^^

References:
   create_class.js:66:11
                 v------------------
   66| const G = React.createClass({
   67|   mixins: [],
   68|   autobind: true,
   69|   statics: {},
   70|   m() {
   71|     (this.mixins: mixed); // error: property `mixins` not found
   72|     (this.autobind: mixed); // error: property `autobind` not found
   73|     (this.statics: mixed); // error: property `statics` not found
   74|   },
   75| });
       -^ [1]


Error --------------------------------------------------------------------------------------------- create_class.js:80:6

Cannot cast `this.q` to empty because number [1] is incompatible with empty [2].

   create_class.js:80:6
   80|     (this.q: empty); // error: number ~> empty
            ^^^^^^

References:
   create_class.js:78:17
   78|   statics: { q: 0 },
                       ^ [1]
   create_class.js:80:14
   80|     (this.q: empty); // error: number ~> empty
                    ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:104:6

Cannot cast `this.state.foo` to empty because number [1] is incompatible with empty [2].

   create_class.js:104:6
   104|     (this.state.foo: empty); // number ~> empty
             ^^^^^^^^^^^^^^

References:
   create_class.js:100:21
   100|       return { foo: 0 };
                            ^ [1]
   create_class.js:104:22
   104|     (this.state.foo: empty); // number ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:117:6

Cannot cast `this.props.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:117:6
   117|     (this.props.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:117:22
   117|     (this.props.foo: empty); // string ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:118:6

Cannot cast `this.state.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:118:6
   118|     (this.state.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:118:22
   118|     (this.state.foo: empty); // string ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:133:6

Cannot cast `this.props.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:133:6
   133|     (this.props.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:133:22
   133|     (this.props.foo: empty); // string ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:137:6

Cannot cast `this.props.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:137:6
   137|     (this.props.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:137:22
   137|     (this.props.foo: empty); // string ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:141:6

Cannot cast `this.props.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:141:6
   141|     (this.props.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:141:22
   141|     (this.props.foo: empty); // string ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:142:6

Cannot cast `nextProps.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:142:6
   142|     (nextProps.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:142:21
   142|     (nextProps.foo: empty); // string ~> empty
                            ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:146:6

Cannot cast `this.props.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:146:6
   146|     (this.props.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:146:22
   146|     (this.props.foo: empty); // string ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:147:6

Cannot cast `this.state.bar` to empty because number [1] is incompatible with empty [2].

   create_class.js:147:6
   147|     (this.state.bar: empty); // number ~> empty
             ^^^^^^^^^^^^^^

References:
   create_class.js:130:19
   130|     return { bar: 0 };
                          ^ [1]
   create_class.js:147:22
   147|     (this.state.bar: empty); // number ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:148:6

Cannot cast `nextProps.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:148:6
   148|     (nextProps.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:148:21
   148|     (nextProps.foo: empty); // string ~> empty
                            ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:149:6

Cannot cast `nextState.bar` to empty because number [1] is incompatible with empty [2].

   create_class.js:149:6
   149|     (nextState.bar: empty); // number ~> empty
             ^^^^^^^^^^^^^

References:
   create_class.js:130:19
   130|     return { bar: 0 };
                          ^ [1]
   create_class.js:149:21
   149|     (nextState.bar: empty); // number ~> empty
                            ^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_class.js:150:12

Cannot return `0` because number [1] is incompatible with boolean [2].

   create_class.js:150:12
   150|     return 0; // number ~> bool
                   ^ [1]

References:
   <BUILTINS>/react.js:60:6
    60|   ): boolean;
             ^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:153:6

Cannot cast `this.props.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:153:6
   153|     (this.props.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:153:22
   153|     (this.props.foo: empty); // string ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:154:6

Cannot cast `this.state.bar` to empty because number [1] is incompatible with empty [2].

   create_class.js:154:6
   154|     (this.state.bar: empty); // number ~> empty
             ^^^^^^^^^^^^^^

References:
   create_class.js:130:19
   130|     return { bar: 0 };
                          ^ [1]
   create_class.js:154:22
   154|     (this.state.bar: empty); // number ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:155:6

Cannot cast `nextProps.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:155:6
   155|     (nextProps.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:155:21
   155|     (nextProps.foo: empty); // string ~> empty
                            ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:156:6

Cannot cast `nextState.bar` to empty because number [1] is incompatible with empty [2].

   create_class.js:156:6
   156|     (nextState.bar: empty); // number ~> empty
             ^^^^^^^^^^^^^

References:
   create_class.js:130:19
   130|     return { bar: 0 };
                          ^ [1]
   create_class.js:156:21
   156|     (nextState.bar: empty); // number ~> empty
                            ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:160:6

Cannot cast `this.props.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:160:6
   160|     (this.props.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:160:22
   160|     (this.props.foo: empty); // string ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:161:6

Cannot cast `this.state.bar` to empty because number [1] is incompatible with empty [2].

   create_class.js:161:6
   161|     (this.state.bar: empty); // number ~> empty
             ^^^^^^^^^^^^^^

References:
   create_class.js:130:19
   130|     return { bar: 0 };
                          ^ [1]
   create_class.js:161:22
   161|     (this.state.bar: empty); // number ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:162:6

Cannot cast `nextProps.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:162:6
   162|     (nextProps.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:162:21
   162|     (nextProps.foo: empty); // string ~> empty
                            ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:163:6

Cannot cast `nextState.bar` to empty because number [1] is incompatible with empty [2].

   create_class.js:163:6
   163|     (nextState.bar: empty); // number ~> empty
             ^^^^^^^^^^^^^

References:
   create_class.js:130:19
   130|     return { bar: 0 };
                          ^ [1]
   create_class.js:163:21
   163|     (nextState.bar: empty); // number ~> empty
                            ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:167:6

Cannot cast `this.props.foo` to empty because string [1] is incompatible with empty [2].

   create_class.js:167:6
   167|     (this.props.foo: empty); // string ~> empty
             ^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [1]
   create_class.js:167:22
   167|     (this.props.foo: empty); // string ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:168:6

Cannot cast `this.state.bar` to empty because number [1] is incompatible with empty [2].

   create_class.js:168:6
   168|     (this.state.bar: empty); // number ~> empty
             ^^^^^^^^^^^^^^

References:
   create_class.js:130:19
   130|     return { bar: 0 };
                          ^ [1]
   create_class.js:168:22
   168|     (this.state.bar: empty); // number ~> empty
                             ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_class.js:173:1

Cannot call `React.createClass` because object literal [1] is not an exact object.

   create_class.js:173:1
   173| React.createClass({}); // error: spec must be [x] exact and [ ] sealed
        ^^^^^^^^^^^^^^^^^^^^^

References:
   create_class.js:173:19
   173| React.createClass({}); // error: spec must be [x] exact and [ ] sealed
                          ^^ [1]


Error -------------------------------------------------------------------------------------------- create_class.js:174:1

Cannot call `React.createClass` because object type [1] is not an exact object.

   create_class.js:174:1
   174| React.createClass(({}: {})); // error: spec must be [ ] exact and [x] sealed
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   create_class.js:174:24
   174| React.createClass(({}: {})); // error: spec must be [ ] exact and [x] sealed
                               ^^ [1]


Error -------------------------------------------------------------------------------------------- create_class.js:181:1

Cannot assign `1` to `M.defaultProps.bar` because property `bar` is missing in default props of React component [1].

   create_class.js:181:1
   181| M.defaultProps.bar = 1; // error cannot update void property
        ^^^^^^^^^^^^^^^^^^

References:
   create_class.js:176:11
                  v------------------
   176| const M = React.createClass({
   177|   propTypes: {
   178|     foo: React.PropTypes.string,
   179|   },
   180| });
        -^ [1]


Error ------------------------------------------------------------------------- create_class_initial_state_sealed.js:9:6

Cannot cast `this.state.q` to empty because number [1] is incompatible with empty [2].

   create_class_initial_state_sealed.js:9:6
   9|     (this.state.q: empty); // number ~> empty
           ^^^^^^^^^^^^

References:
   create_class_initial_state_sealed.js:6:24
   6|     this.setState({ q: 0 });
                             ^ [1]
   create_class_initial_state_sealed.js:9:20
   9|     (this.state.q: empty); // number ~> empty
                         ^^^^^ [2]


Error ------------------------------------------------------------------------ create_class_initial_state_sealed.js:22:6

Cannot cast `this.state.q` to empty because number [1] is incompatible with empty [2].

   create_class_initial_state_sealed.js:22:6
   22|     (this.state.q: empty); // number ~> empty
            ^^^^^^^^^^^^

References:
   create_class_initial_state_sealed.js:19:24
   19|     this.setState({ q: 0 });
                              ^ [1]
   create_class_initial_state_sealed.js:22:20
   22|     (this.state.q: empty); // number ~> empty
                          ^^^^^ [2]


Error ------------------------------------------------------------------------ create_class_initial_state_sealed.js:35:6

Cannot cast `this.state.q` to empty because number [1] is incompatible with empty [2].

   create_class_initial_state_sealed.js:35:6
   35|     (this.state.q: empty); // number ~> empty
            ^^^^^^^^^^^^

References:
   create_class_initial_state_sealed.js:32:24
   32|     this.setState({ q: 0 });
                              ^ [1]
   create_class_initial_state_sealed.js:35:20
   35|     (this.state.q: empty); // number ~> empty
                          ^^^^^ [2]


Error ----------------------------------------------------------------------- create_class_initial_state_sealed.js:45:19

Cannot call `this.setState` with object literal bound to `partialState` because property `q` is missing in object
type [1] in property `q`.

   create_class_initial_state_sealed.js:45:19
   45|     this.setState({ q: 0 }); // property `q` not found
                         ^^^^^^^^

References:
   create_class_initial_state_sealed.js:41:22
   41|   getInitialState(): { p: number } {
                            ^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------ create_class_initial_state_sealed.js:48:6

Cannot get `this.state.q` because property `q` is missing in object type [1].

   create_class_initial_state_sealed.js:48:6
   48|     (this.state.q: empty); // property `q` not found
            ^^^^^^^^^^^^

References:
   create_class_initial_state_sealed.js:41:22
   41|   getInitialState(): { p: number } {
                            ^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------ create_class_initial_state_sealed.js:66:6

Cannot cast `this.state.baz` to empty because number [1] is incompatible with empty [2].

   create_class_initial_state_sealed.js:66:6
   66|     (this.state.baz: empty); // number ~> empty
            ^^^^^^^^^^^^^^

References:
   create_class_initial_state_sealed.js:63:26
   63|     this.setState({ baz: 0 });
                                ^ [1]
   create_class_initial_state_sealed.js:66:22
   66|     (this.state.baz: empty); // number ~> empty
                            ^^^^^ [2]


Error ----------------------------------------------------------------------- create_class_initial_state_sealed.js:81:19

Cannot call `this.setState` with object literal bound to `partialState` because property `baz` is missing in object
type [1] in property `baz`.

   create_class_initial_state_sealed.js:81:19
   81|     this.setState({ baz: 0 }); // property `baz`  not found
                         ^^^^^^^^^^

References:
   create_class_initial_state_sealed.js:73:24
   73|     getInitialState(): { foo: number } {
                              ^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------ create_class_initial_state_sealed.js:84:6

Cannot get `this.state.baz` because property `baz` is missing in object type [1].

   create_class_initial_state_sealed.js:84:6
   84|     (this.state.baz: empty); // property `baz` not found
            ^^^^^^^^^^^^^^

References:
   create_class_initial_state_sealed.js:73:24
   73|     getInitialState(): { foo: number } {
                              ^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------- create_class_statics_sealed.js:5:2

Cannot cast `A.bar` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:5:2
   5| (A.bar: empty); // number ~> empty (inflow below)
       ^^^^^

References:
   create_class_statics_sealed.js:6:9
   6| A.bar = 0;
              ^ [1]
   create_class_statics_sealed.js:5:9
   5| (A.bar: empty); // number ~> empty (inflow below)
              ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:12:2

Cannot cast `B.foo` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:12:2
   12| (B.foo: empty); // number ~> empty
        ^^^^^

References:
   create_class_statics_sealed.js:10:19
   10|   statics: { foo: 0 },
                         ^ [1]
   create_class_statics_sealed.js:12:9
   12| (B.foo: empty); // number ~> empty
               ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:13:2

Cannot cast `B.bar` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:13:2
   13| (B.bar: empty); // number ~> empty (inflow below)
        ^^^^^

References:
   create_class_statics_sealed.js:14:9
   14| B.bar = 0;
               ^ [1]
   create_class_statics_sealed.js:13:9
   13| (B.bar: empty); // number ~> empty (inflow below)
               ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:20:2

Cannot cast `C.foo` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:20:2
   20| (C.foo: empty); // number ~> empty
        ^^^^^

References:
   create_class_statics_sealed.js:18:33
   18|   statics: ({ foo: 0 }: {| foo: number |}),
                                       ^^^^^^ [1]
   create_class_statics_sealed.js:20:9
   20| (C.foo: empty); // number ~> empty
               ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:21:2

Cannot cast `C.bar` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:21:2
   21| (C.bar: empty); // number ~> empty (inflow below)
        ^^^^^

References:
   create_class_statics_sealed.js:22:9
   22| C.bar = 0;
               ^ [1]
   create_class_statics_sealed.js:21:9
   21| (C.bar: empty); // number ~> empty (inflow below)
               ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:28:2

Cannot cast `D.foo` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:28:2
   28| (D.foo: empty); // number ~> empty
        ^^^^^

References:
   create_class_statics_sealed.js:26:32
   26|   statics: ({ foo: 0 }: { foo: number }),
                                      ^^^^^^ [1]
   create_class_statics_sealed.js:28:9
   28| (D.foo: empty); // number ~> empty
               ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:29:2

Cannot get `D.bar` because property `bar` is missing in statics of React class [1].

   create_class_statics_sealed.js:29:2
   29| (D.bar: empty); // property `bar` not found
        ^^^^^

References:
   create_class_statics_sealed.js:26:25
   26|   statics: ({ foo: 0 }: { foo: number }),
                               ^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:30:1

Cannot assign `0` to `D.bar` because property `bar` is missing in statics of React class [1].

   create_class_statics_sealed.js:30:1
   30| D.bar = 0; // property `bar` not found
       ^^^^^

References:
   create_class_statics_sealed.js:26:25
   26|   statics: ({ foo: 0 }: { foo: number }),
                               ^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:39:2

Cannot cast `E.foo` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:39:2
   39| (E.foo: empty); // number ~> empty
        ^^^^^

References:
   create_class_statics_sealed.js:35:21
   35|     statics: { foo: 0 },
                           ^ [1]
   create_class_statics_sealed.js:39:9
   39| (E.foo: empty); // number ~> empty
               ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:40:2

Cannot cast `E.bar` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:40:2
   40| (E.bar: empty); // number ~> empty
        ^^^^^

References:
   create_class_statics_sealed.js:37:19
   37|   statics: { bar: 0 },
                         ^ [1]
   create_class_statics_sealed.js:40:9
   40| (E.bar: empty); // number ~> empty
               ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:41:2

Cannot cast `E.baz` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:41:2
   41| (E.baz: empty); // number ~> empty (inflow below)
        ^^^^^

References:
   create_class_statics_sealed.js:42:9
   42| E.baz = 0;
               ^ [1]
   create_class_statics_sealed.js:41:9
   41| (E.baz: empty); // number ~> empty (inflow below)
               ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:51:2

Cannot cast `F.foo` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:51:2
   51| (F.foo: empty); // number ~> empty
        ^^^^^

References:
   create_class_statics_sealed.js:47:34
   47|     statics: ({ foo: 0 }: { foo: number }),
                                        ^^^^^^ [1]
   create_class_statics_sealed.js:51:9
   51| (F.foo: empty); // number ~> empty
               ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:52:2

Cannot cast `F.bar` to empty because number [1] is incompatible with empty [2].

   create_class_statics_sealed.js:52:2
   52| (F.bar: empty); // number ~> empty
        ^^^^^

References:
   create_class_statics_sealed.js:49:19
   49|   statics: { bar: 0 },
                         ^ [1]
   create_class_statics_sealed.js:52:9
   52| (F.bar: empty); // number ~> empty
               ^^^^^ [2]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:53:2

Cannot get `F.baz` because property `baz` is missing in statics of React class [1].

   create_class_statics_sealed.js:53:2
   53| (F.baz: empty); // number ~> empty (inflow below)
        ^^^^^

References:
   create_class_statics_sealed.js:49:12
   49|   statics: { bar: 0 },
                  ^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------ create_class_statics_sealed.js:54:1

Cannot assign `0` to `F.baz` because property `baz` is missing in statics of React class [1].

   create_class_statics_sealed.js:54:1
   54| F.baz = 0;
       ^^^^^

References:
   create_class_statics_sealed.js:49:12
   49|   statics: { bar: 0 },
                  ^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------- default_props_undefined.js:10:1

Cannot create `Foo` element because string [1] is incompatible with number [2] in property `bar`.

   default_props_undefined.js:10:1
   10| <Foo bar="42"/>; // Error
       ^^^^^^^^^^^^^^^

References:
   default_props_undefined.js:10:10
   10| <Foo bar="42"/>; // Error
                ^^^^ [1]
   default_props_undefined.js:5:41
    5| class Foo extends React.Component<{bar: number}, void> {
                                               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ element_config.js:15:29

string [1] is incompatible with number [2].

   element_config.js:15:29
   15|   static defaultProps = {p: 'foo'}; // Error: string ~> number
                                   ^^^^^ [1]

References:
   element_config.js:14:38
   14| class B extends React.Component<{p: ?number}> {
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ element_config.js:31:25

Property `p` is missing in object literal [1] but exists in object type [2].

   element_config.js:31:25
   31|   static defaultProps = {p: 42}; // Error: extra property `p`
                               ^^^^^^^ [1]

References:
   element_config.js:30:33
   30| class F extends React.Component<{||}> {
                                       ^^^^ [2]


Error ------------------------------------------------------------------------------------------ element_config.js:39:29

string [1] is incompatible with number [2].

   element_config.js:39:29
   39|   static defaultProps = {p: 'foo'}; // Error: string ~> number
                                   ^^^^^ [1]

References:
   element_config.js:38:39
   38| class H extends React.Component<{p?: ?number}> {
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ element_config.js:47:35

string [1] is incompatible with number [2].

   element_config.js:47:35
   47|   static defaultProps = ({}: {p?: string}); // Error: string ~> number
                                         ^^^^^^ [1]

References:
   element_config.js:46:39
   46| class J extends React.Component<{p?: ?number}> {
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- element_config.js:52:2

Cannot cast object literal to `React.ElementConfig` because string [1] is incompatible with number [2] in property `p`.

   element_config.js:52:2
   52| ({p: 'foo'}: React.ElementConfig<typeof A>); // Error: string ~> number
        ^^^^^^^^^^

References:
   element_config.js:52:6
   52| ({p: 'foo'}: React.ElementConfig<typeof A>); // Error: string ~> number
            ^^^^^ [1]
   element_config.js:10:38
   10| class A extends React.Component<{p: ?number}> {
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- element_config.js:56:2

Cannot cast object literal to `React.ElementConfig` because string [1] is incompatible with number [2] in property `p`.

   element_config.js:56:2
   56| ({p: 'foo'}: React.ElementConfig<typeof B>); // Error: string ~> number
        ^^^^^^^^^^

References:
   element_config.js:56:6
   56| ({p: 'foo'}: React.ElementConfig<typeof B>); // Error: string ~> number
            ^^^^^ [1]
   element_config.js:14:38
   14| class B extends React.Component<{p: ?number}> {
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- element_config.js:58:3

Cannot cast object literal to `React.ElementConfig` because property `p` is missing in object type [1] but exists in
object type [2].

   element_config.js:58:3
   58| (({}: {}): React.ElementConfig<typeof C>); // Error: missing property `p`
         ^^^^^^

References:
   element_config.js:58:7
   58| (({}: {}): React.ElementConfig<typeof C>); // Error: missing property `p`
             ^^ [1]
   element_config.js:58:12
   58| (({}: {}): React.ElementConfig<typeof C>); // Error: missing property `p`
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- element_config.js:60:2

Cannot cast object literal to `React.ElementConfig` because string [1] is incompatible with number [2] in property `p`.

   element_config.js:60:2
   60| ({p: 'foo'}: React.ElementConfig<typeof C>); // Error: string ~> number
        ^^^^^^^^^^

References:
   element_config.js:60:6
   60| ({p: 'foo'}: React.ElementConfig<typeof C>); // Error: string ~> number
            ^^^^^ [1]
   element_config.js:18:38
   18| class C extends React.Component<{p: ?number}> {
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- element_config.js:62:3

Cannot cast object literal to `React.ElementConfig` because property `p` is missing in object type [1] but exists in
object type [2].

   element_config.js:62:3
   62| (({}: {}): React.ElementConfig<typeof D>); // Error: missing property `p`
         ^^^^^^

References:
   element_config.js:62:7
   62| (({}: {}): React.ElementConfig<typeof D>); // Error: missing property `p`
             ^^ [1]
   element_config.js:62:12
   62| (({}: {}): React.ElementConfig<typeof D>); // Error: missing property `p`
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- element_config.js:64:2

Cannot cast object literal to `React.ElementConfig` because string [1] is incompatible with number [2] in property `p`.

   element_config.js:64:2
   64| ({p: 'foo'}: React.ElementConfig<typeof D>); // Error: string ~> number
        ^^^^^^^^^^

References:
   element_config.js:64:6
   64| ({p: 'foo'}: React.ElementConfig<typeof D>); // Error: string ~> number
            ^^^^^ [1]
   element_config.js:22:38
   22| class D extends React.Component<{p: ?number}> {
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- element_config.js:71:2

Cannot cast object literal to `React.ElementConfig` because property `p` is missing in object type [1] but exists in
object literal [2].

   element_config.js:71:2
   71| ({p: 42}: React.ElementConfig<typeof F>); // Error: extra property `p`
        ^^^^^^^ [2]

References:
   element_config.js:71:11
   71| ({p: 42}: React.ElementConfig<typeof F>); // Error: extra property `p`
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------- element_config.js:72:2

Cannot cast object literal to `React.ElementConfig` because property `p` is missing in object type [1] but exists in
object literal [2].

   element_config.js:72:2
   72| ({p: 'foo'}: React.ElementConfig<typeof F>); // Error: extra property `p`
        ^^^^^^^^^^ [2]

References:
   element_config.js:72:14
   72| ({p: 'foo'}: React.ElementConfig<typeof F>); // Error: extra property `p`
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------- element_config.js:76:2

Cannot cast object literal to `React.ElementConfig` because string [1] is incompatible with number [2] in property `p`.

   element_config.js:76:2
   76| ({p: 'foo'}: React.ElementConfig<typeof G>); // Error: string ~> number
        ^^^^^^^^^^

References:
   element_config.js:76:6
   76| ({p: 'foo'}: React.ElementConfig<typeof G>); // Error: string ~> number
            ^^^^^ [1]
   element_config.js:34:38
   34| class G extends React.Component<{p: ?number}> {
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- element_config.js:80:2

Cannot cast object literal to `React.ElementConfig` because string [1] is incompatible with number [2] in property `p`.

   element_config.js:80:2
   80| ({p: 'foo'}: React.ElementConfig<typeof H>); // Error: string ~> number
        ^^^^^^^^^^

References:
   element_config.js:80:6
   80| ({p: 'foo'}: React.ElementConfig<typeof H>); // Error: string ~> number
            ^^^^^ [1]
   element_config.js:38:39
   38| class H extends React.Component<{p?: ?number}> {
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- element_config.js:84:2

Cannot cast object literal to `React.ElementConfig` because string [1] is incompatible with number [2] in property `p`.

   element_config.js:84:2
   84| ({p: 'foo'}: React.ElementConfig<typeof I>); // Error: string ~> number
        ^^^^^^^^^^

References:
   element_config.js:84:6
   84| ({p: 'foo'}: React.ElementConfig<typeof I>); // Error: string ~> number
            ^^^^^ [1]
   element_config.js:42:39
   42| class I extends React.Component<{p?: ?number}> {
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- element_config.js:88:2

Cannot cast object literal to `React.ElementConfig` because string [1] is incompatible with number [2] in property `p`.

   element_config.js:88:2
   88| ({p: 'foo'}: React.ElementConfig<typeof J>); // Error: string ~> number
        ^^^^^^^^^^

References:
   element_config.js:88:6
   88| ({p: 'foo'}: React.ElementConfig<typeof J>); // Error: string ~> number
            ^^^^^ [1]
   element_config.js:46:39
   46| class J extends React.Component<{p?: ?number}> {
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------- element_with_component_type.js:8:2

Cannot cast `<Foo />` to `React.Element` because property `a` is missing in object type [1] but exists in object
type [2] in property `type`.

   element_with_component_type.js:8:2
   8| (<Foo a={42}/>: React.Element<React.ComponentType<{b: number}>>); // Error
       ^^^^^^^^^^^^^

References:
   element_with_component_type.js:8:51
   8| (<Foo a={42}/>: React.Element<React.ComponentType<{b: number}>>); // Error
                                                        ^^^^^^^^^^^ [1]
   element_with_component_type.js:5:35
   5| class Foo extends React.Component<{a: number}> {}
                                        ^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ hoc.js:11:7

Cannot create `Component` element because:
 - property `bar` is missing in props [1] but exists in object type [2].
 - property `foo` is missing in props [1] but exists in object type [2].

   hoc.js:11:7
   11|       <Component />; // Error: `foo` is required.
             ^^^^^^^^^^^^^ [1]

References:
   hoc.js:6:34
    6|   Component: React$ComponentType<{foo: number, bar: number}>,
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ hoc.js:12:7

Cannot create `Component` element because property `bar` is missing in props [1] but exists in object type [2].

   hoc.js:12:7
   12|       <Component foo={42} />; // Error: `bar` is required.
             ^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   hoc.js:6:34
    6|   Component: React$ComponentType<{foo: number, bar: number}>,
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ hoc.js:35:7

Cannot call `myHOC` with `class { ... }` bound to `Component` because string [1] is incompatible with number [2] in
property `foo`.

   hoc.js:35:7
   35| myHOC(class Empty extends React.Component<{foo: string}, void> {}); // Error
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc.js:35:49
   35| myHOC(class Empty extends React.Component<{foo: string}, void> {}); // Error
                                                       ^^^^^^ [1]
   hoc.js:6:40
    6|   Component: React$ComponentType<{foo: number, bar: number}>,
                                              ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ hoc.js:36:7

Cannot call `myHOC` with function bound to `Component` because:
 - number [1] is incompatible with string [2] in property `foo`.
 - all branches are incompatible:
    - Either undefined [3] is incompatible with null [4].
    - Or property `@@iterator` is missing in undefined [3] but exists in `$Iterable` [5].

   hoc.js:36:7
   36| myHOC(function Empty(props: {foo: string}) {}); // Error
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc.js:6:40
    6|   Component: React$ComponentType<{foo: number, bar: number}>,
                                              ^^^^^^ [1]
   hoc.js:36:35
   36| myHOC(function Empty(props: {foo: string}) {}); // Error
                                         ^^^^^^ [2]
   hoc.js:36:43
   36| myHOC(function Empty(props: {foo: string}) {}); // Error
                                                 ^ [3]
   <BUILTINS>/react.js:14:5
   14|   | null
           ^^^^ [4]
   <BUILTINS>/react.js:20:5
   20|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [5]


Error ----------------------------------------------------------------------------------------------------- hoc.js:36:43

All branches are incompatible:
 - Either undefined [1] is incompatible with null [2].
 - Or property `@@iterator` is missing in undefined [1] but exists in `$Iterable` [3].

   hoc.js:36:43
   36| myHOC(function Empty(props: {foo: string}) {}); // Error
                                                 ^ [1]

References:
   <BUILTINS>/react.js:14:5
   14|   | null
           ^^^^ [2]
   <BUILTINS>/react.js:20:5
   20|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------------ hoc.js:41:1

Cannot create `Wrapped` element because property `foo` is missing in props [1] but exists in object type [2].

   hoc.js:41:1
   41| <Wrapped nonsense="what" />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   hoc.js:38:36
   38| const Wrapped: React$ComponentType<{foo: number}> = myHOC(Unwrapped);
                                          ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ hoc.js:43:1

Cannot create `WrappedFun` element because property `foo` is missing in props [1] but exists in object type [2].

   hoc.js:43:1
   43| <WrappedFun />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^ [1]

References:
   hoc.js:7:24
    7| ): React$ComponentType<{foo: number}> {
                              ^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- hoc2.js:23:37

Cannot call `connect` with `MyComponent` bound to `Component` because:
 - property `a` is missing in object type [1] but exists in object type [2].
 - property `b` is missing in object type [1] but exists in object type [2].
 - number [3] is incompatible with string [4] in property `a`.

   hoc2.js:23:37
   23| const MyEnhancedComponent = connect(MyComponent);
                                           ^^^^^^^^^^^

References:
   hoc2.js:6:34
    6|   Component: React.ComponentType<{|...TProps, prop: number|}>,
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   hoc2.js:11:43
                                                 v-
   11| class MyComponent extends React.Component<{|
   12|   a: number,
   13|   b: number,
   14|   prop: number,
   15| |}> { render() { return null }}
       -^ [2]
   hoc2.js:12:6
   12|   a: number,
            ^^^^^^ [3]
   hoc2.js:28:24
   28| <MyEnhancedComponent a="foo" b={2} />; // Error: string ~> number
                              ^^^^^ [4]


Error ---------------------------------------------------------------------------------------------------- hoc2.js:24:45

Cannot call `connect` with `MyFunctionComponent` bound to `Component` because:
 - property `a` is missing in props [1] but exists in object type [2].
 - property `b` is missing in props [1] but exists in object type [2].
 - string [3] is incompatible with number [4] in property `a`.

   hoc2.js:24:45
   24| const MyEnhancedFunctionComponent = connect(MyFunctionComponent);
                                                   ^^^^^^^^^^^^^^^^^^^

References:
   hoc2.js:6:34
    6|   Component: React.ComponentType<{|...TProps, prop: number|}>,
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   hoc2.js:17:37
                                           v-
   17| function MyFunctionComponent(props: {|
   18|   a: number,
   19|   b: number,
   20|   prop: number,
   21| |}) { return null }
       -^ [2]
   hoc2.js:32:32
   32| <MyEnhancedFunctionComponent a="foo" b={2} />; // Error: string ~> number
                                      ^^^^^ [3]
   hoc2.js:18:6
   18|   a: number,
            ^^^^^^ [4]


Error ----------------------------------------------------------------------------------------------------- hoc3.js:26:1

Cannot create `MyEnhancedComponent` element because:
 - property `a` is missing in props [1] but exists in object type [2].
 - property `b` is missing in props [1] but exists in object type [2].

   hoc3.js:26:1
   26| <MyEnhancedComponent />; // Error: Needs `a` and `b`.
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   hoc3.js:11:43
                                                 v
   11| class MyComponent extends React.Component<{
   12|   a: number,
   13|   b: number,
   14|   prop: number,
   15| }> { render() { return null } }
       ^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc3.js:28:1

Cannot create `MyEnhancedComponent` element because string [1] is incompatible with number [2] in property `a`.

   hoc3.js:28:1
   28| <MyEnhancedComponent a="foo" b={2} />; // Error: string ~> number
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc3.js:28:24
   28| <MyEnhancedComponent a="foo" b={2} />; // Error: string ~> number
                              ^^^^^ [1]
   hoc3.js:12:6
   12|   a: number,
            ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc3.js:30:1

Cannot create `MyEnhancedFunctionComponent` element because:
 - property `a` is missing in props [1] but exists in object type [2].
 - property `b` is missing in props [1] but exists in object type [2].

   hoc3.js:30:1
   30| <MyEnhancedFunctionComponent/>; // Error: Needs `a` and `b`.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc3.js:6:34
    6|   Component: React.ComponentType<{prop: number} & TProps>,
                                        ^^^^^^^^^^^^^^^^^^^^^^^ [1]
   hoc3.js:17:37
                                           v
   17| function MyFunctionComponent(props: {
   18|   a: number,
   19|   b: number,
   20|   prop: number,
   21| }) { return null }
       ^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc3.js:32:1

Cannot create `MyEnhancedFunctionComponent` element because string [1] is incompatible with number [2] in property `a`.

   hoc3.js:32:1
   32| <MyEnhancedFunctionComponent a="foo" b={2} />; // Error: string ~> number
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc3.js:32:32
   32| <MyEnhancedFunctionComponent a="foo" b={2} />; // Error: string ~> number
                                      ^^^^^ [1]
   hoc3.js:18:6
   18|   a: number,
            ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc4.js:26:1

Cannot create `MyEnhancedComponent` element because:
 - property `a` is missing in props [1] but exists in object type [2].
 - property `b` is missing in props [1] but exists in object type [2].

   hoc4.js:26:1
   26| <MyEnhancedComponent />; // Error: Needs `a` and `b`.
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   hoc4.js:11:43
                                                 v
   11| class MyComponent extends React.Component<{
   12|   a: number,
   13|   b: number,
   14|   prop: number,
   15| }> { render() { return null } }
       ^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc4.js:28:1

Cannot create `MyEnhancedComponent` element because string [1] is incompatible with number [2] in property `a`.

   hoc4.js:28:1
   28| <MyEnhancedComponent a="foo" b={2} />; // Error: string ~> number
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc4.js:28:24
   28| <MyEnhancedComponent a="foo" b={2} />; // Error: string ~> number
                              ^^^^^ [1]
   hoc4.js:12:6
   12|   a: number,
            ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:26:1

Cannot create `MyComponent1` element because property `bar` is missing in props [1] but exists in object type [2].

   hoc5.js:26:1
   26| <MyComponent1 />; // Error
       ^^^^^^^^^^^^^^^^ [1]

References:
   hoc5.js:14:44
   14| class MyComponent1 extends React.Component<{foo: string, bar: number}> {
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:28:1

Cannot create `MyComponent1` element because string [1] is incompatible with number [2] in property `bar`.

   hoc5.js:28:1
   28| <MyComponent1 bar="nope" />; // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc5.js:28:19
   28| <MyComponent1 bar="nope" />; // Error
                         ^^^^^^ [1]
   hoc5.js:14:63
   14| class MyComponent1 extends React.Component<{foo: string, bar: number}> {
                                                                     ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:30:1

Cannot create `MyComponent1` element because number [1] is incompatible with string [2] in property `foo`.

   hoc5.js:30:1
   30| <MyComponent1 bar={42} foo={100} />; // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc5.js:30:29
   30| <MyComponent1 bar={42} foo={100} />; // Error
                                   ^^^ [1]
   hoc5.js:14:50
   14| class MyComponent1 extends React.Component<{foo: string, bar: number}> {
                                                        ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:33:1

Cannot create `MyComponent2` element because property `bar` is missing in props [1] but exists in object type [2].

   hoc5.js:33:1
   33| <MyComponent2 />; // Error
       ^^^^^^^^^^^^^^^^ [1]

References:
   hoc5.js:21:30
   21| function MyComponent2(props: {foo: string, bar: number}) {
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:35:1

Cannot create `MyComponent2` element because string [1] is incompatible with number [2] in property `bar`.

   hoc5.js:35:1
   35| <MyComponent2 bar="nope" />; // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc5.js:35:19
   35| <MyComponent2 bar="nope" />; // Error
                         ^^^^^^ [1]
   hoc5.js:21:49
   21| function MyComponent2(props: {foo: string, bar: number}) {
                                                       ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:37:1

Cannot create `MyComponent2` element because number [1] is incompatible with string [2] in property `foo`.

   hoc5.js:37:1
   37| <MyComponent2 bar={42} foo={100} />; // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc5.js:37:29
   37| <MyComponent2 bar={42} foo={100} />; // Error
                                   ^^^ [1]
   hoc5.js:21:36
   21| function MyComponent2(props: {foo: string, bar: number}) {
                                          ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:43:1

Cannot create `MyEnhancedComponent1` element because property `bar` is missing in props [1] but exists in object
type [2].

   hoc5.js:43:1
   43| <MyEnhancedComponent1 />; // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   hoc5.js:10:24
   10| ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:45:1

Cannot create `MyEnhancedComponent1` element because string [1] is incompatible with number [2] in property `bar`.

   hoc5.js:45:1
   45| <MyEnhancedComponent1 bar="nope" />; // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc5.js:45:27
   45| <MyEnhancedComponent1 bar="nope" />; // Error
                                 ^^^^^^ [1]
   hoc5.js:14:63
   14| class MyComponent1 extends React.Component<{foo: string, bar: number}> {
                                                                     ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:47:1

Cannot create `MyEnhancedComponent1` element because number [1] is incompatible with string [2] in property `foo`.

   hoc5.js:47:1
   47| <MyEnhancedComponent1 bar={42} foo={100} />; // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc5.js:47:37
   47| <MyEnhancedComponent1 bar={42} foo={100} />; // Error
                                           ^^^ [1]
   hoc5.js:14:50
   14| class MyComponent1 extends React.Component<{foo: string, bar: number}> {
                                                        ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:50:1

Cannot create `MyEnhancedComponent2` element because property `bar` is missing in props [1] but exists in object
type [2].

   hoc5.js:50:1
   50| <MyEnhancedComponent2 />; // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   hoc5.js:10:24
   10| ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:52:1

Cannot create `MyEnhancedComponent2` element because string [1] is incompatible with number [2] in property `bar`.

   hoc5.js:52:1
   52| <MyEnhancedComponent2 bar="nope" />; // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc5.js:52:27
   52| <MyEnhancedComponent2 bar="nope" />; // Error
                                 ^^^^^^ [1]
   hoc5.js:21:49
   21| function MyComponent2(props: {foo: string, bar: number}) {
                                                       ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- hoc5.js:54:1

Cannot create `MyEnhancedComponent2` element because number [1] is incompatible with string [2] in property `foo`.

   hoc5.js:54:1
   54| <MyEnhancedComponent2 bar={42} foo={100} />; // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   hoc5.js:54:37
   54| <MyEnhancedComponent2 bar={42} foo={100} />; // Error
                                           ^^^ [1]
   hoc5.js:21:36
   21| function MyComponent2(props: {foo: string, bar: number}) {
                                          ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- import_react.js:7:17

Cannot assign `new react.Component()` to `b` because `React.Component` [1] is incompatible with number [2].

   import_react.js:7:17
   7| var b: number = new react.Component(); // Error: ReactComponent ~> number
                      ^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   import_react.js:7:8
   7| var b: number = new react.Component(); // Error: ReactComponent ~> number
             ^^^^^^ [2]


Error ----------------------------------------------------------------------------- intersection_component_error.js:12:1

Cannot create `MyComponent` element because property `foo` is missing in props [1] but exists in object type [2].

   intersection_component_error.js:12:1
   12| <MyComponent />;
       ^^^^^^^^^^^^^^^ [1]

References:
   intersection_component_error.js:8:46
    8| declare var MyComponent: React.ComponentType<{foo: number}> & {
                                                    ^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- jsx_spread.js:11:12

Cannot create `Foo` element because number [1] is incompatible with string [2] in property `bar`.

   jsx_spread.js:11:12
    11| var blah = <Foo {...props} />; // error bar, number given string expected
                   ^^^^^^^^^^^^^^^^^^

References:
   jsx_spread.js:10:19
    10| var props = {bar: 42};
                          ^^ [1]
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ key.js:12:1

Cannot create `Foo` element because in property `key`:
 - Either boolean [1] is incompatible with string [2].
 - Or boolean [1] is incompatible with number [3].

   key.js:12:1
    12| <Foo key={true} />; // Error
        ^^^^^^^^^^^^^^^^^^

References:
   key.js:12:11
    12| <Foo key={true} />; // Error
                  ^^^^ [1]
   <BUILTINS>/react.js:190:26
   190| declare type React$Key = string | number;
                                 ^^^^^^ [2]
   <BUILTINS>/react.js:190:35
   190| declare type React$Key = string | number;
                                          ^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------------ key.js:21:1

Cannot create `FooExact` element because in property `key`:
 - Either boolean [1] is incompatible with string [2].
 - Or boolean [1] is incompatible with number [3].

   key.js:21:1
    21| <FooExact key={true} />; // Error
        ^^^^^^^^^^^^^^^^^^^^^^^

References:
   key.js:21:16
    21| <FooExact key={true} />; // Error
                       ^^^^ [1]
   <BUILTINS>/react.js:190:26
   190| declare type React$Key = string | number;
                                 ^^^^^^ [2]
   <BUILTINS>/react.js:190:35
   190| declare type React$Key = string | number;
                                          ^^^^^^ [3]


Error -------------------------------------------------------------------------------------------------- portals.js:12:7

Cannot call `ReactDOM.createPortal` with `document.getElementById(...)` bound to `container` because null [1] is
incompatible with `Element` [2].

   portals.js:12:7
    12|       document.getElementById('portal'),
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:806:52
   806|   getElementById(elementId: string): HTMLElement | null;
                                                           ^^^^ [1]
   <BUILTINS>/react-dom.js:30:16
    30|     container: Element,
                       ^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- proptype_arrayOf.js:13:20

Cannot create `Example` element because property `arr` is missing in props [1] but exists in propTypes of React
component [2].

   proptype_arrayOf.js:13:20
   13| var fail_missing = <Example />
                          ^^^^^^^^^^^ [1]

References:
   proptype_arrayOf.js:5:14
                    v
    5|   propTypes: {
    6|     arr: React.PropTypes.arrayOf(React.PropTypes.number).isRequired,
    7|   },
         ^ [2]


Error ---------------------------------------------------------------------------------------- proptype_arrayOf.js:14:22

Cannot create `Example` element because number [1] is incompatible with array type [2] in property `arr`.

   proptype_arrayOf.js:14:22
   14| var fail_not_array = <Example arr={2} />
                            ^^^^^^^^^^^^^^^^^^^

References:
   proptype_arrayOf.js:14:36
   14| var fail_not_array = <Example arr={2} />
                                          ^ [1]
   proptype_arrayOf.js:6:10
    6|     arr: React.PropTypes.arrayOf(React.PropTypes.number).isRequired,
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- proptype_arrayOf.js:15:27

Cannot create `Example` element because string [1] is incompatible with number [2] in array element of property `arr`.

   proptype_arrayOf.js:15:27
    15| var fail_mistyped_elems = <Example arr={[1, "foo"]} />
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_arrayOf.js:15:45
    15| var fail_mistyped_elems = <Example arr={[1, "foo"]} />
                                                    ^^^^^ [1]
   <BUILTINS>/react.js:447:36
   447|   number: React$PropType$Primitive<number>,
                                           ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- proptype_arrayOf.js:20:21

Cannot create `Example` element because null [1] is incompatible with number [2] in array element of property `arr`.

   proptype_arrayOf.js:20:21
    20| var todo_required = <Example arr={[null]} />
                            ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_arrayOf.js:20:36
    20| var todo_required = <Example arr={[null]} />
                                           ^^^^ [1]
   <BUILTINS>/react.js:447:36
   447|   number: React$PropType$Primitive<number>,
                                           ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- proptype_arrayOf.js:30:2

Cannot create `OptionalExample` element because string [1] is incompatible with number [2] in array element of property
`arr`.

   proptype_arrayOf.js:30:2
    30| (<OptionalExample arr={[""]} />); // error: string ~> number
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_arrayOf.js:30:25
    30| (<OptionalExample arr={[""]} />); // error: string ~> number
                                ^^ [1]
   <BUILTINS>/react.js:447:36
   447|   number: React$PropType$Primitive<number>,
                                           ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- proptype_arrayOf.js:43:10

Cannot call `React.PropTypes.arrayOf` because number [1] is not a React propType.

   proptype_arrayOf.js:43:10
   43|     arr: React.PropTypes.arrayOf(0), // error: number not a prop type
                ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_arrayOf.js:43:34
   43|     arr: React.PropTypes.arrayOf(0), // error: number not a prop type
                                        ^ [1]


Error --------------------------------------------------------------------------------- proptype_custom_validator.js:8:8

Cannot cast `propName` to empty because string [1] is incompatible with empty [2].

   proptype_custom_validator.js:8:8
     8|       (propName: empty); // error: propName is a string
               ^^^^^^^^

References:
   <BUILTINS>/react.js:418:13
   418|   propName: string,
                    ^^^^^^ [1]
   proptype_custom_validator.js:8:18
     8|       (propName: empty); // error: propName is a string
                         ^^^^^ [2]


Error --------------------------------------------------------------------------------- proptype_custom_validator.js:9:8

Cannot cast `componentName` to empty because string [1] is incompatible with empty [2].

   proptype_custom_validator.js:9:8
     9|       (componentName: empty); // error: componentName is a string
               ^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:419:18
   419|   componentName: string,
                         ^^^^^^ [1]
   proptype_custom_validator.js:9:23
     9|       (componentName: empty); // error: componentName is a string
                              ^^^^^ [2]


Error -------------------------------------------------------------------------------- proptype_custom_validator.js:10:8

Cannot cast `href` to empty because:
 - string [1] is incompatible with empty [2].
 - undefined [1] is incompatible with empty [2].

   proptype_custom_validator.js:10:8
    10|       (href: empty); // error: href is an optional string
               ^^^^

References:
   <BUILTINS>/react.js:420:10
   420|   href?: string) => ?Error;
                 ^^^^^^ [1]
   proptype_custom_validator.js:10:14
    10|       (href: empty); // error: href is an optional string
                     ^^^^^ [2]


Error ------------------------------------------------------------------------------- proptype_custom_validator.js:11:15

Cannot return `0` because mixed [1] is incompatible with `Error` [2].

   proptype_custom_validator.js:11:15
    11|       return (0: mixed); // error: should return ?Error
                      ^^^^^^^^

References:
   proptype_custom_validator.js:11:18
    11|       return (0: mixed); // error: should return ?Error
                         ^^^^^ [1]
   <BUILTINS>/react.js:420:22
   420|   href?: string) => ?Error;
                             ^^^^^ [2]


Error ------------------------------------------------------------------------------------ proptype_incompatible.js:5:10

number [1] is not a React propType.

   5|     foo: 0, // error: `0` is not a prop type
               ^ [1]


Error -------------------------------------------------------------------------------------- proptype_instanceOf.js:14:2

Cannot create `Example` element because `A` [1] is incompatible with `B` [2] in property `x`.

   proptype_instanceOf.js:14:2
   14| (<Example x={new A} />); // error: A ~> B
        ^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_instanceOf.js:14:14
   14| (<Example x={new A} />); // error: A ~> B
                    ^^^^^ [1]
   proptype_instanceOf.js:10:8
   10|     x: React.PropTypes.instanceOf(B),
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------- proptype_instanceOf.js:17:2

Cannot create `Example` element because string [1] is incompatible with `B` [2] in property `x`.

   proptype_instanceOf.js:17:2
   17| (<Example x="wrong" />); // error: string ~> B
        ^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_instanceOf.js:17:13
   17| (<Example x="wrong" />); // error: string ~> B
                   ^^^^^^^ [1]
   proptype_instanceOf.js:10:8
   10|     x: React.PropTypes.instanceOf(B),
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------- proptype_objectOf.js:13:20

Cannot create `Example` element because property `obj` is missing in props [1] but exists in propTypes of React
component [2].

   proptype_objectOf.js:13:20
   13| var fail_missing = <Example />
                          ^^^^^^^^^^^ [1]

References:
   proptype_objectOf.js:5:14
                    v
    5|   propTypes: {
    6|     obj: React.PropTypes.objectOf(React.PropTypes.number).isRequired
    7|   },
         ^ [2]


Error --------------------------------------------------------------------------------------- proptype_objectOf.js:14:23

Cannot create `Example` element because number [1] is incompatible with object type [2] in property `obj`.

   proptype_objectOf.js:14:23
   14| var fail_not_object = <Example obj={2} />
                             ^^^^^^^^^^^^^^^^^^^

References:
   proptype_objectOf.js:14:37
   14| var fail_not_object = <Example obj={2} />
                                           ^ [1]
   proptype_objectOf.js:6:10
    6|     obj: React.PropTypes.objectOf(React.PropTypes.number).isRequired
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------- proptype_objectOf.js:15:27

Cannot create `Example` element because string [1] is incompatible with number [2] in property `obj.foo`.

   proptype_objectOf.js:15:27
    15| var fail_mistyped_props = <Example obj={{foo: "foo"}} />
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_objectOf.js:15:47
    15| var fail_mistyped_props = <Example obj={{foo: "foo"}} />
                                                      ^^^^^ [1]
   <BUILTINS>/react.js:447:36
   447|   number: React$PropType$Primitive<number>,
                                           ^^^^^^ [2]


Error --------------------------------------------------------------------------------------- proptype_objectOf.js:20:21

Cannot create `Example` element because null [1] is incompatible with number [2] in property `obj.p`.

   proptype_objectOf.js:20:21
    20| var todo_required = <Example obj={{p:null}} />
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_objectOf.js:20:38
    20| var todo_required = <Example obj={{p:null}} />
                                             ^^^^ [1]
   <BUILTINS>/react.js:447:36
   447|   number: React$PropType$Primitive<number>,
                                           ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- proptype_objectOf.js:30:2

Cannot create `OptionalExample` element because string [1] is incompatible with number [2] in property `obj.p`.

   proptype_objectOf.js:30:2
    30| (<OptionalExample obj={{p:""}} />); // error: string ~> number
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_objectOf.js:30:27
    30| (<OptionalExample obj={{p:""}} />); // error: string ~> number
                                  ^^ [1]
   <BUILTINS>/react.js:447:36
   447|   number: React$PropType$Primitive<number>,
                                           ^^^^^^ [2]


Error --------------------------------------------------------------------------------------- proptype_objectOf.js:43:10

Cannot call `React.PropTypes.objectOf` because number [1] is not a React propType.

   proptype_objectOf.js:43:10
   43|     obj: React.PropTypes.objectOf(0), // error: number not a prop type
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_objectOf.js:43:35
   43|     obj: React.PropTypes.objectOf(0), // error: number not a prop type
                                         ^ [1]


Error ------------------------------------------------------------------------------------------- proptype_oneOf.js:14:2

Cannot create `Example` element because string [1] is incompatible with enum [2] in property `str`.

   proptype_oneOf.js:14:2
   14| (<Example str="baz" />); // error: 'baz' not in enum
        ^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOf.js:14:15
   14| (<Example str="baz" />); // error: 'baz' not in enum
                     ^^^^^ [1]
   proptype_oneOf.js:6:10
    6|     str: React.PropTypes.oneOf(["foo", "bar"]),
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- proptype_oneOf.js:17:2

Cannot create `Example` element because number [1] is incompatible with enum [2] in property `num`.

   proptype_oneOf.js:17:2
   17| (<Example num={3} />); // error: 3 not in enum
        ^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOf.js:17:16
   17| (<Example num={3} />); // error: 3 not in enum
                      ^ [1]
   proptype_oneOf.js:7:10
    7|     num: React.PropTypes.oneOf([0, 1, 2]),
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- proptype_oneOf.js:20:2

Cannot create `Example` element because boolean [1] is incompatible with boolean literal `true` [2] in property `bool`.

   proptype_oneOf.js:20:2
   20| (<Example bool={false} />); // error: false ~> true
        ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOf.js:20:17
   20| (<Example bool={false} />); // error: false ~> true
                       ^^^^^ [1]
   proptype_oneOf.js:8:34
    8|     bool: React.PropTypes.oneOf([true]),
                                        ^^^^ [2]


Error ------------------------------------------------------------------------------------------- proptype_oneOf.js:24:2

Cannot create `Example` element because string [1] is incompatible with enum [2] in property `mixed`.

   proptype_oneOf.js:24:2
   24| (<Example mixed={"baz"} />); // error: 'baz' not in enum
        ^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOf.js:24:18
   24| (<Example mixed={"baz"} />); // error: 'baz' not in enum
                        ^^^^^ [1]
   proptype_oneOf.js:9:12
    9|     mixed: React.PropTypes.oneOf(["foo", 0, true]),
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- proptype_oneOf.js:32:2

Cannot create `RequiredExample` element because property `p` is missing in props [1] but exists in propTypes of React
component [2].

   proptype_oneOf.js:32:2
   32| (<RequiredExample />); // error: `p` not found
        ^^^^^^^^^^^^^^^^^^^ [1]

References:
   proptype_oneOf.js:27:14
                    v
   27|   propTypes: {
   28|     p: React.PropTypes.oneOf([]).isRequired,
   29|   },
         ^ [2]


Error ------------------------------------------------------------------------------------------- proptype_oneOf.js:40:2

Cannot create `EmptyExample` element because number [1] is incompatible with empty [2] in property `nil`.

   proptype_oneOf.js:40:2
   40| (<EmptyExample nil={0} />); // number ~> empty
        ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOf.js:40:21
   40| (<EmptyExample nil={0} />); // number ~> empty
                           ^ [1]
   proptype_oneOf.js:36:10
   36|     nil: React.PropTypes.oneOf([]), // i.e., `empty`
                ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- proptype_oneOf.js:76:8

Cannot call `React.PropTypes.oneOf` because number [1] is not an array.

   proptype_oneOf.js:76:8
   76|     p: React.PropTypes.oneOf(0), // error: expected array, got 0
              ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOf.js:76:30
   76|     p: React.PropTypes.oneOf(0), // error: expected array, got 0
                                    ^ [1]


Error -------------------------------------------------------------------------------------- proptype_oneOfType.js:23:20

Cannot create `Example` element because property `prop` is missing in props [1] but exists in propTypes of React
component [2].

   proptype_oneOfType.js:23:20
   23| var fail_missing = <Example />;
                          ^^^^^^^^^^^ [1]

References:
   proptype_oneOfType.js:5:14
                    v
    5|   propTypes: {
    6|     prop: React.PropTypes.oneOfType([
    7|       React.PropTypes.string,
    8|       React.PropTypes.number
    9|     ]).isRequired
   10|   },
         ^ [2]


Error -------------------------------------------------------------------------------------- proptype_oneOfType.js:24:17

Cannot create `Example` element because in property `prop`:
 - Either boolean [1] is incompatible with string [2].
 - Or boolean [1] is incompatible with number [3].

   proptype_oneOfType.js:24:17
    24| var fail_bool = <Example prop={true} />;
                        ^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOfType.js:24:32
    24| var fail_bool = <Example prop={true} />;
                                       ^^^^ [1]
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [2]
   <BUILTINS>/react.js:447:36
   447|   number: React$PropType$Primitive<number>,
                                           ^^^^^^ [3]


Error -------------------------------------------------------------------------------------- proptype_oneOfType.js:29:21

Cannot create `Example` element because in property `prop`:
 - Either null [1] is incompatible with string [2].
 - Or null [1] is incompatible with number [3].

   proptype_oneOfType.js:29:21
    29| var todo_required = <Example prop={null} />;
                            ^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOfType.js:29:36
    29| var todo_required = <Example prop={null} />;
                                           ^^^^ [1]
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [2]
   <BUILTINS>/react.js:447:36
   447|   number: React$PropType$Primitive<number>,
                                           ^^^^^^ [3]


Error --------------------------------------------------------------------------------------- proptype_oneOfType.js:41:2

Cannot create `OptionalExample` element because number [1] is incompatible with string [2] in property `p`.

   proptype_oneOfType.js:41:2
    41| (<OptionalExample p={0} />); // error: number ~> string
         ^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOfType.js:41:22
    41| (<OptionalExample p={0} />); // error: number ~> string
                             ^ [1]
   <BUILTINS>/react.js:449:36
   449|   string: React$PropType$Primitive<string>,
                                           ^^^^^^ [2]


Error --------------------------------------------------------------------------------------- proptype_oneOfType.js:49:2

Cannot create `EmptyExample` element because number [1] is incompatible with empty [2] in property `nil`.

   proptype_oneOfType.js:49:2
   49| (<EmptyExample nil={0} />); // number ~> empty
        ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOfType.js:49:21
   49| (<EmptyExample nil={0} />); // number ~> empty
                           ^ [1]
   proptype_oneOfType.js:45:10
   45|     nil: React.PropTypes.oneOfType([]), // i.e., `empty`
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------- proptype_oneOfType.js:91:8

Cannot call `React.PropTypes.oneOfType` because number [1] is not an array.

   proptype_oneOfType.js:91:8
   91|     p: React.PropTypes.oneOfType(0), // error: expected array, got 0
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   proptype_oneOfType.js:91:34
   91|     p: React.PropTypes.oneOfType(0), // error: expected array, got 0
                                        ^ [1]


Error -------------------------------------------------------------------------------------- proptype_oneOfType.js:99:35

object literal [1] is not a React propType.

   99|     p: React.PropTypes.oneOfType([{}]), // error: expected prop type, got {}
                                         ^^ [1]


Error ------------------------------------------------------------------------------------------- proptype_shape.js:20:6

Cannot get `this.props.foo.baz` because property `baz` is missing in object type [1].

   proptype_shape.js:20:6
   20|     (this.props.foo.baz: string);
            ^^^^^^^^^^^^^^^^^^

References:
   proptype_shape.js:14:10
                v----------------------
   14|     foo: React.PropTypes.shape({
   15|       bar: React.PropTypes.string.isRequired,
   16|     }).isRequired,
           -^ [1]


Error ------------------------------------------------------------------------------------------- proptype_shape.js:24:5

Cannot assign `0` to `this.props.foo.baz` because property `baz` is missing in object type [1].

   proptype_shape.js:24:5
   24|     this.props.foo.baz = 0;
           ^^^^^^^^^^^^^^^^^^

References:
   proptype_shape.js:14:10
                v----------------------
   14|     foo: React.PropTypes.shape({
   15|       bar: React.PropTypes.string.isRequired,
   16|     }).isRequired,
           -^ [1]


Error ---------------------------------------------------------------------------------------- proptypes_builtins.js:7:2

Cannot cast `React.PropTypes.arrayOf` to `NoFun` because:
 - `ReactPropsCheckType` [1] is incompatible with mixed [2] in the first argument.
 - `ReactPropsChainableTypeChecker` [3] is incompatible with empty [4] in the return value.

   proptypes_builtins.js:7:2
     7| (React.PropTypes.arrayOf : NoFun);
         ^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:429:17
   429|   (typeChecker: ReactPropsCheckType) => ReactPropsChainableTypeChecker;
                        ^^^^^^^^^^^^^^^^^^^ [1]
   proptypes_builtins.js:3:14
     3| type NoFun = mixed => empty;
                     ^^^^^ [2]
   <BUILTINS>/react.js:429:41
   429|   (typeChecker: ReactPropsCheckType) => ReactPropsChainableTypeChecker;
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   proptypes_builtins.js:3:23
     3| type NoFun = mixed => empty;
                              ^^^^^ [4]


Error --------------------------------------------------------------------------------------- proptypes_builtins.js:11:2

Cannot cast `React.PropTypes.instanceOf` to `NoFun` because `ReactPropsChainableTypeChecker` [1] is incompatible with
empty [2] in the return value.

   proptypes_builtins.js:11:2
    11| (React.PropTypes.instanceOf : NoFun);
         ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:431:27
   431|   (expectedClass: any) => ReactPropsChainableTypeChecker;
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   proptypes_builtins.js:3:23
     3| type NoFun = mixed => empty;
                              ^^^^^ [2]


Error --------------------------------------------------------------------------------------- proptypes_builtins.js:15:2

Cannot cast `React.PropTypes.objectOf` to `NoFun` because:
 - `ReactPropsCheckType` [1] is incompatible with mixed [2] in the first argument.
 - `ReactPropsChainableTypeChecker` [3] is incompatible with empty [4] in the return value.

   proptypes_builtins.js:15:2
    15| (React.PropTypes.objectOf : NoFun);
         ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:433:17
   433|   (typeChecker: ReactPropsCheckType) => ReactPropsChainableTypeChecker;
                        ^^^^^^^^^^^^^^^^^^^ [1]
   proptypes_builtins.js:3:14
     3| type NoFun = mixed => empty;
                     ^^^^^ [2]
   <BUILTINS>/react.js:433:41
   433|   (typeChecker: ReactPropsCheckType) => ReactPropsChainableTypeChecker;
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   proptypes_builtins.js:3:23
     3| type NoFun = mixed => empty;
                              ^^^^^ [4]


Error --------------------------------------------------------------------------------------- proptypes_builtins.js:19:2

Cannot cast `React.PropTypes.oneOf` to `NoFun` because:
 - array type [1] is incompatible with mixed [2] in the first argument.
 - `ReactPropsChainableTypeChecker` [3] is incompatible with empty [4] in the return value.

   proptypes_builtins.js:19:2
    19| (React.PropTypes.oneOf : NoFun);
         ^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:435:20
   435|   (expectedValues: Array<any>) => ReactPropsChainableTypeChecker;
                           ^^^^^^^^^^ [1]
   proptypes_builtins.js:3:14
     3| type NoFun = mixed => empty;
                     ^^^^^ [2]
   <BUILTINS>/react.js:435:35
   435|   (expectedValues: Array<any>) => ReactPropsChainableTypeChecker;
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   proptypes_builtins.js:3:23
     3| type NoFun = mixed => empty;
                              ^^^^^ [4]


Error --------------------------------------------------------------------------------------- proptypes_builtins.js:23:2

Cannot cast `React.PropTypes.oneOfType` to `NoFun` because:
 - array type [1] is incompatible with mixed [2] in the first argument.
 - `ReactPropsChainableTypeChecker` [3] is incompatible with empty [4] in the return value.

   proptypes_builtins.js:23:2
    23| (React.PropTypes.oneOfType : NoFun);
         ^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:437:25
   437|   (arrayOfTypeCheckers: Array<ReactPropsCheckType>) =>
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   proptypes_builtins.js:3:14
     3| type NoFun = mixed => empty;
                     ^^^^^ [2]
   <BUILTINS>/react.js:438:5
   438|     ReactPropsChainableTypeChecker;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   proptypes_builtins.js:3:23
     3| type NoFun = mixed => empty;
                              ^^^^^ [4]


Error --------------------------------------------------------------------------------------- proptypes_builtins.js:27:2

Cannot cast `React.PropTypes.shape` to `NoFun` because:
 - object type [1] is incompatible with mixed [2] in the first argument.
 - `ReactPropsChainableTypeChecker` [3] is incompatible with empty [4] in the return value.

   proptypes_builtins.js:27:2
    27| (React.PropTypes.shape : NoFun);
         ^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:440:16
   440|   (shapeTypes: { [key: string]: ReactPropsCheckType, ... }) =>
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   proptypes_builtins.js:3:14
     3| type NoFun = mixed => empty;
                     ^^^^^ [2]
   <BUILTINS>/react.js:441:5
   441|     ReactPropsChainableTypeChecker;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   proptypes_builtins.js:3:23
     3| type NoFun = mixed => empty;
                              ^^^^^ [4]


Error ----------------------------------------------------------------------------------------- proptypes_sealed.js:18:6

Cannot get `this.props.baz` because property `baz` is missing in propTypes of React component [1].

   proptypes_sealed.js:18:6
   18|     (this.props.baz: string);
            ^^^^^^^^^^^^^^

References:
   proptypes_sealed.js:13:14
                    v
   13|   propTypes: {
   14|     foo: React.PropTypes.string.isRequired,
   15|   },
         ^ [1]


Error ----------------------------------------------------------------------------------------- proptypes_sealed.js:22:5

Cannot assign `0` to `this.props.baz` because property `baz` is missing in propTypes of React component [1].

   proptypes_sealed.js:22:5
   22|     this.props.baz = 0;
           ^^^^^^^^^^^^^^

References:
   proptypes_sealed.js:13:14
                    v
   13|   propTypes: {
   14|     foo: React.PropTypes.string.isRequired,
   15|   },
         ^ [1]


Error ------------------------------------------------------------------------------------------------------ ref.js:12:1

Cannot create `Foo` element because number [1] is incompatible with `Foo` [2] in the first argument of property `ref`.

   ref.js:12:1
   12| <Foo ref={(foo: number) => {}} />; // Error: `Foo` is not a `number`.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   ref.js:12:17
   12| <Foo ref={(foo: number) => {}} />; // Error: `Foo` is not a `number`.
                       ^^^^^^ [1]
   ref.js:5:7
    5| class Foo extends React.Component<{}, void> {}
             ^^^ [2]


Error ----------------------------------------------------------------------------------------------------- ref.js:13:19

Cannot cast `foo` to `Foo` because null [1] is incompatible with `Foo` [2].

   ref.js:13:19
    13| <Foo ref={foo => (foo: Foo)} />; // Error: `Foo` may be null.
                          ^^^

References:
   <BUILTINS>/react.js:197:39
   197|   | ((React$ElementRef<ElementType> | null) => mixed)
                                              ^^^^ [1]
   ref.js:13:24
    13| <Foo ref={foo => (foo: Foo)} />; // Error: `Foo` may be null.
                               ^^^ [2]


Error ----------------------------------------------------------------------------------------------------- ref.js:15:19

Cannot cast `foo` to union type because `Foo` [1] is incompatible with `Bar` [2].

   ref.js:15:19
   15| <Foo ref={foo => (foo: Bar | null)} />; // Error: `Foo` is not `Bar`.
                         ^^^

References:
   ref.js:5:7
    5| class Foo extends React.Component<{}, void> {}
             ^^^ [1]
   ref.js:15:24
   15| <Foo ref={foo => (foo: Bar | null)} />; // Error: `Foo` is not `Bar`.
                              ^^^ [2]


Error ------------------------------------------------------------------------------------------------------ ref.js:23:1

Cannot create `FooExact` element because number [1] is incompatible with `FooExact` [2] in the first argument of
property `ref`.

   ref.js:23:1
   23| <FooExact ref={(foo: number) => {}} />; // Error: `FooExact` is not a `number`.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   ref.js:23:22
   23| <FooExact ref={(foo: number) => {}} />; // Error: `FooExact` is not a `number`.
                            ^^^^^^ [1]
   ref.js:17:7
   17| class FooExact extends React.Component<{||}, void> {}
             ^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- ref.js:24:24

Cannot cast `foo` to `FooExact` because null [1] is incompatible with `FooExact` [2].

   ref.js:24:24
    24| <FooExact ref={foo => (foo: FooExact)} />; // Error: `FooExact` may be null.
                               ^^^

References:
   <BUILTINS>/react.js:197:39
   197|   | ((React$ElementRef<ElementType> | null) => mixed)
                                              ^^^^ [1]
   ref.js:24:29
    24| <FooExact ref={foo => (foo: FooExact)} />; // Error: `FooExact` may be null.
                                    ^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- ref.js:26:24

Cannot cast `foo` to union type because `FooExact` [1] is incompatible with `Bar` [2].

   ref.js:26:24
   26| <FooExact ref={foo => (foo: Bar | null)} />; // Error: `FooExact` is not `Bar`.
                              ^^^

References:
   ref.js:17:7
   17| class FooExact extends React.Component<{||}, void> {}
             ^^^^^^^^ [1]
   ref.js:26:29
   26| <FooExact ref={foo => (foo: Bar | null)} />; // Error: `FooExact` is not `Bar`.
                                   ^^^ [2]


Error ---------------------------------------------------------------------------------------------------- render.js:8:1

Cannot extend `React.Component` [1] with `A` because in the return value of property `render`:
 - Either undefined [2] is incompatible with null [3].
 - Or property `@@iterator` is missing in undefined [2] but exists in `$Iterable` [4].

   render.js:8:1
       v------------------------------------------
    8| class A extends React.Component<{}, void> {
    9|   render = () => {};
   10| }
       ^

References:
   render.js:8:17
    8| class A extends React.Component<{}, void> {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   render.js:9:17
    9|   render = () => {};
                       ^ [2]
   <BUILTINS>/react.js:14:5
   14|   | null
           ^^^^ [3]
   <BUILTINS>/react.js:20:5
   20|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [4]


Error -------------------------------------------------------------------------------------------------- render.js:24:51

Cannot assign function to `C` because in the return value:
 - Either undefined [1] is incompatible with null [2].
 - Or property `@@iterator` is missing in undefined [1] but exists in `$Iterable` [3].

   render.js:24:51
   24| const C: React$StatelessFunctionalComponent<{}> = props => {};
                                                         ^^^^^^^^^^^

References:
   render.js:24:59
   24| const C: React$StatelessFunctionalComponent<{}> = props => {};
                                                                 ^ [1]
   <BUILTINS>/react.js:14:5
   14|   | null
           ^^^^ [2]
   <BUILTINS>/react.js:20:5
   20|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [3]


Error -------------------------------------------------------------------------------------------------- render.js:25:51

Cannot assign function to `D` because in the return value:
 - Either undefined [1] is incompatible with null [2].
 - Or property `@@iterator` is missing in undefined [1] but exists in `$Iterable` [3].

   render.js:25:51
                                                         v---------
   25| const D: React$StatelessFunctionalComponent<{}> = props => {
   26|   return;
   27| };
       ^

References:
   render.js:26:3
   26|   return;
         ^^^^^^^ [1]
   <BUILTINS>/react.js:14:5
   14|   | null
           ^^^^ [2]
   <BUILTINS>/react.js:20:5
   20|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [3]


Error --------------------------------------------------------------------------------------------------- render.js:46:1

Cannot extend `React.Component` [1] with `F` because in the return value of property `render`:
 - Either undefined [2] is incompatible with null [3].
 - Or property `@@iterator` is missing in undefined [2] but exists in `$Iterable` [4].

   render.js:46:1
       v--------------------------------------------------------
   46| class F extends React.Component<UnfixedPropsType, void> {
   47|   render = () => this.props.foo;
   48| }
       ^

References:
   render.js:46:17
   46| class F extends React.Component<UnfixedPropsType, void> {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   render.js:41:33
   41| type UnfixedPropsType = {|foo?: string|};
                                       ^^^^^^ [2]
   <BUILTINS>/react.js:14:5
   14|   | null
           ^^^^ [3]
   <BUILTINS>/react.js:20:5
   20|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [4]


Error -------------------------------------------------------------------------------------------------- render.js:54:65

Cannot assign function to `G` because in the return value:
 - Either undefined [1] is incompatible with null [2].
 - Or property `@@iterator` is missing in undefined [1] but exists in `$Iterable` [3].

   render.js:54:65
                                                                       v---------
   54| const G: React$StatelessFunctionalComponent<UnfixedPropsType> = props => {
   55|   return props.foo;
   56| };
       ^

References:
   render.js:41:33
   41| type UnfixedPropsType = {|foo?: string|};
                                       ^^^^^^ [1]
   <BUILTINS>/react.js:14:5
   14|   | null
           ^^^^ [2]
   <BUILTINS>/react.js:20:5
   20|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------- render_callback.js:13:29

Cannot call `ReactDOM.render` with `document.querySelector(...)` bound to `container` because null [1] is incompatible
with `Element` [2].

   render_callback.js:13:29
     13| ReactDOM.render(<Example/>, document.querySelector('#site'), () => {
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1045:50
   1045|   querySelector(selector: string): HTMLElement | null;
                                                          ^^^^ [1]
   <BUILTINS>/react-dom.js:18:16
     18|     container: Element,
                        ^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- render_callback.js:17:29

Cannot call `ReactDOM.render` with `document.querySelector(...)` bound to `container` because null [1] is incompatible
with `Element` [2].

   render_callback.js:17:29
     17| ReactDOM.render(<Example/>, document.querySelector('#site'), function() {
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1045:50
   1045|   querySelector(selector: string): HTMLElement | null;
                                                          ^^^^ [1]
   <BUILTINS>/react-dom.js:18:16
     18|     container: Element,
                        ^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- render_callback.js:22:29

Cannot call `ReactDOM.render` with `document.querySelector(...)` bound to `container` because null [1] is incompatible
with `Element` [2].

   render_callback.js:22:29
     22| ReactDOM.render(<Example/>, document.querySelector('#site'), 1);
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1045:50
   1045|   querySelector(selector: string): HTMLElement | null;
                                                          ^^^^ [1]
   <BUILTINS>/react-dom.js:18:16
     18|     container: Element,
                        ^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- render_callback.js:22:62

Cannot call `ReactDOM.render` with `1` bound to `callback` because number [1] is incompatible with function type [2].

   render_callback.js:22:62
   22| ReactDOM.render(<Example/>, document.querySelector('#site'), 1);
                                                                    ^ [1]

References:
   <BUILTINS>/react-dom.js:19:16
   19|     callback?: () => void,
                      ^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- render_callback.js:23:29

Cannot call `ReactDOM.render` with `document.querySelector(...)` bound to `container` because null [1] is incompatible
with `Element` [2].

   render_callback.js:23:29
     23| ReactDOM.render(<Example/>, document.querySelector('#site'), {});
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1045:50
   1045|   querySelector(selector: string): HTMLElement | null;
                                                          ^^^^ [1]
   <BUILTINS>/react-dom.js:18:16
     18|     container: Element,
                        ^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- render_callback.js:23:62

Cannot call `ReactDOM.render` with object literal bound to `callback` because a call signature declaring the expected
parameter / return type is missing in object literal [1] but exists in function type [2].

   render_callback.js:23:62
   23| ReactDOM.render(<Example/>, document.querySelector('#site'), {});
                                                                    ^^ [1]

References:
   <BUILTINS>/react-dom.js:19:16
   19|     callback?: () => void,
                      ^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- render_callback.js:24:29

Cannot call `ReactDOM.render` with `document.querySelector(...)` bound to `container` because null [1] is incompatible
with `Element` [2].

   render_callback.js:24:29
     24| ReactDOM.render(<Example/>, document.querySelector('#site'), '');
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1045:50
   1045|   querySelector(selector: string): HTMLElement | null;
                                                          ^^^^ [1]
   <BUILTINS>/react-dom.js:18:16
     18|     container: Element,
                        ^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- render_callback.js:24:62

Cannot call `ReactDOM.render` with empty string bound to `callback` because string [1] is incompatible with function
type [2].

   render_callback.js:24:62
   24| ReactDOM.render(<Example/>, document.querySelector('#site'), '');
                                                                    ^^ [1]

References:
   <BUILTINS>/react-dom.js:19:16
   19|     callback?: () => void,
                      ^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- render_callback.js:25:29

Cannot call `ReactDOM.render` with `document.querySelector(...)` bound to `container` because null [1] is incompatible
with `Element` [2].

   render_callback.js:25:29
     25| ReactDOM.render(<Example/>, document.querySelector('#site'), null);
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:1045:50
   1045|   querySelector(selector: string): HTMLElement | null;
                                                          ^^^^ [1]
   <BUILTINS>/react-dom.js:18:16
     18|     container: Element,
                        ^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- render_callback.js:25:62

Cannot call `ReactDOM.render` with `null` bound to `callback` because null [1] is incompatible with function type [2].

   render_callback.js:25:62
   25| ReactDOM.render(<Example/>, document.querySelector('#site'), null);
                                                                    ^^^^ [1]

References:
   <BUILTINS>/react-dom.js:19:16
   19|     callback?: () => void,
                      ^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- test-utils.js:34:12

Cannot get `child.tagName` because property `tagName` is missing in `React.Component` [1].

   test-utils.js:34:12
   34|   child => child.tagName === 'BUTTON',
                  ^^^^^^^^^^^^^

References:
   <BUILTINS>/react-dom.js:90:19
   90|     test: (child: React$Component<any, any>) => boolean,
                         ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- test-utils.js:58:15

Cannot call `TestUtils.act` with function bound to `callback` because property `then` is missing in object literal [1]
but exists in `Thenable` [2] in the return value.

   test-utils.js:58:15
    58| TestUtils.act(() => ({count: 123})); // error
                      ^^^^^^^^^^^^^^^^^^^^

References:
   test-utils.js:58:22
    58| TestUtils.act(() => ({count: 123})); // error
                             ^^^^^^^^^^^^ [1]
   <BUILTINS>/react-dom.js:116:47
   116|   declare function act(callback: () => void | Thenable): Thenable;
                                                      ^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- undefined_prop.js:7:1

Cannot create `MyComponent` element because undefined [1] is incompatible with string [2] in property `title`.

   undefined_prop.js:7:1
    7| <MyComponent title={undefined} />;
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/core.js:13:24
   13| declare var undefined: void;
                              ^^^^ [1]
   undefined_prop.js:5:51
    5| class MyComponent extends React.Component<{title: string}> {}
                                                         ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ useCallback_hook.js:6:3

Cannot call `React.useCallback` because function [1] requires another argument.

   useCallback_hook.js:6:3
     6|   React.useCallback(); // Error: function requires another argument.
          ^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:360:38
                                             v----------------------------------------------
   360|   declare export function useCallback<T: (...args: $ReadOnlyArray<empty>) => mixed>(
   361|     callback: T,
   362|     inputs: ?$ReadOnlyArray<mixed>,
   363|   ): T;
          ---^ [1]


Error ---------------------------------------------------------------------------------------- useCallback_hook.js:12:23

Cannot assign `callback()` to `str` because number [1] is incompatible with string [2].

   useCallback_hook.js:12:23
   12|   const str: string = callback();// Error: number is incompatible with string.
                             ^^^^^^^^^^

References:
   useCallback_hook.js:10:44
   10|   const callback = React.useCallback(() => 123);
                                                  ^^^ [1]
   useCallback_hook.js:12:14
   12|   const str: string = callback();// Error: number is incompatible with string.
                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- useCallback_hook.js:21:3

Cannot call `callback` because function [1] requires another argument.

   useCallback_hook.js:21:3
   21|   callback(true); // Error: function requires another argument.
         ^^^^^^^^^^^^^^

References:
   useCallback_hook.js:16:38
                                            v------------------------------
   16|   const callback = React.useCallback((num: number, str: string) => {
   17|     (num: number);
   18|     (str: string);
   19|   });
         ^ [1]


Error ---------------------------------------------------------------------------------------- useCallback_hook.js:21:12

Cannot call `callback` with `true` bound to `num` because boolean [1] is incompatible with number [2].

   useCallback_hook.js:21:12
   21|   callback(true); // Error: function requires another argument.
                  ^^^^ [1]

References:
   useCallback_hook.js:16:44
   16|   const callback = React.useCallback((num: number, str: string) => {
                                                  ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- useCallback_hook.js:22:12

Cannot call `callback` with `'123'` bound to `num` because string [1] is incompatible with number [2].

   useCallback_hook.js:22:12
   22|   callback('123', 'abc'); // Error: string is incompatible with number.
                  ^^^^^ [1]

References:
   useCallback_hook.js:16:44
   16|   const callback = React.useCallback((num: number, str: string) => {
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- useContext_hook.js:6:3

Cannot call `React.useMutationEffect` because property `useMutationEffect` is missing in object type [1].

   useContext_hook.js:6:3
     6|   React.useMutationEffect(); // Error: function requires another argument.
          ^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error ----------------------------------------------------------------------------------------- useContext_hook.js:21:18

Cannot assign `React.useContext(...)` to `numericValue` because string [1] is incompatible with number [2].

   useContext_hook.js:21:18
   21|   numericValue = React.useContext(StringContext); // Error: string is incompatible with number
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   useContext_hook.js:19:45
   19|   const StringContext = React.createContext('hello');
                                                   ^^^^^^^ [1]
   useContext_hook.js:16:21
   16|   let numericValue: number;
                           ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- useContext_hook.js:23:53

Cannot assign `React.createContext(...)` to `InvalidContext` because inexact string [1] is incompatible with exact
`CustomType` [2] in type argument `T` [3].

   useContext_hook.js:23:53
    23|   const InvalidContext: React$Context<CustomType> = React.createContext('hello'); // Error: inexact string is incompatible with exact CustomType
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   useContext_hook.js:23:73
    23|   const InvalidContext: React$Context<CustomType> = React.createContext('hello'); // Error: inexact string is incompatible with exact CustomType
                                                                                ^^^^^^^ [1]
   useContext_hook.js:23:39
    23|   const InvalidContext: React$Context<CustomType> = React.createContext('hello'); // Error: inexact string is incompatible with exact CustomType
                                              ^^^^^^^^^^ [2]
   <BUILTINS>/react.js:204:28
   204| declare type React$Context<T> = {
                                   ^ [3]


Error ----------------------------------------------------------------------------------------- useContext_hook.js:29:17

Cannot assign `React.useContext(...)` to `stringValue` because `CustomType` [1] is incompatible with string [2].

   useContext_hook.js:29:17
   29|   stringValue = React.useContext(CustomContext); // Error: CustomType is incompatible with string
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   useContext_hook.js:25:38
   25|   const CustomContext: React$Context<CustomType> = React.createContext({
                                            ^^^^^^^^^^ [1]
   useContext_hook.js:15:20
   15|   let stringValue: string;
                          ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ useContext_hook.js:54:4

Cannot cast `bar` to string because number [1] is incompatible with string [2].

   useContext_hook.js:54:4
   54|   (bar: string); // Error: number is incompatible with string
          ^^^

References:
   useContext_hook.js:35:19
   35|     {foo: 0, bar: 0, baz: 0},
                         ^ [1]
   useContext_hook.js:54:9
   54|   (bar: string); // Error: number is incompatible with string
               ^^^^^^ [2]


Error --------------------------------------------------------------------------------------- useDebugValue_hook.js:5:24

Cannot call `React.useDebugValue` because property `useDebugValue` is missing in object type [1].

   useDebugValue_hook.js:5:24
     5| const undefinedValue = React.useDebugValue(123);
                               ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error -------------------------------------------------------------------------------------------- useEffect_hook.js:6:3

Cannot call `React.useEffect` because function [1] requires another argument.

   useEffect_hook.js:6:3
     6|   React.useEffect(); // Error: function requires another argument.
          ^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:350:36
                                           v
   350|   declare export function useEffect(
   351|     create: () => MaybeCleanUpFn,
   352|     inputs: ?$ReadOnlyArray<mixed>,
   353|   ): void;
          ------^ [1]


Error ------------------------------------------------------------------------------------------ useEffect_hook.js:22:19

Cannot call `React.useEffect` with `1` bound to `create` because number [1] is incompatible with function type [2].

   useEffect_hook.js:22:19
    22|   React.useEffect(1); // Error: number is incompatible with function type
                          ^ [1]

References:
   <BUILTINS>/react.js:351:13
   351|     create: () => MaybeCleanUpFn,
                    ^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ useEffect_hook.js:23:29

Cannot call `React.useEffect` with `1` bound to `inputs` because number [1] is incompatible with read-only array
type [2].

   useEffect_hook.js:23:29
    23|   React.useEffect(() => {}, 1); // Error: number is incompatible with function react-only array
                                    ^ [1]

References:
   <BUILTINS>/react.js:352:14
   352|     inputs: ?$ReadOnlyArray<mixed>,
                     ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ useEffect_hook.js:24:19

Cannot call `React.useEffect` with async function bound to `create` because a call signature declaring the expected
parameter / return type is missing in `Promise` [1] but exists in function type [2] in the return value.

   useEffect_hook.js:24:19
    24|   React.useEffect(async () => {}) // Error: promise is incompatible with function return type
                          ^^^^^^^^^^^^^^

References:
   useEffect_hook.js:24:30
    24|   React.useEffect(async () => {}) // Error: promise is incompatible with function return type
                                     ^ [1]
   <BUILTINS>/react.js:316:41
   316|   declare type MaybeCleanUpFn = void | (() => void);
                                                ^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ useEffect_hook.js:25:19

Cannot call `React.useEffect` with function bound to `create` because number [1] is incompatible with undefined [2] in
the return value of the return value.

   useEffect_hook.js:25:19
    25|   React.useEffect(() => () => 123) // Error: cleanup function should not return a value
                          ^^^^^^^^^^^^^^^

References:
   useEffect_hook.js:25:31
    25|   React.useEffect(() => () => 123) // Error: cleanup function should not return a value
                                      ^^^ [1]
   <BUILTINS>/react.js:316:47
   316|   declare type MaybeCleanUpFn = void | (() => void);
                                                      ^^^^ [2]


Error ---------------------------------------------------------------------------------- useImperativeHandle_hook.js:6:3

Cannot call `React.useImperativeHandle` because function [1] requires another argument.

   useImperativeHandle_hook.js:6:3
     6|   React.useImperativeHandle(); // Error: function requires another argument.
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:370:46
                                                     v---
   370|   declare export function useImperativeHandle<T>(
   371|     ref: { current: T | null, ... } | ((inst: T | null) => mixed) | null | void,
   372|     create: () => T,
   373|     inputs: ?$ReadOnlyArray<mixed>,
   374|   ): void;
          ------^ [1]


Error -------------------------------------------------------------------------------- useImperativeHandle_hook.js:31:34

Cannot call `React.useImperativeHandle` with function bound to `create` because inexact object literal [1] is
incompatible with exact `Interface` [2] in the return value.

   useImperativeHandle_hook.js:31:34
   31|   React.useImperativeHandle(ref, () => ({})); // Error: inexact object literal is incompatible with exact Interface
                                        ^^^^^^^^^^

References:
   useImperativeHandle_hook.js:31:41
   31|   React.useImperativeHandle(ref, () => ({})); // Error: inexact object literal is incompatible with exact Interface
                                               ^^ [1]
   useImperativeHandle_hook.js:30:31
   30|   const ref: {current: null | Interface } = React.createRef();
                                     ^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------- useImperativeHandle_hook.js:34:40

Cannot call `React.useImperativeHandle` with function bound to `create` because inexact `Interface` [1] is incompatible
with exact object literal [2] in the return value.

   useImperativeHandle_hook.js:34:40
   34|   React.useImperativeHandle(refSetter, () => ({})); // Error: inexact object literal is incompatible with exact Interface
                                              ^^^^^^^^^^

References:
   useImperativeHandle_hook.js:33:39
   33|   const refSetter = (instance: null | Interface) => {};
                                             ^^^^^^^^^ [1]
   useImperativeHandle_hook.js:34:47
   34|   React.useImperativeHandle(refSetter, () => ({})); // Error: inexact object literal is incompatible with exact Interface
                                                     ^^ [2]


Error -------------------------------------------------------------------------------------- useLayoutEffect_hook.js:6:3

Cannot call `React.useLayoutEffect` because function [1] requires another argument.

   useLayoutEffect_hook.js:6:3
     6|   React.useLayoutEffect(); // Error: function requires another argument.
          ^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:355:42
                                                 v
   355|   declare export function useLayoutEffect(
   356|     create: () => MaybeCleanUpFn,
   357|     inputs: ?$ReadOnlyArray<mixed>,
   358|   ): void;
          ------^ [1]


Error ------------------------------------------------------------------------------------ useLayoutEffect_hook.js:22:25

Cannot call `React.useLayoutEffect` with `1` bound to `create` because number [1] is incompatible with function
type [2].

   useLayoutEffect_hook.js:22:25
    22|   React.useLayoutEffect(1); // Error: number is incompatible with function type
                                ^ [1]

References:
   <BUILTINS>/react.js:356:13
   356|     create: () => MaybeCleanUpFn,
                    ^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------ useLayoutEffect_hook.js:23:35

Cannot call `React.useLayoutEffect` with `1` bound to `inputs` because number [1] is incompatible with read-only array
type [2].

   useLayoutEffect_hook.js:23:35
    23|   React.useLayoutEffect(() => {}, 1); // Error: number is incompatible with function react-only array
                                          ^ [1]

References:
   <BUILTINS>/react.js:357:14
   357|     inputs: ?$ReadOnlyArray<mixed>,
                     ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------ useLayoutEffect_hook.js:24:25

Cannot call `React.useLayoutEffect` with async function bound to `create` because a call signature declaring the
expected parameter / return type is missing in `Promise` [1] but exists in function type [2] in the return value.

   useLayoutEffect_hook.js:24:25
    24|   React.useLayoutEffect(async () => {}) // Error: promise is incompatible with function return type
                                ^^^^^^^^^^^^^^

References:
   useLayoutEffect_hook.js:24:36
    24|   React.useLayoutEffect(async () => {}) // Error: promise is incompatible with function return type
                                           ^ [1]
   <BUILTINS>/react.js:316:41
   316|   declare type MaybeCleanUpFn = void | (() => void);
                                                ^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------ useLayoutEffect_hook.js:25:25

Cannot call `React.useLayoutEffect` with function bound to `create` because number [1] is incompatible with
undefined [2] in the return value of the return value.

   useLayoutEffect_hook.js:25:25
    25|   React.useLayoutEffect(() => () => 123) // Error: cleanup function should not return a value
                                ^^^^^^^^^^^^^^^

References:
   useLayoutEffect_hook.js:25:37
    25|   React.useLayoutEffect(() => () => 123) // Error: cleanup function should not return a value
                                            ^^^ [1]
   <BUILTINS>/react.js:316:47
   316|   declare type MaybeCleanUpFn = void | (() => void);
                                                      ^^^^ [2]


Error ---------------------------------------------------------------------------------------------- useMemo_hook.js:6:3

Cannot call `React.useMemo` because function [1] requires another argument.

   useMemo_hook.js:6:3
     6|   React.useMemo(); // Error: function requires another argument.
          ^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:365:34
                                         v---
   365|   declare export function useMemo<T>(
   366|     create: () => T,
   367|     inputs: ?$ReadOnlyArray<mixed>,
   368|   ): T;
          ---^ [1]


Error -------------------------------------------------------------------------------------------- useMemo_hook.js:17:27

Cannot assign `React.useMemo(...)` to `invalid` because string [1] is incompatible with number [2].

   useMemo_hook.js:17:27
   17|   const invalid: number = React.useMemo(() => "abc"); // Error: string is incompatible with number
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   useMemo_hook.js:17:47
   17|   const invalid: number = React.useMemo(() => "abc"); // Error: string is incompatible with number
                                                     ^^^^^ [1]
   useMemo_hook.js:17:18
   17|   const invalid: number = React.useMemo(() => "abc"); // Error: string is incompatible with number
                        ^^^^^^ [2]


Error ------------------------------------------------------------------------------------ useMutationEffect_hook.js:6:3

Cannot call `React.useMutationEffect` because property `useMutationEffect` is missing in object type [1].

   useMutationEffect_hook.js:6:3
     6|   React.useMutationEffect(); // Error: function requires another argument.
          ^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error ----------------------------------------------------------------------------------- useMutationEffect_hook.js:11:3

Cannot call `React.useMutationEffect` because property `useMutationEffect` is missing in object type [1].

   useMutationEffect_hook.js:11:3
    11|   React.useMutationEffect(() => {});
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error ----------------------------------------------------------------------------------- useMutationEffect_hook.js:12:3

Cannot call `React.useMutationEffect` because property `useMutationEffect` is missing in object type [1].

   useMutationEffect_hook.js:12:3
    12|   React.useMutationEffect(() => {}, []);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error ----------------------------------------------------------------------------------- useMutationEffect_hook.js:13:3

Cannot call `React.useMutationEffect` because property `useMutationEffect` is missing in object type [1].

   useMutationEffect_hook.js:13:3
    13|   React.useMutationEffect(() => {}, [1, 2, 3]);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error ----------------------------------------------------------------------------------- useMutationEffect_hook.js:16:3

Cannot call `React.useMutationEffect` because property `useMutationEffect` is missing in object type [1].

   useMutationEffect_hook.js:16:3
    16|   React.useMutationEffect(() => () => {});
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error ----------------------------------------------------------------------------------- useMutationEffect_hook.js:17:3

Cannot call `React.useMutationEffect` because property `useMutationEffect` is missing in object type [1].

   useMutationEffect_hook.js:17:3
    17|   React.useMutationEffect(() => () => {}, []);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error ----------------------------------------------------------------------------------- useMutationEffect_hook.js:18:3

Cannot call `React.useMutationEffect` because property `useMutationEffect` is missing in object type [1].

   useMutationEffect_hook.js:18:3
    18|   React.useMutationEffect(() => () => {}, [1, 2, 3]);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error ----------------------------------------------------------------------------------- useMutationEffect_hook.js:22:3

Cannot call `React.useMutationEffect` because property `useMutationEffect` is missing in object type [1].

   useMutationEffect_hook.js:22:3
    22|   React.useMutationEffect(1); // Error: number is incompatible with function type
          ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error ----------------------------------------------------------------------------------- useMutationEffect_hook.js:23:3

Cannot call `React.useMutationEffect` because property `useMutationEffect` is missing in object type [1].

   useMutationEffect_hook.js:23:3
    23|   React.useMutationEffect(() => {}, 1); // Error: number is incompatible with function react-only array
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:376:26
                                 v-
   376|   declare export default {|
   377|     +DOM: typeof DOM,
   378|     +PropTypes: typeof PropTypes,
   379|     +version: typeof version,
   380|     +checkPropTypes: typeof checkPropTypes,
   381|     +memo: typeof memo,
   382|     +lazy: typeof lazy,
   383|     +createClass: typeof createClass,
   384|     +createContext: typeof createContext,
   385|     +createElement: typeof createElement,
   386|     +cloneElement: typeof cloneElement,
   387|     +createFactory: typeof createFactory,
   388|     +createRef: typeof createRef,
   389|     +forwardRef: typeof forwardRef,
   390|     +isValidElement: typeof isValidElement,
      :
   393|     +Fragment: typeof Fragment,
   394|     +Children: typeof Children,
   395|     +ConcurrentMode: typeof ConcurrentMode,
   396|     +StrictMode: typeof StrictMode,
   397|     +Suspense: typeof Suspense,
   398|     +useContext: typeof useContext,
   399|     +useState: typeof useState,
   400|     +useReducer: typeof useReducer,
   401|     +useRef: typeof useRef,
   402|     +useEffect: typeof useEffect,
   403|     +useLayoutEffect: typeof useLayoutEffect,
   404|     +useCallback: typeof useCallback,
   405|     +useMemo: typeof useMemo,
   406|     +useImperativeHandle: typeof useImperativeHandle,
   407|   |};
          -^ [1]


Error ------------------------------------------------------------------------------------------- useReducer_hook.js:6:3

Cannot call `React.useReducer` because:
 - Either function type [1] requires another argument from call of method `useReducer` [2].
 - Or function type [3] requires another argument from call of method `useReducer` [2].
 - Or function type [4] requires another argument from call of method `useReducer` [2].

   useReducer_hook.js:6:3
     6|   React.useReducer(); // Error: function requires another argument.
          ^^^^^^^^^^^^^^^^^^ [2]

References:
   <BUILTINS>/react.js:329:37
                                            v------
   329|   declare export function useReducer<S, A>(
   330|     reducer: (S, A) => S,
   331|     initialState: S,
   332|   ): [S, Dispatch<A>];
          ------------------^ [1]
   <BUILTINS>/react.js:334:37
                                            v------
   334|   declare export function useReducer<S, A>(
   335|     reducer: (S, A) => S,
   336|     initialState: S,
   337|     init: void,
   338|   ): [S, Dispatch<A>];
          ------------------^ [3]
   <BUILTINS>/react.js:340:37
                                            v---------
   340|   declare export function useReducer<S, A, I>(
   341|     reducer: (S, A) => S,
   342|     initialArg: I,
   343|     init: (I) => S,
   344|   ): [S, Dispatch<A>];
          ------------------^ [4]


Error ------------------------------------------------------------------------------------------ useReducer_hook.js:27:4

Cannot cast `state.count` to string because:
 - number [1] is incompatible with string [2].
 - number [3] is incompatible with string [2].
 - number [4] is incompatible with string [2].
 - number [5] is incompatible with string [2].
 - number [6] is incompatible with string [2].
 - number [7] is incompatible with string [2].

   useReducer_hook.js:27:4
   27|   (state.count: string); // Error: number is incompatible with string
          ^^^^^^^^^^^

References:
   useReducer_hook.js:14:23
   14|       return { count: state.count + 1 };
                             ^^^^^^^^^^^^^^^ [1]
   useReducer_hook.js:27:17
   27|   (state.count: string); // Error: number is incompatible with string
                       ^^^^^^ [2]
   useReducer_hook.js:16:23
   16|       return { count: state.count - 1 };
                             ^^^^^^^^^^^^^^^ [3]
   useReducer_hook.js:22:31
   22| const initialState = { count: 0 };
                                     ^ [4]
   useReducer_hook.js:29:38
   29|   dispatch({ type: "reset", payload: 123 });
                                            ^^^ [5]
   useReducer_hook.js:41:66
   41|   const [state, dispatch] = React.useReducer(reducer, { initial: 123 }, init);
                                                                        ^^^ [6]
   useReducer_hook.js:44:38
   44|   dispatch({ type: "reset", payload: 123 });
                                            ^^^ [7]


Error --------------------------------------------------------------------------------------------- useRef_hook.js:16:49

Cannot assign `React.useRef(...)` to `stringValue` because number [1] is incompatible with string [2] in property
`current`.

   useRef_hook.js:16:49
   16|   const stringValue: {current: string | null} = React.useRef(123); // Error: number is incompatible with string in property current
                                                       ^^^^^^^^^^^^^^^^^

References:
   useRef_hook.js:16:62
   16|   const stringValue: {current: string | null} = React.useRef(123); // Error: number is incompatible with string in property current
                                                                    ^^^ [1]
   useRef_hook.js:16:32
   16|   const stringValue: {current: string | null} = React.useRef(123); // Error: number is incompatible with string in property current
                                      ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- useRef_hook.js:17:49

Cannot assign `React.useRef(...)` to `numberValue` because string [1] is incompatible with number [2] in property
`current`.

   useRef_hook.js:17:49
   17|   const numberValue: {current: number | null} = React.useRef("abc"); // Error: string is incompatible with number in property current
                                                       ^^^^^^^^^^^^^^^^^^^

References:
   useRef_hook.js:17:62
   17|   const numberValue: {current: number | null} = React.useRef("abc"); // Error: string is incompatible with number in property current
                                                                    ^^^^^ [1]
   useRef_hook.js:17:32
   17|   const numberValue: {current: number | null} = React.useRef("abc"); // Error: string is incompatible with number in property current
                                      ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- useRef_hook.js:18:38

Cannot assign `React.useRef(...)` to `nullValue` because boolean [1] is incompatible with null [2] in property
`current`.

   useRef_hook.js:18:38
   18|   const nullValue: {current: null} = React.useRef(true); // Error: boolean is incompatible with null in property current
                                            ^^^^^^^^^^^^^^^^^^

References:
   useRef_hook.js:18:51
   18|   const nullValue: {current: null} = React.useRef(true); // Error: boolean is incompatible with null in property current
                                                         ^^^^ [1]
   useRef_hook.js:18:30
   18|   const nullValue: {current: null} = React.useRef(true); // Error: boolean is incompatible with null in property current
                                    ^^^^ [2]


Error --------------------------------------------------------------------------------------------- useRef_hook.js:24:25

Cannot assign `123` to `stringValue.current` because number [1] is incompatible with string [2].

   useRef_hook.js:24:25
   24|   stringValue.current = 123; // Error: number is incompatible with string in property current
                               ^^^ [1]

References:
   useRef_hook.js:22:32
   22|   const stringValue: {current: string | null} = React.useRef(null);
                                      ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- useRef_hook.js:32:38

Cannot assign `React.useRef(...)` to `foo` because `Bar` [1] is incompatible with `Foo` [2] in property `current`.

   useRef_hook.js:32:38
   32|   const foo: {current: Foo | null} = React.useRef(new Bar()); // Error: Bar is incompatible with Foo in property current
                                            ^^^^^^^^^^^^^^^^^^^^^^^

References:
   useRef_hook.js:32:51
   32|   const foo: {current: Foo | null} = React.useRef(new Bar()); // Error: Bar is incompatible with Foo in property current
                                                         ^^^^^^^^^ [1]
   useRef_hook.js:32:24
   32|   const foo: {current: Foo | null} = React.useRef(new Bar()); // Error: Bar is incompatible with Foo in property current
                              ^^^ [2]


Error -------------------------------------------------------------------------------------------- useState_hook.js:10:2

Cannot cast `count` to string because number [1] is incompatible with string [2].

   useState_hook.js:10:2
   10| (count: string); // Error: number is incompatible with string
        ^^^^^

References:
   useState_hook.js:7:42
    7| const [count, setCount] = React.useState<number>(1);
                                                ^^^^^^ [1]
   useState_hook.js:10:9
   10| (count: string); // Error: number is incompatible with string
               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- useState_hook.js:13:10

Cannot call `setCount` with `true` bound to the first parameter because boolean [1] is incompatible with number [2].

   useState_hook.js:13:10
   13| setCount(true); // Error: boolean is incompatible with number
                ^^^^ [1]

References:
   useState_hook.js:7:42
    7| const [count, setCount] = React.useState<number>(1);
                                                ^^^^^^ [2]



Found 244 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
