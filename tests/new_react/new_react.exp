Error ----------------------------------------------------------------------------------------- argless_function.js:10:3

Cannot assign `3` to `x.foo` because property `foo` is missing in function [1]. [prop-missing]

   argless_function.js:10:3
   10| x.foo = 3; // Error, the props type for Component is a sealed empty object.
         ^^^

References:
   argless_function.js:9:8
    9| var x: React.ElementProps<typeof Component> = element.props;
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------- bad_default_props.js:15:18

Cannot use `React.Component` [1] with fewer than 1 type argument. [missing-type-arg]

   bad_default_props.js:15:18
   15| class C3 extends React.Component { // error
                        ^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:43:30
   43| declare class React$Component<Props, State = void> {
                                    ^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------- bad_default_props.js:20:18

Cannot use `React.Component` [1] with fewer than 1 type argument. [missing-type-arg]

   bad_default_props.js:20:18
   20| class C4 extends React.Component {
                        ^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:43:30
   43| declare class React$Component<Props, State = void> {
                                    ^^^^^^^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------------- classes.js:23:3

Cannot extend `React.Component` [1] with `Foo` because property `y_` is missing in function type [2] but exists in
object type [3] in the first parameter of property `setState`. [prop-missing]

   classes.js:23:3
   23|   setState(o: { y_: string }): void { }
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   classes.js:7:19
    7| class Foo extends React.Component<Props, State> {
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/react.js:52:37
   52|     partialState: ?$Shape<State> | ((State, Props) => ?$Shape<State>),
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]
   classes.js:23:15
   23|   setState(o: { y_: string }): void { }
                     ^^^^^^^^^^^^^^ [3]


Error -------------------------------------------------------------------------------------------------- classes.js:23:3

Cannot extend `React.Component` [1] with `Foo` because property `y_` is missing in `State` [2] but exists in object
type [3] in the first parameter of property `setState`. [prop-missing]

   classes.js:23:3
   23|   setState(o: { y_: string }): void { }
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   classes.js:7:19
    7| class Foo extends React.Component<Props, State> {
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   classes.js:7:42
    7| class Foo extends React.Component<Props, State> {
                                                ^^^^^ [2]
   classes.js:23:15
   23|   setState(o: { y_: string }): void { }
                     ^^^^^^^^^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------- classes.js:23:15

Cannot extend `React.Component` [1] with `Foo` because object type [2] is incompatible with null or undefined [3] in the
first parameter of property `setState`. [incompatible-extend]

   classes.js:23:15
   23|   setState(o: { y_: string }): void { }
                     ^^^^^^^^^^^^^^ [2]

References:
   classes.js:7:19
    7| class Foo extends React.Component<Props, State> {
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/react.js:52:19
   52|     partialState: ?$Shape<State> | ((State, Props) => ?$Shape<State>),
                         ^^^^^^^^^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------- classes.js:15:21

Cannot assign `this.props.x` to `_` because number [1] is incompatible with string [2]. [incompatible-type]

   classes.js:15:21
   15|     var _: string = this.props.x;
                           ^^^^^^^^^^^^

References:
   classes.js:4:19
    4| type Props = { x: number };
                         ^^^^^^ [1]
   classes.js:15:12
   15|     var _: string = this.props.x;
                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:20:23

Cannot assign object literal to `this.state` because string [1] is incompatible with number [2] in property `y`.
[incompatible-type]

   classes.js:20:23
   20|     this.state = { y: "" };
                             ^^ [1]

References:
   classes.js:5:19
    5| type State = { y: number };
                         ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:38:20

Cannot assign `0` to `Foo.defaultProps` because number [1] is incompatible with `DefaultProps` [2]. [incompatible-type]

   classes.js:38:20
   38| Foo.defaultProps = 0;
                          ^ [1]

References:
   classes.js:8:24
    8|   static defaultProps: DefaultProps;
                              ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:39:25

Cannot assign `<Foo />` to `foo` because number [1] is not a React component. [not-a-component]

   classes.js:39:25
   39| var foo: $jsx<number> = <Foo/>;
                               ^^^^^^

References:
   classes.js:39:15
   39| var foo: $jsx<number> = <Foo/>;
                     ^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------- classes.js:39:25

Cannot assign `<Foo />` to `foo` because number [1] is incompatible with string [2] in type argument `ElementType`.
[incompatible-type-arg]

   classes.js:39:25
    39| var foo: $jsx<number> = <Foo/>;
                                ^^^^^^

References:
   classes.js:39:15
    39| var foo: $jsx<number> = <Foo/>;
                      ^^^^^^ [1]
   <BUILTINS>/react.js:161:5
   161|   | string
            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:39:26

Cannot assign `<Foo />` to `foo` because class `Foo` [1] is incompatible with number [2] in property `type`.
[incompatible-type]

   classes.js:39:26
   39| var foo: $jsx<number> = <Foo/>;
                                ^^^

References:
   classes.js:7:7
    7| class Foo extends React.Component<Props, State> {
             ^^^ [1]
   classes.js:39:15
   39| var foo: $jsx<number> = <Foo/>;
                     ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:39:26

Cannot create `Foo` element because property `x` is missing in props [1] but exists in `Props` [2]. [prop-missing]

   classes.js:39:26
   39| var foo: $jsx<number> = <Foo/>;
                                ^^^

References:
   classes.js:39:25
   39| var foo: $jsx<number> = <Foo/>;
                               ^^^^^^ [1]
   classes.js:7:35
    7| class Foo extends React.Component<Props, State> {
                                         ^^^^^ [2]


Error -------------------------------------------------------------------------------------------- import-react.js:16:21

Cannot create `HelloMessage` element because number [1] is incompatible with string [2] in property `name`.
[incompatible-type]

   import-react.js:16:21
   16| <HelloMessage name={007} />; // number ~/~> string error
                           ^^^ [1]

References:
   import-react.js:14:52
   14| class HelloMessage extends React.Component<{ name: string }> {}
                                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- object_component.js:14:13

Cannot create `Component` element because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   object_component.js:14:13
   14| const _a = <Component />; // Error, missing bar
                   ^^^^^^^^^

References:
   object_component.js:14:12
   14| const _a = <Component />; // Error, missing bar
                  ^^^^^^^^^^^^^ [1]
   object_component.js:8:11
    8|   (props: {| foo: number, bar: number |}): React.Node,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- object_component.js:17:13

Cannot create `Component` element because property `baz` is missing in object type [1] but exists in props [2].
[prop-missing]

   object_component.js:17:13
   17| const _d = <Component foo={3} bar={3} baz={3} />; // Error, baz is not in the config
                   ^^^^^^^^^

References:
   object_component.js:8:11
    8|   (props: {| foo: number, bar: number |}): React.Node,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   object_component.js:17:12
   17| const _d = <Component foo={3} bar={3} baz={3} />; // Error, baz is not in the config
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- object_component.js:20:47

Cannot assign `null` to `_y` because null [1] is incompatible with undefined [2]. [incompatible-type]

   object_component.js:20:47
   20| const _y: React.ElementRef<ObjectComponent> = null; // Error, ref is undefined
                                                     ^^^^ [1]

References:
   object_component.js:20:11
   20| const _y: React.ElementRef<ObjectComponent> = null; // Error, ref is undefined
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- object_component.js:23:56

Cannot assign object literal to `_badProps` because property `foo` is missing in object literal [1] but exists in object
type [2]. [prop-missing]

   object_component.js:23:56
   23| const _badProps: React.ElementProps<ObjectComponent> = {bar: 3}; // Error missing foo
                                                              ^^^^^^^^ [1]

References:
   object_component.js:23:18
   23| const _badProps: React.ElementProps<ObjectComponent> = {bar: 3}; // Error missing foo
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- object_component.js:24:57

Cannot assign object literal to `_badProps2` because property `baz` is missing in object type [1] but exists in object
literal [2]. [prop-missing]

   object_component.js:24:57
   24| const _badProps2: React.ElementProps<ObjectComponent> = {bar: 3, foo: 3, baz: 3}; // Error extra baz
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^ [2]

References:
   object_component.js:24:19
   24| const _badProps2: React.ElementProps<ObjectComponent> = {bar: 3, foo: 3, baz: 3}; // Error extra baz
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------------- props4.js:8:11

Cannot create `JDiv` element because number [1] is incompatible with string [2] in property `id`. [incompatible-type]

   props4.js:8:11
   8| <JDiv id={42} />;
                ^^ [1]

References:
   props4.js:5:41
   5| class JDiv extends React.Component<{id: string}> {}
                                              ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- props4.js:16:2

Cannot create `Example` element because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   props4.js:16:2
   16| <Example foo="foo" />;
        ^^^^^^^

References:
   props4.js:16:1
   16| <Example foo="foo" />;
       ^^^^^^^^^^^^^^^^^^^^^ [1]
   props4.js:10:39
   10| class Example extends React.Component<{ bar: string }> {
                                             ^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- state5.js:5:23

Cannot get `this.state.x` because property `x` is missing in undefined [1]. [incompatible-use]

   state5.js:5:23
    5|     return this.state.x; // error: need to declare type of state
                             ^

References:
   <BUILTINS>/react.js:43:46
   43| declare class React$Component<Props, State = void> {
                                                    ^^^^ [1]


Error -------------------------------------------------------------------------------------------------- state6.js:29:19

Cannot call `this.setState` with function bound to `partialState` because string [1] is incompatible with number [2] in
property `bar` of the return value. [incompatible-call]

   state6.js:29:19
                         v-------------------------------------------
   29|     this.setState(() => ({ // Error: `bar` should be a number.
   30|       bar: '42',
   31|     }));
           -^

References:
   state6.js:30:12
   30|       bar: '42',
                  ^^^^ [1]
   state6.js:7:33
    7| type State = {foo: number, bar: number};
                                       ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- state6.js:33:29

Cannot get `prevState.nope` because property `nope` is missing in `State` [1]. [prop-missing]

   state6.js:33:29
   33|       console.log(prevState.nope); // Error: `nope` does not exist.
                                   ^^^^

References:
   state6.js:13:59
   13| class MyComponent extends React.Component<{prop: number}, State> {
                                                                 ^^^^^ [1]


Error -------------------------------------------------------------------------------------------------- state6.js:36:25

Cannot get `props.nope` because property `nope` is missing in object type [1]. [prop-missing]

   state6.js:36:25
   36|       console.log(props.nope); // Error: `nope` does not exist.
                               ^^^^

References:
   state6.js:13:43
   13| class MyComponent extends React.Component<{prop: number}, State> {
                                                 ^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------------- state6.js:41:25

Cannot call `this.setState` with `any` bound to `partialState` because number [1] is incompatible with `State` [2] in
the first parameter. [incompatible-call]

   state6.js:41:25
   41|     this.setState((any: StateUpdater3)); // Error: It has the wrong signature
                               ^^^^^^^^^^^^^

References:
   state6.js:11:24
   11| type StateUpdater3 = {(number): number, foo: number, bar: number};
                              ^^^^^^ [1]
   state6.js:13:59
   13| class MyComponent extends React.Component<{prop: number}, State> {
                                                                 ^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- state6.js:47:3

Cannot cast function to `State` because function [1] is incompatible with `$Shape` of `State` [2]. [incompatible-shape]

   state6.js:47:3
   47| ((() => {}): $Shape<State>); // Error: Functions are not a valid object shape.
         ^^^^^^^^ [1]

References:
   state6.js:47:21
   47| ((() => {}): $Shape<State>); // Error: Functions are not a valid object shape.
                           ^^^^^ [2]



Found 27 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
