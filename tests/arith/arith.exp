Error ---------------------------------------------------------------------------------------------------- Arith.js:10:7

Cannot call `num` with `x + y` bound to `x` because string [1] is incompatible with number [2]. [incompatible-call]

   Arith.js:10:7
   10|   num(x+y); // error
             ^^^ [1]

References:
   Arith.js:1:16
    1| function num(x:number) { }
                      ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:12:7

Cannot call `str` with `x + x` bound to `x` because number [1] is incompatible with string [2]. [incompatible-call]

   Arith.js:12:7
   12|   str(x+x); // error
             ^^^ [1]

References:
   Arith.js:3:16
    3| function str(x:string) { }
                      ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:13:7

Cannot use operator `+` with operands object literal [1] and string [2] [unsafe-addition]

   Arith.js:13:7
   13|   str(z+y); // error
             ^^^

References:
   Arith.js:8:11
    8|   var z = {};
                 ^^ [1]
   Arith.js:7:11
    7|   var y = "...";
                 ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:18:7

Cannot use operator `+` with operands null or undefined [1] and number [2] [unsafe-addition]

   Arith.js:18:7
   18|   num(x + y);
             ^^^^^

References:
   Arith.js:17:18
   17| function bar0(x: ?number, y: number) {
                        ^^^^^^^ [1]
   Arith.js:17:30
   17| function bar0(x: ?number, y: number) {
                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:21:7

Cannot use operator `+` with operands number [1] and null or undefined [2] [unsafe-addition]

   Arith.js:21:7
   21|   num(x + y);
             ^^^^^

References:
   Arith.js:20:18
   20| function bar1(x: number, y: ?number) {
                        ^^^^^^ [1]
   Arith.js:20:29
   20| function bar1(x: number, y: ?number) {
                                   ^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:26:7

Cannot use operator `+` with operands undefined [1] and number [2] [unsafe-addition]

   Arith.js:26:7
   26|   num(x + y);
             ^^^^^

References:
   Arith.js:25:19
   25| function bar2(x?: number, y: number) {
                         ^^^^^^ [1]
   Arith.js:25:30
   25| function bar2(x?: number, y: number) {
                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:29:7

Cannot use operator `+` with operands number [1] and undefined [2] [unsafe-addition]

   Arith.js:29:7
   29|   num(x + y);
             ^^^^^

References:
   Arith.js:28:18
   28| function bar3(x: number, y?: number) {
                        ^^^^^^ [1]
   Arith.js:28:30
   28| function bar3(x: number, y?: number) {
                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:34:7

Cannot use operator `+` with operands null or undefined [1] and number [2] [unsafe-addition]

   Arith.js:34:7
   34|   num(x + y);
             ^^^^^

References:
   Arith.js:33:19
   33| function bar4(x?: ?number, y: number) {
                         ^^^^^^^ [1]
   Arith.js:33:31
   33| function bar4(x?: ?number, y: number) {
                                     ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:34:7

Cannot use operator `+` with operands undefined [1] and number [2] [unsafe-addition]

   Arith.js:34:7
   34|   num(x + y);
             ^^^^^

References:
   Arith.js:33:19
   33| function bar4(x?: ?number, y: number) {
                         ^^^^^^^ [1]
   Arith.js:33:31
   33| function bar4(x?: ?number, y: number) {
                                     ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:37:7

Cannot use operator `+` with operands number [1] and null or undefined [2] [unsafe-addition]

   Arith.js:37:7
   37|   num(x + y);
             ^^^^^

References:
   Arith.js:36:18
   36| function bar5(x: number, y?: ?number) {
                        ^^^^^^ [1]
   Arith.js:36:30
   36| function bar5(x: number, y?: ?number) {
                                    ^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:37:7

Cannot use operator `+` with operands number [1] and undefined [2] [unsafe-addition]

   Arith.js:37:7
   37|   num(x + y);
             ^^^^^

References:
   Arith.js:36:18
   36| function bar5(x: number, y?: ?number) {
                        ^^^^^^ [1]
   Arith.js:36:30
   36| function bar5(x: number, y?: ?number) {
                                    ^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:40:5

Cannot use operator `+` with operands null [1] and null [2] [unsafe-addition]

   Arith.js:40:5
   40| num(null + null); // === 0
           ^^^^^^^^^^^

References:
   Arith.js:40:5
   40| num(null + null); // === 0
           ^^^^ [1]
   Arith.js:40:12
   40| num(null + null); // === 0
                  ^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:41:5

Cannot use operator `+` with operands undefined [1] and undefined [2] [unsafe-addition]

   Arith.js:41:5
   41| num(undefined + undefined); // === NaN
           ^^^^^^^^^^^^^^^^^^^^^

References:
   Arith.js:41:5
   41| num(undefined + undefined); // === NaN
           ^^^^^^^^^ [1]
   Arith.js:41:17
   41| num(undefined + undefined); // === NaN
                       ^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:43:5

Cannot use operator `+` with operands null [1] and number [2] [unsafe-addition]

   Arith.js:43:5
   43| num(null + 1); // === 1
           ^^^^^^^^

References:
   Arith.js:43:5
   43| num(null + 1); // === 1
           ^^^^ [1]
   Arith.js:43:12
   43| num(null + 1); // === 1
                  ^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:44:5

Cannot use operator `+` with operands number [1] and null [2] [unsafe-addition]

   Arith.js:44:5
   44| num(1 + null); // === 1
           ^^^^^^^^

References:
   Arith.js:44:5
   44| num(1 + null); // === 1
           ^ [1]
   Arith.js:44:9
   44| num(1 + null); // === 1
               ^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:45:5

Cannot use operator `+` with operands undefined [1] and number [2] [unsafe-addition]

   Arith.js:45:5
   45| num(undefined + 1); // === NaN
           ^^^^^^^^^^^^^

References:
   Arith.js:45:5
   45| num(undefined + 1); // === NaN
           ^^^^^^^^^ [1]
   Arith.js:45:17
   45| num(undefined + 1); // === NaN
                       ^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:46:5

Cannot use operator `+` with operands number [1] and undefined [2] [unsafe-addition]

   Arith.js:46:5
   46| num(1 + undefined); // === NaN
           ^^^^^^^^^^^^^

References:
   Arith.js:46:5
   46| num(1 + undefined); // === NaN
           ^ [1]
   Arith.js:46:9
   46| num(1 + undefined); // === NaN
               ^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:48:5

Cannot use operator `+` with operands null [1] and boolean [2] [unsafe-addition]

   Arith.js:48:5
   48| num(null + true); // === 1
           ^^^^^^^^^^^

References:
   Arith.js:48:5
   48| num(null + true); // === 1
           ^^^^ [1]
   Arith.js:48:12
   48| num(null + true); // === 1
                  ^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:49:5

Cannot use operator `+` with operands boolean [1] and null [2] [unsafe-addition]

   Arith.js:49:5
   49| num(true + null); // === 1
           ^^^^^^^^^^^

References:
   Arith.js:49:5
   49| num(true + null); // === 1
           ^^^^ [1]
   Arith.js:49:12
   49| num(true + null); // === 1
                  ^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:50:5

Cannot use operator `+` with operands undefined [1] and boolean [2] [unsafe-addition]

   Arith.js:50:5
   50| num(undefined + true); // === NaN
           ^^^^^^^^^^^^^^^^

References:
   Arith.js:50:5
   50| num(undefined + true); // === NaN
           ^^^^^^^^^ [1]
   Arith.js:50:17
   50| num(undefined + true); // === NaN
                       ^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:51:5

Cannot use operator `+` with operands boolean [1] and undefined [2] [unsafe-addition]

   Arith.js:51:5
   51| num(true + undefined); // === NaN
           ^^^^^^^^^^^^^^^^

References:
   Arith.js:51:5
   51| num(true + undefined); // === NaN
           ^^^^ [1]
   Arith.js:51:12
   51| num(true + undefined); // === NaN
                  ^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:53:5

Cannot use operator `+` with operands string [1] and boolean [2] [unsafe-addition]

   Arith.js:53:5
   53| str("foo" + true); // error
           ^^^^^^^^^^^^

References:
   Arith.js:53:5
   53| str("foo" + true); // error
           ^^^^^ [1]
   Arith.js:53:13
   53| str("foo" + true); // error
                   ^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:54:5

Cannot use operator `+` with operands boolean [1] and string [2] [unsafe-addition]

   Arith.js:54:5
   54| str(true + "foo"); // error
           ^^^^^^^^^^^^

References:
   Arith.js:54:5
   54| str(true + "foo"); // error
           ^^^^ [1]
   Arith.js:54:12
   54| str(true + "foo"); // error
                  ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:55:5

Cannot use operator `+` with operands string [1] and null [2] [unsafe-addition]

   Arith.js:55:5
   55| str("foo" + null); // error
           ^^^^^^^^^^^^

References:
   Arith.js:55:5
   55| str("foo" + null); // error
           ^^^^^ [1]
   Arith.js:55:13
   55| str("foo" + null); // error
                   ^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:56:5

Cannot use operator `+` with operands null [1] and string [2] [unsafe-addition]

   Arith.js:56:5
   56| str(null + "foo"); // error
           ^^^^^^^^^^^^

References:
   Arith.js:56:5
   56| str(null + "foo"); // error
           ^^^^ [1]
   Arith.js:56:12
   56| str(null + "foo"); // error
                  ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:57:5

Cannot use operator `+` with operands string [1] and undefined [2] [unsafe-addition]

   Arith.js:57:5
   57| str("foo" + undefined); // error
           ^^^^^^^^^^^^^^^^^

References:
   Arith.js:57:5
   57| str("foo" + undefined); // error
           ^^^^^ [1]
   Arith.js:57:13
   57| str("foo" + undefined); // error
                   ^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:58:5

Cannot use operator `+` with operands undefined [1] and string [2] [unsafe-addition]

   Arith.js:58:5
   58| str(undefined + "foo"); // error
           ^^^^^^^^^^^^^^^^^

References:
   Arith.js:58:5
   58| str(undefined + "foo"); // error
           ^^^^^^^^^ [1]
   Arith.js:58:17
   58| str(undefined + "foo"); // error
                       ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:62:6

Cannot use operator `+` with operands mixed [1] and mixed [2] [unsafe-addition]

   Arith.js:62:6
   62|     (x + y); // error
            ^^^^^

References:
   Arith.js:61:15
   61|   function(x: mixed, y: mixed) {
                     ^^^^^ [1]
   Arith.js:61:25
   61|   function(x: mixed, y: mixed) {
                               ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:63:6

Cannot use operator `+` with operands mixed [1] and number [2] [unsafe-addition]

   Arith.js:63:6
   63|     (x + 0); // error
            ^^^^^

References:
   Arith.js:61:15
   61|   function(x: mixed, y: mixed) {
                     ^^^^^ [1]
   Arith.js:63:10
   63|     (x + 0); // error
                ^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:64:6

Cannot use operator `+` with operands number [1] and mixed [2] [unsafe-addition]

   Arith.js:64:6
   64|     (0 + x); // error
            ^^^^^

References:
   Arith.js:64:6
   64|     (0 + x); // error
            ^ [1]
   Arith.js:61:15
   61|   function(x: mixed, y: mixed) {
                     ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:65:6

Cannot use operator `+` with operands mixed [1] and string [2] [unsafe-addition]

   Arith.js:65:6
   65|     (x + ""); // error
            ^^^^^^

References:
   Arith.js:61:15
   61|   function(x: mixed, y: mixed) {
                     ^^^^^ [1]
   Arith.js:65:10
   65|     (x + ""); // error
                ^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:66:6

Cannot use operator `+` with operands string [1] and mixed [2] [unsafe-addition]

   Arith.js:66:6
   66|     ("" + x); // error
            ^^^^^^

References:
   Arith.js:66:6
   66|     ("" + x); // error
            ^^ [1]
   Arith.js:61:15
   61|   function(x: mixed, y: mixed) {
                     ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:67:6

Cannot use operator `+` with operands mixed [1] and object literal [2] [unsafe-addition]

   Arith.js:67:6
   67|     (x + {}); // error
            ^^^^^^

References:
   Arith.js:61:15
   61|   function(x: mixed, y: mixed) {
                     ^^^^^ [1]
   Arith.js:67:10
   67|     (x + {}); // error
                ^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:68:6

Cannot use operator `+` with operands object literal [1] and mixed [2] [unsafe-addition]

   Arith.js:68:6
   68|     ({} + x); // error
            ^^^^^^

References:
   Arith.js:68:6
   68|     ({} + x); // error
            ^^ [1]
   Arith.js:61:15
   61|   function(x: mixed, y: mixed) {
                     ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:72:6

Cannot use operator `+` with operands number [1] and object literal [2] [unsafe-addition]

   Arith.js:72:6
   72|     (1 + {}); // error
            ^^^^^^

References:
   Arith.js:72:6
   72|     (1 + {}); // error
            ^ [1]
   Arith.js:72:10
   72|     (1 + {}); // error
                ^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:73:6

Cannot use operator `+` with operands object literal [1] and number [2] [unsafe-addition]

   Arith.js:73:6
   73|     ({} + 1); // error
            ^^^^^^

References:
   Arith.js:73:6
   73|     ({} + 1); // error
            ^^ [1]
   Arith.js:73:11
   73|     ({} + 1); // error
                 ^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:74:6

Cannot use operator `+` with operands string [1] and object literal [2] [unsafe-addition]

   Arith.js:74:6
   74|     ("1" + {}); // error
            ^^^^^^^^

References:
   Arith.js:74:6
   74|     ("1" + {}); // error
            ^^^ [1]
   Arith.js:74:12
   74|     ("1" + {}); // error
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- Arith.js:75:6

Cannot use operator `+` with operands object literal [1] and string [2] [unsafe-addition]

   Arith.js:75:6
   75|     ({} + "1"); // error
            ^^^^^^^^

References:
   Arith.js:75:6
   75|     ({} + "1"); // error
            ^^ [1]
   Arith.js:75:11
   75|     ({} + "1"); // error
                 ^^^ [2]


Error --------------------------------------------------------------------------------------------------- Arith.js:87:13

Cannot get `(x + y).length` because property `length` is missing in `Number` [1]. [prop-missing]

   Arith.js:87:13
    87|     (x + y).length; // error
                    ^^^^^^

References:
   <BUILTINS>/core.js:383:15
   383| declare class Number {
                      ^^^^^^ [1]


Error --------------------------------------------------------------------------------------------------- Arith.js:88:13

Cannot get `(1 + 2).length` because property `length` is missing in `Number` [1]. [prop-missing]

   Arith.js:88:13
    88|     (1 + 2).length; // error
                    ^^^^^^

References:
   <BUILTINS>/core.js:383:15
   383| declare class Number {
                      ^^^^^^ [1]


Error -------------------------------------------------------------------------------------------------- exponent.js:7:1

Cannot use operator `**=` with operands string [1] and number [2] [unsafe-arithmetic]

   exponent.js:7:1
   7| y **= 2; // error
      ^^^^^^^

References:
   exponent.js:6:8
   6| let y: string = "123";
             ^^^^^^ [1]
   exponent.js:7:7
   7| y **= 2; // error
            ^ [2]


Error -------------------------------------------------------------------------------------------------- generic.js:3:34

Cannot use operator `+` with operands mixed [1] and mixed [1] [unsafe-addition]

   generic.js:3:34
   3| function f1<A>(a: A): A { return a + a; } // error
                                       ^^^^^

References:
   generic.js:3:19
   3| function f1<A>(a: A): A { return a + a; } // error
                        ^ [1]


Error -------------------------------------------------------------------------------------------------- generic.js:4:41

Cannot use operator `+` with operands mixed [1] and mixed [2] [unsafe-addition]

   generic.js:4:41
   4| function f2<A,B>(a: A, b: B): A {return a + b; } // error
                                              ^^^^^

References:
   generic.js:4:21
   4| function f2<A,B>(a: A, b: B): A {return a + b; } // error
                          ^ [1]
   generic.js:4:27
   4| function f2<A,B>(a: A, b: B): A {return a + b; } // error
                                ^ [2]


Error -------------------------------------------------------------------------------------------------- generic.js:5:41

Cannot use operator `+` with operands mixed [1] and mixed [2] [unsafe-addition]

   generic.js:5:41
   5| function f3<A,B>(a: A, b: B): A {return b + a; } // error
                                              ^^^^^

References:
   generic.js:5:27
   5| function f3<A,B>(a: A, b: B): A {return b + a; } // error
                                ^ [1]
   generic.js:5:21
   5| function f3<A,B>(a: A, b: B): A {return b + a; } // error
                          ^ [2]


Error -------------------------------------------------------------------------------------------------- generic.js:6:41

Cannot use operator `+` with operands mixed [1] and mixed [2] [unsafe-addition]

   generic.js:6:41
   6| function f4<A,B>(a: A, b: B): B {return a + b; } // error
                                              ^^^^^

References:
   generic.js:6:21
   6| function f4<A,B>(a: A, b: B): B {return a + b; } // error
                          ^ [1]
   generic.js:6:27
   6| function f4<A,B>(a: A, b: B): B {return a + b; } // error
                                ^ [2]


Error -------------------------------------------------------------------------------------------------- generic.js:7:41

Cannot use operator `+` with operands mixed [1] and mixed [2] [unsafe-addition]

   generic.js:7:41
   7| function f5<A,B>(a: A, b: B): B {return b + a; } // error
                                              ^^^^^

References:
   generic.js:7:27
   7| function f5<A,B>(a: A, b: B): B {return b + a; } // error
                                ^ [1]
   generic.js:7:21
   7| function f5<A,B>(a: A, b: B): B {return b + a; } // error
                          ^ [2]


Error ------------------------------------------------------------------------------------------------------ mult.js:5:5

Cannot use operator `*` with operands null [1] and number [2] [unsafe-arithmetic]

   mult.js:5:5
   5| num(null * 1);
          ^^^^^^^^

References:
   mult.js:5:5
   5| num(null * 1);
          ^^^^ [1]
   mult.js:5:12
   5| num(null * 1);
                 ^ [2]


Error ------------------------------------------------------------------------------------------------------ mult.js:6:5

Cannot use operator `*` with operands number [1] and null [2] [unsafe-arithmetic]

   mult.js:6:5
   6| num(1 * null);
          ^^^^^^^^

References:
   mult.js:6:5
   6| num(1 * null);
          ^ [1]
   mult.js:6:9
   6| num(1 * null);
              ^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- mult.js:12:1

Cannot use operator `*=` with operands string [1] and number [2] [unsafe-arithmetic]

   mult.js:12:1
   12| y *= 2; // error
       ^^^^^^

References:
   mult.js:11:8
   11| let y: string = "123";
              ^^^^^^ [1]
   mult.js:12:6
   12| y *= 2; // error
            ^ [2]


Error ------------------------------------------------------------------------------------------------ relational.js:4:2

Cannot compare number [1] to string [2]. [invalid-compare]

   relational.js:4:2
   4| (1 < "foo"); // error
       ^ [1]

References:
   relational.js:4:6
   4| (1 < "foo"); // error
           ^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ relational.js:5:2

Cannot compare string [1] to number [2]. [invalid-compare]

   relational.js:5:2
   5| ("foo" < 1); // error
       ^^^^^ [1]

References:
   relational.js:5:10
   5| ("foo" < 1); // error
               ^ [2]


Error ------------------------------------------------------------------------------------------------ relational.js:7:2

Cannot compare number [1] to object literal [2]. [invalid-compare]

   relational.js:7:2
   7| (1 < {foo: 1}); // error
       ^ [1]

References:
   relational.js:7:6
   7| (1 < {foo: 1}); // error
           ^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ relational.js:8:2

Cannot compare object literal [1] to number [2]. [invalid-compare]

   relational.js:8:2
   8| ({foo: 1} < 1); // error
       ^^^^^^^^ [1]

References:
   relational.js:8:13
   8| ({foo: 1} < 1); // error
                  ^ [2]


Error ------------------------------------------------------------------------------------------------ relational.js:9:2

Cannot compare object literal [1] to object literal [2]. [invalid-compare]

   relational.js:9:2
   9| ({foo: 1} < {foo: 1}); // error
       ^^^^^^^^ [1]

References:
   relational.js:9:13
   9| ({foo: 1} < {foo: 1}); // error
                  ^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- relational.js:10:2

Cannot compare string [1] to object literal [2]. [invalid-compare]

   relational.js:10:2
   10| ("foo" < {foo: 1}); // error
        ^^^^^ [1]

References:
   relational.js:10:10
   10| ("foo" < {foo: 1}); // error
                ^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- relational.js:11:2

Cannot compare object literal [1] to string [2]. [invalid-compare]

   relational.js:11:2
   11| ({foo: 1} < "foo"); // error
        ^^^^^^^^ [1]

References:
   relational.js:11:13
   11| ({foo: 1} < "foo"); // error
                   ^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- relational.js:14:2

Cannot compare number [1] to null or undefined [2]. [invalid-compare]

   relational.js:14:2
   14| (1 < x); // 2 errors: null !~> number; undefined !~> number
        ^ [1]

References:
   relational.js:13:17
   13| var x = (null : ?number);
                       ^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- relational.js:15:2

Cannot compare null or undefined [1] to number [2]. [invalid-compare]

   relational.js:15:2
   15| (x < 1); // 2 errors: null !~> number; undefined !~> number
        ^

References:
   relational.js:13:17
   13| var x = (null : ?number);
                       ^^^^^^^ [1]
   relational.js:15:6
   15| (x < 1); // 2 errors: null !~> number; undefined !~> number
            ^ [2]


Error ----------------------------------------------------------------------------------------------- relational.js:17:2

Cannot compare null [1] to null [2]. [invalid-compare]

   relational.js:17:2
   17| (null < null); // error
        ^^^^ [1]

References:
   relational.js:17:9
   17| (null < null); // error
               ^^^^ [2]


Error ----------------------------------------------------------------------------------------------- relational.js:18:2

Cannot compare undefined [1] to null [2]. [invalid-compare]

   relational.js:18:2
   18| (undefined < null); // error
        ^^^^^^^^^ [1]

References:
   relational.js:18:14
   18| (undefined < null); // error
                    ^^^^ [2]


Error ----------------------------------------------------------------------------------------------- relational.js:19:2

Cannot compare null [1] to undefined [2]. [invalid-compare]

   relational.js:19:2
   19| (null < undefined); // error
        ^^^^ [1]

References:
   relational.js:19:9
   19| (null < undefined); // error
               ^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- relational.js:20:2

Cannot compare undefined [1] to undefined [2]. [invalid-compare]

   relational.js:20:2
   20| (undefined < undefined); // error
        ^^^^^^^^^ [1]

References:
   relational.js:20:14
   20| (undefined < undefined); // error
                    ^^^^^^^^^ [2]



Found 62 errors
