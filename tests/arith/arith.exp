Arith.js:13
 13:   num(x+y); // error
       ^^^^^^^^ function call
 13:   num(x+y); // error
           ^^^ string. This type is incompatible with
  4: function num(x:number) { }
                    ^^^^^^ number

Arith.js:15
 15:   str(x+x); // error
       ^^^^^^^^ function call
 15:   str(x+x); // error
           ^^^ number. This type is incompatible with
  6: function str(x:string) { }
                    ^^^^^^ string

Arith.js:16
 16:   str(z+y); // error
           ^ object literal. This type is incompatible with
 16:   str(z+y); // error
           ^^^ string

Arith.js:22
 22:   num(x+z);
       ^^^^^^^^ function call
 22:   num(x+z);
           ^^^ string. This type is incompatible with
  4: function num(x:number) { }
                    ^^^^^^ number

Arith.js:22
 22:   num(x+z);
           ^ number. This type is incompatible with
 22:   num(x+z);
           ^^^ string

Arith.js:22
 22:   num(x+z);
             ^ object literal. This type is incompatible with
 22:   num(x+z);
           ^^^ string

mult.js:5
  5: num(null * 1);
         ^^^^ null. This type is incompatible with
  5: num(null * 1);
         ^^^^^^^^ number

mult.js:6
  6: num(1 * null);
             ^^^^ null. This type is incompatible with
  6: num(1 * null);
         ^^^^^^^^ number

relational.js:4
  4: (1 < "foo"); // error
      ^ number. Cannot be compared to
  4: (1 < "foo"); // error
          ^^^^^ string

relational.js:5
  5: ("foo" < 1); // error
      ^^^^^ string. Cannot be compared to
  5: ("foo" < 1); // error
              ^ number

relational.js:7
  7: (1 < {foo: 1}); // error
      ^ number. Cannot be compared to
  7: (1 < {foo: 1}); // error
          ^^^^^^^^ object literal

relational.js:8
  8: ({foo: 1} < 1); // error
      ^^^^^^^^ object literal. Cannot be compared to
  8: ({foo: 1} < 1); // error
                 ^ number

relational.js:9
  9: ({foo: 1} < {foo: 1}); // error
      ^^^^^^^^ object literal. Cannot be compared to
  9: ({foo: 1} < {foo: 1}); // error
                 ^^^^^^^^ object literal

relational.js:10
 10: ("foo" < {foo: 1}); // error
      ^^^^^ string. Cannot be compared to
 10: ("foo" < {foo: 1}); // error
              ^^^^^^^^ object literal

relational.js:11
 11: ({foo: 1} < "foo"); // error
      ^^^^^^^^ object literal. Cannot be compared to
 11: ({foo: 1} < "foo"); // error
                 ^^^^^ string

relational.js:14
 14: (1 < x); // 2 errors: null !~> number; undefined !~> number
          ^ null. Cannot be compared to
 14: (1 < x); // 2 errors: null !~> number; undefined !~> number
      ^ number

relational.js:14
 14: (1 < x); // 2 errors: null !~> number; undefined !~> number
          ^ undefined. Cannot be compared to
 14: (1 < x); // 2 errors: null !~> number; undefined !~> number
      ^ number

relational.js:15
 15: (x < 1); // 2 errors: null !~> number; undefined !~> number
      ^ null. Cannot be compared to
 15: (x < 1); // 2 errors: null !~> number; undefined !~> number
          ^ number

relational.js:15
 15: (x < 1); // 2 errors: null !~> number; undefined !~> number
      ^ undefined. Cannot be compared to
 15: (x < 1); // 2 errors: null !~> number; undefined !~> number
          ^ number

relational.js:17
 17: (null < null); // error
      ^^^^ null. Cannot be compared to
 17: (null < null); // error
             ^^^^ null

relational.js:18
 18: (undefined < null); // error
      ^^^^^^^^^ undefined. Cannot be compared to
 18: (undefined < null); // error
                  ^^^^ null

relational.js:19
 19: (null < undefined); // error
      ^^^^ null. Cannot be compared to
 19: (null < undefined); // error
             ^^^^^^^^^ undefined

relational.js:20
 20: (undefined < undefined); // error
      ^^^^^^^^^ undefined. Cannot be compared to
 20: (undefined < undefined); // error
                  ^^^^^^^^^ undefined


Found 23 errors
