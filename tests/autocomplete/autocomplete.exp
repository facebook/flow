foo_parse_fail.js:10:17
Flags: --pretty
{"result":[{"name":"num","type":"number"},{"name":"str","type":"string"}]}

foo.js:10:5
Flags: --pretty
{"result":[{"name":"num","type":"number"},{"name":"str","type":"string"}]}

bar.js:4:5
Flags: --pretty
{"error":"not enough type information to extract members","result":[]}

str.js:3:9
Flags: --pretty
{
  "result":[
    {"name":"[Symbol.iterator]","type":"() => Iterator<string>"},
    {"name":"anchor","type":"(name: string) => string"},
    {"name":"at","type":"(index: number) => string | void"},
    {"name":"charAt","type":"(pos: number) => string"},
    {"name":"charCodeAt","type":"(index: number) => number"},
    {"name":"codePointAt","type":"(index: number) => number | void"},
    {"name":"concat","type":"(...strings: Array<string>) => string"},
    {
      "name":"endsWith",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {
      "name":"includes",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {"name":"indexOf","type":"(searchString: string, position?: number) => number"},
    {
      "name":"lastIndexOf",
      "type":"(searchString: string, position?: number) => number"
    },
    {"name":"length","type":"number"},
    {"name":"link","type":"(href: string) => string"},
    {
      "name":"localeCompare",
      "type":"(that: string, locales?: string | Array<string>, options?: Intl$CollatorOptions) => number"
    },
    {
      "name":"match",
      "type":"(regexp: string | RegExp) => RegExp$matchResult | null"
    },
    {
      "name":"matchAll",
      "type":"(regexp: string | RegExp) => Iterator<RegExp$matchResult>"
    },
    {"name":"normalize","type":"(format?: string) => string"},
    {"name":"padEnd","type":"(targetLength: number, padString?: string) => string"},
    {
      "name":"padStart",
      "type":"(targetLength: number, padString?: string) => string"
    },
    {"name":"repeat","type":"(count: number) => string"},
    {
      "name":"replace",
      "type":"(searchValue: string | RegExp, replaceValue: string | ((substring: string, ...args: Array<any>) => string)) => string"
    },
    {
      "name":"replaceAll",
      "type":"(searchValue: string | RegExp, replaceValue: string | ((substring: string, ...args: Array<any>) => string)) => string"
    },
    {"name":"search","type":"(regexp: string | RegExp) => number"},
    {"name":"slice","type":"(start?: number, end?: number) => string"},
    {
      "name":"split",
      "type":"(separator?: string | RegExp, limit?: number) => Array<string>"
    },
    {
      "name":"startsWith",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {"name":"substr","type":"(from: number, length?: number) => string"},
    {"name":"substring","type":"(start: number, end?: number) => string"},
    {
      "name":"toLocaleLowerCase",
      "type":"(locale?: string | Array<string>) => string"
    },
    {
      "name":"toLocaleUpperCase",
      "type":"(locale?: string | Array<string>) => string"
    },
    {"name":"toLowerCase","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"toUpperCase","type":"() => string"},
    {"name":"trim","type":"() => string"},
    {"name":"trimEnd","type":"() => string"},
    {"name":"trimLeft","type":"() => string"},
    {"name":"trimRight","type":"() => string"},
    {"name":"trimStart","type":"() => string"},
    {"name":"valueOf","type":"() => string"}
  ]
}

num.js:4:5
Flags: --pretty
{
  "result":[
    {"name":"toExponential","type":"(fractionDigits?: number) => string"},
    {"name":"toFixed","type":"(fractionDigits?: number) => string"},
    {
      "name":"toLocaleString",
      "type":"(locales?: string | Array<string>, options?: Intl$NumberFormatOptions) => string"
    },
    {"name":"toPrecision","type":"(precision?: number) => string"},
    {"name":"toString","type":"(radix?: number) => string"},
    {"name":"valueOf","type":"() => number"}
  ]
}

bool.js:3:6
Flags: --pretty
{
  "result":[
    {"name":"toString","type":"() => string"},
    {"name":"valueOf","type":"() => boolean"}
  ]
}

union.js:10:5
Flags: --pretty
{"result":[{"name":"bar","type":"any | string"}]}

object_builtins.js:4:5
Flags: --pretty
{"error":"not enough type information to extract members","result":[]}

exact.js:7:6
Flags: --pretty
{
  "result":[
    {"name":"async","type":""},
    {"name":"await","type":""},
    {"name":"break","type":""},
    {"name":"case","type":""},
    {"name":"catch","type":""},
    {"name":"class","type":""},
    {"name":"component","type":""},
    {"name":"const","type":""},
    {"name":"continue","type":""},
    {"name":"debugger","type":""},
    {"name":"declare","type":""},
    {"name":"default","type":""},
    {"name":"delete","type":""},
    {"name":"do","type":""},
    {"name":"else","type":""},
    {"name":"enum","type":""},
    {"name":"export","type":""},
    {"name":"extends","type":""},
    {"name":"finally","type":""},
    {"name":"for","type":""},
    {"name":"function","type":""},
    {"name":"hook","type":""},
    {"name":"if","type":""},
    {"name":"implements","type":""},
    {"name":"import","type":""},
    {"name":"interface","type":""},
    {"name":"let","type":""},
    {"name":"new","type":""},
    {"name":"obj","type":"{|num: number, str: string|}"},
    {"name":"opaque","type":""},
    {"name":"return","type":""},
    {"name":"static","type":""},
    {"name":"switch","type":""},
    {"name":"throw","type":""},
    {"name":"try","type":""},
    {"name":"type","type":""},
    {"name":"typeof","type":""},
    {"name":"var","type":""},
    {"name":"void","type":""},
    {"name":"while","type":""},
    {"name":"yield","type":""}
  ]
}

exact.js:10:5
Flags: --pretty
{"result":[{"name":"num","type":"number"},{"name":"str","type":"string"}]}

function_builtins.js:4:5
Flags: --pretty
{"error":"not enough type information to extract members","result":[]}

fun.js:4:5
Flags: --pretty
{
  "result":[
    {
      "name":"apply",
      "type":"<T, R, A: $ArrayLike<mixed> = $ReadOnly<[]>>(thisArg: T, args?: A) => R"
    },
    {"name":"arguments","type":"any"},
    {"name":"bind","type":"(thisArg: any, ...argArray: Array<any>) => any"},
    {
      "name":"call",
      "type":"<T, R, A: $ArrayLike<mixed> = $ReadOnly<[]>>(thisArg: T, ...args: A) => R"
    },
    {"name":"caller","type":"any | null"},
    {"name":"length","type":"number"},
    {"name":"name","type":"string"},
    {"name":"toString","type":"() => string"}
  ]
}

this.js:8:10
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"() => void"},
    {"name":"baz","type":"string"},
    {"name":"hello","type":"() => void"}
  ]
}

this2.js:5:6
Flags: --pretty
{
  "result":[
    {"name":"this","type":"this"},
    {"name":"throw","type":""},
    {"name":"try","type":""},
    {"name":"type","type":""},
    {"name":"typeof","type":""}
  ]
}

typeparams.js:6:16
Flags: --pretty
{
  "result":[
    {"name":"toExponential","type":"(fractionDigits?: number) => string"},
    {"name":"toFixed","type":"(fractionDigits?: number) => string"},
    {
      "name":"toLocaleString",
      "type":"(locales?: string | Array<string>, options?: Intl$NumberFormatOptions) => string"
    },
    {"name":"toPrecision","type":"(precision?: number) => string"},
    {"name":"toString","type":"(radix?: number) => string"},
    {"name":"valueOf","type":"() => number"}
  ]
}

typeparams_function.js:3:4
Flags: --pretty
{
  "result":[
    {"name":"async","type":""},
    {"name":"await","type":""},
    {"name":"break","type":""},
    {"name":"case","type":""},
    {"name":"catch","type":""},
    {"name":"class","type":""},
    {"name":"component","type":""},
    {"name":"const","type":""},
    {"name":"continue","type":""},
    {"name":"debugger","type":""},
    {"name":"declare","type":""},
    {"name":"default","type":""},
    {"name":"delete","type":""},
    {"name":"do","type":""},
    {"name":"else","type":""},
    {"name":"enum","type":""},
    {"name":"export","type":""},
    {"name":"extends","type":""},
    {"name":"finally","type":""},
    {"name":"for","type":""},
    {"name":"function","type":""},
    {"name":"hook","type":""},
    {"name":"if","type":""},
    {"name":"implements","type":""},
    {"name":"import","type":""},
    {"name":"interface","type":""},
    {"name":"let","type":""},
    {"name":"new","type":""},
    {"name":"opaque","type":""},
    {"name":"return","type":""},
    {"name":"static","type":""},
    {"name":"switch","type":""},
    {"name":"test","type":"<T>() => void"},
    {"name":"this","type":"this"},
    {"name":"throw","type":""},
    {"name":"try","type":""},
    {"name":"type","type":""},
    {"name":"typeof","type":""},
    {"name":"var","type":""},
    {"name":"void","type":""},
    {"name":"while","type":""},
    {"name":"yield","type":""}
  ]
}

generics.js:6:5
Flags: --pretty
{"result":[{"name":"cn","type":"C<number>"}]}

optional.js:4:14
Flags: --pretty
{
  "result":[
    {"name":"f","type":"(x?: string) => void"},
    {"name":"o","type":"{x?: string, ...}"},
    {"name":"x","type":"string | void"}
  ]
}

issue-1368.js:20:10
Flags: --pretty
{
  "result":[
    {"name":"extended","type":"string"},
    {"name":"method","type":"() => void"},
    {"name":"prop","type":"number"}
  ]
}

if.js:3:7
Flags: --pretty
{
  "result":[
    {"name":"[Symbol.iterator]","type":"() => Iterator<string>"},
    {"name":"anchor","type":"(name: string) => string"},
    {"name":"at","type":"(index: number) => string | void"},
    {"name":"charAt","type":"(pos: number) => string"},
    {"name":"charCodeAt","type":"(index: number) => number"},
    {"name":"codePointAt","type":"(index: number) => number | void"},
    {"name":"concat","type":"(...strings: Array<string>) => string"},
    {
      "name":"endsWith",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {
      "name":"includes",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {"name":"indexOf","type":"(searchString: string, position?: number) => number"},
    {
      "name":"lastIndexOf",
      "type":"(searchString: string, position?: number) => number"
    },
    {"name":"length","type":"number"},
    {"name":"link","type":"(href: string) => string"},
    {
      "name":"localeCompare",
      "type":"(that: string, locales?: string | Array<string>, options?: Intl$CollatorOptions) => number"
    },
    {
      "name":"match",
      "type":"(regexp: string | RegExp) => RegExp$matchResult | null"
    },
    {
      "name":"matchAll",
      "type":"(regexp: string | RegExp) => Iterator<RegExp$matchResult>"
    },
    {"name":"normalize","type":"(format?: string) => string"},
    {"name":"padEnd","type":"(targetLength: number, padString?: string) => string"},
    {
      "name":"padStart",
      "type":"(targetLength: number, padString?: string) => string"
    },
    {"name":"repeat","type":"(count: number) => string"},
    {
      "name":"replace",
      "type":"(searchValue: string | RegExp, replaceValue: string | ((substring: string, ...args: Array<any>) => string)) => string"
    },
    {
      "name":"replaceAll",
      "type":"(searchValue: string | RegExp, replaceValue: string | ((substring: string, ...args: Array<any>) => string)) => string"
    },
    {"name":"search","type":"(regexp: string | RegExp) => number"},
    {"name":"slice","type":"(start?: number, end?: number) => string"},
    {
      "name":"split",
      "type":"(separator?: string | RegExp, limit?: number) => Array<string>"
    },
    {
      "name":"startsWith",
      "type":"(searchString: string, position?: number) => boolean"
    },
    {"name":"substr","type":"(from: number, length?: number) => string"},
    {"name":"substring","type":"(start: number, end?: number) => string"},
    {
      "name":"toLocaleLowerCase",
      "type":"(locale?: string | Array<string>) => string"
    },
    {
      "name":"toLocaleUpperCase",
      "type":"(locale?: string | Array<string>) => string"
    },
    {"name":"toLowerCase","type":"() => string"},
    {"name":"toString","type":"() => string"},
    {"name":"toUpperCase","type":"() => string"},
    {"name":"trim","type":"() => string"},
    {"name":"trimEnd","type":"() => string"},
    {"name":"trimLeft","type":"() => string"},
    {"name":"trimRight","type":"() => string"},
    {"name":"trimStart","type":"() => string"},
    {"name":"valueOf","type":"() => string"}
  ]
}

override.js:10:16
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"() => void"},
    {"name":"foo","type":"() => string"},
    {"name":"override","type":"() => string"}
  ]
}

member_class_property.js:10:5
Flags: --lsp
{
  "label":"baz",
  "labelDetails":{"detail":": string"},
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},
    "newText":"baz"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"baz",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"baz_DEPRECATED",
  "labelDetails":{"detail":": number"},
  "kind":6,
  "detail":"number",
  "documentation":{"kind":"markdown","value":"**@deprecated**"},
  "tags":[1],
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},
    "newText":"baz_DEPRECATED"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"baz_DEPRECATED",
        "ac_type":"Acmem"
      }
    ]
  }
}

member_class_static.js:7:5
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"string"},
    {
      "name":"apply",
      "type":"<T, R, A: $ArrayLike<mixed> = $ReadOnly<[]>>(thisArg: T, args?: A) => R"
    },
    {"name":"arguments","type":"any"},
    {"name":"bind","type":"(thisArg: any, ...argArray: Array<any>) => any"},
    {
      "name":"call",
      "type":"<T, R, A: $ArrayLike<mixed> = $ReadOnly<[]>>(thisArg: T, ...args: A) => R"
    },
    {"name":"caller","type":"any | null"},
    {"name":"length","type":"number"},
    {"name":"name","type":"string"},
    {"name":"toString","type":"() => string"}
  ]
}

member_interface_property.js:10:5
Flags: --lsp
{
  "label":"bar",
  "labelDetails":{"detail":": string"},
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},
    "newText":"bar"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"bar",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"baz",
  "labelDetails":{"detail":": string"},
  "kind":6,
  "detail":"string",
  "documentation":{"kind":"markdown","value":"**@deprecated**"},
  "tags":[1],
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},
    "newText":"baz"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"baz",
        "ac_type":"Acmem"
      }
    ]
  }
}

member_middle.js:5:4
Flags: --pretty
{"result":[{"name":"foobar","type":"string"}]}

opaque_types.js:13:4
Flags: --pretty
{"result":[]}

opaque_types.js:16:4
Flags: --pretty
{"result":[{"name":"foo","type":"string"}]}

opaque_types.js:19:4
Flags: --pretty
{"result":[{"name":"bar","type":"number"},{"name":"foo","type":"string"}]}

opaque_types.js:22:4
Flags: --pretty
{"result":[{"name":"bar","type":"number"},{"name":"foo","type":"string"}]}

optional_chaining_middle.js:9:16
Flags: --pretty
{"result":[{"name":"bar","type":"void | number"}]}

optional_chaining_new.js:9:15
Flags: --pretty
{"result":[{"name":"bar","type":"void | number"}]}

optional_chaining_continue.js:13:19
Flags: --pretty
{"result":[{"name":"baz","type":"void | number"}]}

generic_alias.js:7:5
Flags: --pretty
{"result":[{"name":"name","type":"string"}]}

object_literal.js:5:16
Flags: --pretty
{"result":[{"name":"bar","type":"number"},{"name":"foo","type":"string"}]}

object_literal.js:7:17
Flags: --pretty
{"result":[{"name":"bar","type":"number"},{"name":"foo","type":"string"}]}

object_literal.js:12:4
Flags: --pretty
{
  "result":[{"name":"baz","type":"boolean | void"},{"name":"foo","type":"string | void"}]
}

object_literal.js:15:4
Flags: --pretty
{
  "result":[{"name":"baz","type":"boolean | void"},{"name":"foo","type":"string | void"}]
}

optional_object.js:3:5
Flags: --pretty
{"result":[{"name":"?.z","type":"void | number"}]}

indirect_array.js:5:3
Flags: --pretty
{
  "result":[
    {"name":"?.[Symbol.iterator]","type":"void | (() => Iterator<T>)"},
    {"name":"?.at","type":"void | ((index: number) => T | void)"},
    {
      "name":"?.concat",
      "type":"void | (<S, Item: $ReadOnlyArray<S> | S>(...items: Array<Item>) => Array<T | S>)"
    },
    {
      "name":"?.copyWithin",
      "type":"void | ((target: number, start: number, end?: number) => Array<T>)"
    },
    {"name":"?.entries","type":"void | (() => Iterator<[number, T]>)"},
    {
      "name":"?.every",
      "type":"void | (<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => boolean)"
    },
    {
      "name":"?.fill",
      "type":"void | ((value: T, begin?: number, end?: number) => Array<T>)"
    },
    {
      "name":"?.filter",
      "type":"void | (<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => Array<T>)"
    },
    {
      "name":"?.find",
      "type":"void | (<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => T | void)"
    },
    {
      "name":"?.findIndex",
      "type":"void | (<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => number)"
    },
    {
      "name":"?.findLast",
      "type":"void | (<This>(callbackfn: (value: T, index: number, array: $ReadOnlyArray<T>) => mixed, thisArg: This) => T | void)"
    },
    {
      "name":"?.findLastIndex",
      "type":"void | (<This>(callbackfn: (value: T, index: number, array: $ReadOnlyArray<T>) => mixed, thisArg: This) => number)"
    },
    {"name":"?.flat","type":"void | ((depth: number) => Array<mixed>)"},
    {
      "name":"?.flatMap",
      "type":"void | (<U, This>(callbackfn: (value: T, index: number, array: Array<T>) => $ReadOnlyArray<U> | U, thisArg: This) => Array<U>)"
    },
    {
      "name":"?.forEach",
      "type":"void | (<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => void)"
    },
    {
      "name":"?.includes",
      "type":"void | ((searchElement: mixed, fromIndex?: number) => boolean)"
    },
    {
      "name":"?.indexOf",
      "type":"void | ((searchElement: mixed, fromIndex?: number) => number)"
    },
    {"name":"?.join","type":"void | ((separator?: string) => string)"},
    {"name":"?.keys","type":"void | (() => Iterator<number>)"},
    {
      "name":"?.lastIndexOf",
      "type":"void | ((searchElement: mixed, fromIndex?: number) => number)"
    },
    {"name":"?.length","type":"void | number"},
    {
      "name":"?.map",
      "type":"void | (<U, This>(callbackfn: (value: T, index: number, array: Array<T>) => U, thisArg: This) => Array<U>)"
    },
    {"name":"?.pop","type":"void | (() => T | void)"},
    {"name":"?.push","type":"void | ((...items: Array<T>) => number)"},
    {
      "name":"?.reduce",
      "type":"void | (<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: Array<T>) => U, initialValue: U) => U)"
    },
    {
      "name":"?.reduceRight",
      "type":"void | (<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: Array<T>) => U, initialValue: U) => U)"
    },
    {"name":"?.reverse","type":"void | (() => Array<T>)"},
    {"name":"?.shift","type":"void | (() => T | void)"},
    {"name":"?.slice","type":"void | ((start?: number, end?: number) => Array<T>)"},
    {
      "name":"?.some",
      "type":"void | (<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => boolean)"
    },
    {
      "name":"?.sort",
      "type":"void | ((compareFn?: (a: T, b: T) => number) => Array<T>)"
    },
    {
      "name":"?.splice",
      "type":"void | ((start: number, deleteCount?: number, ...items: Array<T>) => Array<T>)"
    },
    {"name":"?.toLocaleString","type":"void | (() => string)"},
    {"name":"?.toReversed","type":"void | (() => Array<T>)"},
    {
      "name":"?.toSorted",
      "type":"void | ((compareFn?: (a: T, b: T) => number) => Array<T>)"
    },
    {
      "name":"?.toSpliced",
      "type":"void | (<S>(start: number, deleteCount?: number, ...items: Array<S>) => Array<T | S>)"
    },
    {"name":"?.unshift","type":"void | ((...items: Array<T>) => number)"},
    {"name":"?.values","type":"void | (() => Iterator<T>)"},
    {"name":"?.with","type":"void | ((index: number, value: T) => Array<T>)"}
  ]
}

indirect_array.js:11:3
Flags: --pretty
{
  "result":[
    {"name":"[Symbol.iterator]","type":"() => Iterator<T>"},
    {"name":"at","type":"(index: number) => T | void"},
    {
      "name":"concat",
      "type":"<S, Item: $ReadOnlyArray<S> | S>(...items: Array<Item>) => Array<T | S>"
    },
    {
      "name":"copyWithin",
      "type":"(target: number, start: number, end?: number) => Array<T>"
    },
    {"name":"entries","type":"() => Iterator<[number, T]>"},
    {
      "name":"every",
      "type":"<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => boolean"
    },
    {"name":"fill","type":"(value: T, begin?: number, end?: number) => Array<T>"},
    {
      "name":"filter",
      "type":"<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => Array<T>"
    },
    {
      "name":"find",
      "type":"<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => T | void"
    },
    {
      "name":"findIndex",
      "type":"<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => number"
    },
    {
      "name":"findLast",
      "type":"<This>(callbackfn: (value: T, index: number, array: $ReadOnlyArray<T>) => mixed, thisArg: This) => T | void"
    },
    {
      "name":"findLastIndex",
      "type":"<This>(callbackfn: (value: T, index: number, array: $ReadOnlyArray<T>) => mixed, thisArg: This) => number"
    },
    {"name":"flat","type":"(depth: number) => Array<mixed>"},
    {
      "name":"flatMap",
      "type":"<U, This>(callbackfn: (value: T, index: number, array: Array<T>) => $ReadOnlyArray<U> | U, thisArg: This) => Array<U>"
    },
    {
      "name":"forEach",
      "type":"<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => void"
    },
    {
      "name":"includes",
      "type":"(searchElement: mixed, fromIndex?: number) => boolean"
    },
    {
      "name":"indexOf",
      "type":"(searchElement: mixed, fromIndex?: number) => number"
    },
    {"name":"join","type":"(separator?: string) => string"},
    {"name":"keys","type":"() => Iterator<number>"},
    {
      "name":"lastIndexOf",
      "type":"(searchElement: mixed, fromIndex?: number) => number"
    },
    {"name":"length","type":"number"},
    {
      "name":"map",
      "type":"<U, This>(callbackfn: (value: T, index: number, array: Array<T>) => U, thisArg: This) => Array<U>"
    },
    {"name":"pop","type":"() => T | void"},
    {"name":"push","type":"(...items: Array<T>) => number"},
    {
      "name":"reduce",
      "type":"<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: Array<T>) => U, initialValue: U) => U"
    },
    {
      "name":"reduceRight",
      "type":"<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: Array<T>) => U, initialValue: U) => U"
    },
    {"name":"reverse","type":"() => Array<T>"},
    {"name":"shift","type":"() => T | void"},
    {"name":"slice","type":"(start?: number, end?: number) => Array<T>"},
    {
      "name":"some",
      "type":"<This>(callbackfn: (value: T, index: number, array: Array<T>) => mixed, thisArg: This) => boolean"
    },
    {"name":"sort","type":"(compareFn?: (a: T, b: T) => number) => Array<T>"},
    {
      "name":"splice",
      "type":"(start: number, deleteCount?: number, ...items: Array<T>) => Array<T>"
    },
    {"name":"toLocaleString","type":"() => string"},
    {"name":"toReversed","type":"() => Array<T>"},
    {"name":"toSorted","type":"(compareFn?: (a: T, b: T) => number) => Array<T>"},
    {
      "name":"toSpliced",
      "type":"<S>(start: number, deleteCount?: number, ...items: Array<S>) => Array<T | S>"
    },
    {"name":"unshift","type":"(...items: Array<T>) => number"},
    {"name":"values","type":"() => Iterator<T>"},
    {"name":"with","type":"(index: number, value: T) => Array<T>"}
  ]
}

eval_destructor.js:5:3
Flags: --pretty
{"result":[{"name":"a","type":"number"}]}

poly.js:5:3
Flags: --pretty
{"result":[{"name":"x","type":"number"},{"name":"y","type":"number"}]}

poly_no_args.js:5:3
Flags: --pretty
{"result":[{"name":"x","type":"number"}]}

identifier.js:10:18
Flags: --pretty
{
  "result":[
    {"name":"async","type":""},
    {"name":"await","type":""},
    {"name":"bartender","type":"number"},
    {"name":"class","type":""},
    {"name":"delete","type":""},
    {"name":"floater","type":"number"},
    {"name":"florescent","type":"() => void"},
    {"name":"florist","type":"number"},
    {"name":"flotsam","type":"number"},
    {"name":"flounder","type":"empty"},
    {"name":"flowery","type":"number"},
    {"name":"function","type":""},
    {"name":"import","type":""},
    {"name":"new","type":""},
    {"name":"this","type":"this"},
    {"name":"typeof","type":""},
    {"name":"void","type":""},
    {"name":"yield","type":""}
  ]
}

identifier_middle.js:6:4
Flags: --pretty
{
  "result":[{"name":"foobarbaz","type":"number"},{"name":"foobaz","type":"number"}]
}

identifier_import_type.js:14:4
Flags: --pretty
{
  "result":[
    {"name":"ThisIsAValue","type":"string"},
    {"name":"throw","type":""},
    {"name":"try","type":""},
    {"name":"type","type":""},
    {"name":"typeof","type":""}
  ]
}

identifier_type.js:7:4
Flags: --pretty
{"result":[{"name":"baz","type":"bar"},{"name":"break","type":""}]}

super.js:4:13
Flags: --pretty
{
  "result":[
    {"name":"async","type":""},
    {"name":"await","type":""},
    {"name":"class","type":""},
    {"name":"delete","type":""},
    {"name":"Foo","type":"class Foo"},
    {"name":"function","type":""},
    {"name":"import","type":""},
    {"name":"new","type":""},
    {"name":"super","type":"super"},
    {"name":"this","type":"this"},
    {"name":"this.bar","type":"any"},
    {"name":"typeof","type":""},
    {"name":"void","type":""},
    {"name":"yield","type":""}
  ]
}

this-2.js:5:10
Flags: --pretty
{"result":[{"name":"typeof","type":""}]}

this-2.js:9:4
Flags: --pretty
{
  "result":[
    {"name":"async","type":""},
    {"name":"await","type":""},
    {"name":"break","type":""},
    {"name":"case","type":""},
    {"name":"catch","type":""},
    {"name":"class","type":""},
    {"name":"component","type":""},
    {"name":"const","type":""},
    {"name":"continue","type":""},
    {"name":"debugger","type":""},
    {"name":"declare","type":""},
    {"name":"default","type":""},
    {"name":"delete","type":""},
    {"name":"do","type":""},
    {"name":"else","type":""},
    {"name":"enum","type":""},
    {"name":"export","type":""},
    {"name":"extends","type":""},
    {"name":"finally","type":""},
    {"name":"foo","type":"() => void"},
    {"name":"for","type":""},
    {"name":"function","type":""},
    {"name":"hook","type":""},
    {"name":"if","type":""},
    {"name":"implements","type":""},
    {"name":"import","type":""},
    {"name":"interface","type":""},
    {"name":"let","type":""},
    {"name":"new","type":""},
    {"name":"opaque","type":""},
    {"name":"return","type":""},
    {"name":"static","type":""},
    {"name":"switch","type":""},
    {"name":"this","type":"this"},
    {"name":"throw","type":""},
    {"name":"try","type":""},
    {"name":"type","type":""},
    {"name":"typeof","type":""},
    {"name":"var","type":""},
    {"name":"void","type":""},
    {"name":"while","type":""},
    {"name":"x","type":"any"},
    {"name":"y","type":"(z: empty) => any"},
    {"name":"yield","type":""}
  ]
}

this-2.js:13:24
Flags: --pretty
{"result":[{"name":"typeof","type":""}]}

this-2.js:17:14
Flags: --pretty
{
  "result":[
    {"name":"async","type":""},
    {"name":"await","type":""},
    {"name":"Bar","type":"class Bar"},
    {"name":"class","type":""},
    {"name":"delete","type":""},
    {"name":"foo","type":"() => void"},
    {"name":"function","type":""},
    {"name":"import","type":""},
    {"name":"new","type":""},
    {"name":"super","type":"super"},
    {"name":"this","type":"this"},
    {"name":"this.baz","type":"any"},
    {"name":"typeof","type":""},
    {"name":"void","type":""},
    {"name":"x","type":"any"},
    {"name":"y","type":"(z: empty) => any"},
    {"name":"yield","type":""}
  ]
}

pattern.js:4:8
Flags: --pretty
{"result":[]}

pattern.js:8:4
Flags: --pretty
{"result":[{"name":"foo","type":"number"}]}

pattern.js:12:14
Flags: --pretty
{"result":[]}

qux.js:6:4
Flags: --pretty
{"result":[{"name":"x","type":"number"}]}

namespace.js:8:12
Flags: --pretty
{"result":[{"name":"a","type":"number"},{"name":"s","type":"typeof S"}]}

namespace.js:12:12
Flags: --pretty
{
  "result":[
    {"name":"__dirname","type":"string"},
    {"name":"__filename","type":"string"},
    {"name":"AbortController","type":"typeof AbortController"},
    {"name":"AbortSignal","type":"typeof AbortSignal"},
    {"name":"AggregateError","type":"typeof AggregateError"},
    {"name":"alert","type":"(message?: any) => void"},
    {"name":"AnalyserNode","type":"typeof AnalyserNode"},
    {"name":"Animation","type":"typeof Animation"},
    {"name":"AnimationEffect","type":"typeof AnimationEffect"},
    {"name":"AnimationEvent","type":"typeof AnimationEvent"},
    {"name":"AnimationPlaybackEvent","type":"typeof AnimationPlaybackEvent"},
    {"name":"AnimationTimeline","type":"typeof AnimationTimeline"},
    {"name":"Array","type":"typeof Array"},
    {"name":"ArrayBuffer","type":"typeof ArrayBuffer"},
    {"name":"atob","type":"(encodedString: string) => string"},
    {
      "name":"Atomics",
      "type":"{+[key: $SymbolToStringTag]: \"Atomics\", add(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, and(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, compareExchange(typedArray: $SharedIntegerTypedArray, index: number, expectedValue: number, replacementValue: number): number, exchange(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, isLockFree(size: number): boolean, load(typedArray: $SharedIntegerTypedArray, index: number): number, notify(typedArray: Int32Array, index: number, count: number): number, or(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, store(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, sub(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, wait(typedArray: Int32Array, index: number, value: number, timeout?: number): \"ok\" | \"not-equal\" | \"timed-out\", xor(typedArray: $SharedIntegerTypedArray, index: number, value: number): number}"
    },
    {"name":"Attr","type":"typeof Attr"},
    {"name":"Audio","type":"typeof Audio"},
    {"name":"AudioBuffer","type":"typeof AudioBuffer"},
    {"name":"AudioBufferSourceNode","type":"typeof AudioBufferSourceNode"},
    {"name":"AudioContext","type":"typeof AudioContext"},
    {"name":"AudioDestinationNode","type":"typeof AudioDestinationNode"},
    {"name":"AudioListener","type":"typeof AudioListener"},
    {"name":"AudioNode","type":"typeof AudioNode"},
    {"name":"AudioParam","type":"typeof AudioParam"},
    {"name":"AudioProcessingEvent","type":"typeof AudioProcessingEvent"},
    {"name":"AudioTimestamp","type":"typeof AudioTimestamp"},
    {"name":"AudioTrack","type":"typeof AudioTrack"},
    {"name":"AudioTrackList","type":"typeof AudioTrackList"},
    {"name":"BaseAudioContext","type":"typeof BaseAudioContext"},
    {"name":"BeforeUnloadEvent","type":"typeof BeforeUnloadEvent"},
    {"name":"BigInt","type":"typeof BigInt"},
    {"name":"BigInt64Array","type":"typeof BigInt64Array"},
    {"name":"BigUint64Array","type":"typeof BigUint64Array"},
    {"name":"BiquadFilterNode","type":"typeof BiquadFilterNode"},
    {"name":"Blob","type":"typeof Blob"},
    {"name":"Boolean","type":"typeof Boolean"},
    {"name":"BroadcastChannel","type":"typeof BroadcastChannel"},
    {"name":"btoa","type":"(rawString: string) => string"},
    {"name":"Buffer","type":"typeof Buffer"},
    {"name":"Cache","type":"typeof Cache"},
    {"name":"caches","type":"CacheStorage"},
    {"name":"CacheStorage","type":"typeof CacheStorage"},
    {"name":"CallSite","type":"typeof CallSite"},
    {"name":"cancelAnimationFrame","type":"(requestId: AnimationFrameID) => void"},
    {"name":"cancelIdleCallback","type":"(id: IdleCallbackID) => void"},
    {"name":"CanvasCaptureMediaStream","type":"typeof CanvasCaptureMediaStream"},
    {"name":"CanvasDrawingStyles","type":"typeof CanvasDrawingStyles"},
    {"name":"CanvasGradient","type":"typeof CanvasGradient"},
    {"name":"CanvasPattern","type":"typeof CanvasPattern"},
    {"name":"CanvasRenderingContext2D","type":"typeof CanvasRenderingContext2D"},
    {"name":"ChannelMergerNode","type":"typeof ChannelMergerNode"},
    {"name":"ChannelSplitterNode","type":"typeof ChannelSplitterNode"},
    {"name":"CharacterData","type":"typeof CharacterData"},
    {
      "name":"child_process$ChildProcess",
      "type":"typeof child_process$ChildProcess"
    },
    {"name":"child_process$Error","type":"typeof child_process$Error"},
    {"name":"clearImmediate","type":"(immediateObject: any) => any"},
    {"name":"clearInterval","type":"(intervalId: ?IntervalID) => void"},
    {"name":"clearTimeout","type":"(timeoutId: ?TimeoutID) => void"},
    {"name":"Client","type":"typeof Client"},
    {"name":"ClientRect","type":"typeof ClientRect"},
    {"name":"ClientRectList","type":"typeof ClientRectList"},
    {"name":"Clients","type":"typeof Clients"},
    {"name":"clients","type":"Clients"},
    {"name":"Clipboard","type":"typeof Clipboard"},
    {"name":"ClipboardEvent","type":"typeof ClipboardEvent"},
    {"name":"ClipboardItem","type":"typeof ClipboardItem"},
    {"name":"close","type":"() => void"},
    {"name":"CloseEvent","type":"typeof CloseEvent"},
    {"name":"Comment","type":"typeof Comment"},
    {"name":"CompositionEvent","type":"typeof CompositionEvent"},
    {"name":"confirm","type":"(message?: string) => boolean"},
    {
      "name":"console",
      "type":"{_exception(...data: Array<any>): void, assert(condition: mixed, ...data: Array<any>): void, clear(): void, count(label?: string): void, countReset(label?: string): void, debug(...data: Array<any>): void, dir(...data: Array<any>): void, dirxml(...data: Array<any>): void, error(...data: Array<any>): void, group(...data: Array<any>): void, groupCollapsed(...data: Array<any>): void, groupEnd(): void, info(...data: Array<any>): void, log(...data: Array<any>): void, profile(name?: string): void, profileEnd(name?: string): void, table(tabularData: {[key: string]: any} | Array<{[key: string]: any}> | Array<Array<any>>): void, time(label?: string): void, timeEnd(label: string): void, timeLog(label?: string, ...data: Array<any>): void, timeStamp(label?: string): void, trace(...data: Array<any>): void, warn(...data: Array<any>): void, ...}"
    },
    {"name":"ConstantSourceNode","type":"typeof ConstantSourceNode"},
    {"name":"ConvolverNode","type":"typeof ConvolverNode"},
    {"name":"Coordinates","type":"typeof Coordinates"},
    {"name":"crypto","type":"Crypto"},
    {"name":"crypto$Cipher","type":"typeof crypto$Cipher"},
    {"name":"crypto$Decipher","type":"typeof crypto$Decipher"},
    {"name":"crypto$ECDH","type":"typeof crypto$ECDH"},
    {"name":"crypto$Hash","type":"typeof crypto$Hash"},
    {"name":"crypto$Hmac","type":"typeof crypto$Hmac"},
    {"name":"crypto$Sign","type":"typeof crypto$Sign"},
    {"name":"crypto$Verify","type":"typeof crypto$Verify"},
    {"name":"CSSConditionRule","type":"typeof CSSConditionRule"},
    {"name":"CSSGroupingRule","type":"typeof CSSGroupingRule"},
    {"name":"CSSKeyframeRule","type":"typeof CSSKeyframeRule"},
    {"name":"CSSKeyframesRule","type":"typeof CSSKeyframesRule"},
    {"name":"CSSMediaRule","type":"typeof CSSMediaRule"},
    {"name":"CSSRule","type":"typeof CSSRule"},
    {"name":"CSSRuleList","type":"typeof CSSRuleList"},
    {"name":"CSSStyleDeclaration","type":"typeof CSSStyleDeclaration"},
    {"name":"CSSStyleRule","type":"typeof CSSStyleRule"},
    {"name":"CSSStyleSheet","type":"typeof CSSStyleSheet"},
    {"name":"CSSSupportsRule","type":"typeof CSSSupportsRule"},
    {"name":"customElements","type":"CustomElementRegistry"},
    {"name":"CustomEvent","type":"typeof CustomEvent"},
    {"name":"DataTransfer","type":"typeof DataTransfer"},
    {"name":"DataTransferItem","type":"typeof DataTransferItem"},
    {"name":"DataTransferItemList","type":"typeof DataTransferItemList"},
    {"name":"DataView","type":"typeof DataView"},
    {"name":"Date","type":"typeof Date"},
    {"name":"decodeURI","type":"(encodedURI: string) => string"},
    {"name":"decodeURIComponent","type":"(encodedURIComponent: string) => string"},
    {
      "name":"DedicatedWorkerGlobalScope",
      "type":"typeof DedicatedWorkerGlobalScope"
    },
    {"name":"DelayNode","type":"typeof DelayNode"},
    {"name":"devicePixelRatio","type":"number"},
    {"name":"dgram$Socket","type":"typeof dgram$Socket"},
    {"name":"Document","type":"typeof Document"},
    {"name":"document","type":"Document"},
    {"name":"DocumentFragment","type":"typeof DocumentFragment"},
    {"name":"DocumentTimeline","type":"typeof DocumentTimeline"},
    {"name":"DocumentType","type":"typeof DocumentType"},
    {"name":"domain$Domain","type":"typeof domain$Domain"},
    {"name":"DOMError","type":"typeof DOMError"},
    {"name":"DOMImplementation","type":"typeof DOMImplementation"},
    {"name":"DOMParser","type":"typeof DOMParser"},
    {"name":"DOMRect","type":"typeof DOMRect"},
    {"name":"DOMRectList","type":"typeof DOMRectList"},
    {"name":"DOMRectReadOnly","type":"typeof DOMRectReadOnly"},
    {"name":"DOMStringList","type":"typeof DOMStringList"},
    {"name":"DOMTokenList","type":"typeof DOMTokenList"},
    {"name":"DragEvent","type":"typeof DragEvent"},
    {"name":"DynamicsCompressorNode","type":"typeof DynamicsCompressorNode"},
    {"name":"Element","type":"typeof Element"},
    {"name":"encodeURI","type":"(uri: string) => string"},
    {"name":"encodeURIComponent","type":"(uriComponent: string) => string"},
    {"name":"Error","type":"typeof Error"},
    {"name":"ErrorEvent","type":"typeof ErrorEvent"},
    {"name":"escape","type":"(str: string) => string"},
    {"name":"EvalError","type":"typeof EvalError"},
    {"name":"Event","type":"typeof Event"},
    {"name":"events$EventEmitter","type":"typeof events$EventEmitter"},
    {"name":"EventSource","type":"typeof EventSource"},
    {"name":"EventTarget","type":"typeof EventTarget"},
    {
      "name":"ExportedFunctionExoticObject",
      "type":"typeof ExportedFunctionExoticObject"
    },
    {"name":"exports","type":"{-[key: string]: mixed}"},
    {"name":"ExtendableEvent","type":"typeof ExtendableEvent"},
    {"name":"ExtendableMessageEvent","type":"typeof ExtendableMessageEvent"},
    {
      "name":"fetch",
      "type":"(input: RequestInfo, init?: RequestOptions) => Promise<Response>"
    },
    {"name":"FetchEvent","type":"typeof FetchEvent"},
    {"name":"File","type":"typeof File"},
    {"name":"FileList","type":"typeof FileList"},
    {"name":"FileReader","type":"typeof FileReader"},
    {"name":"FileSystemDirectoryHandle","type":"typeof FileSystemDirectoryHandle"},
    {"name":"FileSystemFileHandle","type":"typeof FileSystemFileHandle"},
    {"name":"FileSystemHandle","type":"typeof FileSystemHandle"},
    {
      "name":"FileSystemSyncAccessHandle",
      "type":"typeof FileSystemSyncAccessHandle"
    },
    {
      "name":"FileSystemWritableFileStream",
      "type":"typeof FileSystemWritableFileStream"
    },
    {"name":"FinalizationRegistry","type":"typeof FinalizationRegistry"},
    {"name":"Float32Array","type":"typeof Float32Array"},
    {"name":"Float64Array","type":"typeof Float64Array"},
    {"name":"focus","type":"() => void"},
    {"name":"FocusEvent","type":"typeof FocusEvent"},
    {"name":"FormData","type":"typeof FormData"},
    {"name":"Function","type":"typeof Function"},
    {"name":"GainNode","type":"typeof GainNode"},
    {"name":"Geolocation","type":"typeof Geolocation"},
    {
      "name":"getComputedStyle",
      "type":"(elt: Element, pseudoElt?: string) => CSSStyleDeclaration"
    },
    {"name":"getSelection","type":"() => Selection | null"},
    {"name":"global","type":"any"},
    {"name":"globalThis","type":"typeof globalThis"},
    {"name":"Headers","type":"typeof Headers"},
    {"name":"History","type":"typeof History"},
    {"name":"history","type":"History"},
    {"name":"HitRegionOptions","type":"typeof HitRegionOptions"},
    {"name":"HTMLAnchorElement","type":"typeof HTMLAnchorElement"},
    {"name":"HTMLAppletElement","type":"typeof HTMLAppletElement"},
    {"name":"HTMLAreaElement","type":"typeof HTMLAreaElement"},
    {"name":"HTMLAudioElement","type":"typeof HTMLAudioElement"},
    {"name":"HTMLBaseElement","type":"typeof HTMLBaseElement"},
    {"name":"HTMLBodyElement","type":"typeof HTMLBodyElement"},
    {"name":"HTMLBRElement","type":"typeof HTMLBRElement"},
    {"name":"HTMLButtonElement","type":"typeof HTMLButtonElement"},
    {"name":"HTMLCanvasElement","type":"typeof HTMLCanvasElement"},
    {"name":"HTMLCollection","type":"typeof HTMLCollection"},
    {"name":"HTMLDataElement","type":"typeof HTMLDataElement"},
    {"name":"HTMLDataListElement","type":"typeof HTMLDataListElement"},
    {"name":"HTMLDetailsElement","type":"typeof HTMLDetailsElement"},
    {"name":"HTMLDialogElement","type":"typeof HTMLDialogElement"},
    {"name":"HTMLDivElement","type":"typeof HTMLDivElement"},
    {"name":"HTMLDListElement","type":"typeof HTMLDListElement"},
    {"name":"HTMLElement","type":"typeof HTMLElement"},
    {"name":"HTMLEmbedElement","type":"typeof HTMLEmbedElement"},
    {"name":"HTMLFieldSetElement","type":"typeof HTMLFieldSetElement"},
    {"name":"HTMLFormElement","type":"typeof HTMLFormElement"},
    {"name":"HTMLHeadElement","type":"typeof HTMLHeadElement"},
    {"name":"HTMLHeadingElement","type":"typeof HTMLHeadingElement"},
    {"name":"HTMLHRElement","type":"typeof HTMLHRElement"},
    {"name":"HTMLHtmlElement","type":"typeof HTMLHtmlElement"},
    {"name":"HTMLIFrameElement","type":"typeof HTMLIFrameElement"},
    {"name":"HTMLImageElement","type":"typeof HTMLImageElement"},
    {"name":"HTMLInputElement","type":"typeof HTMLInputElement"},
    {"name":"HTMLLabelElement","type":"typeof HTMLLabelElement"},
    {"name":"HTMLLegendElement","type":"typeof HTMLLegendElement"},
    {"name":"HTMLLIElement","type":"typeof HTMLLIElement"},
    {"name":"HTMLLinkElement","type":"typeof HTMLLinkElement"},
    {"name":"HTMLMapElement","type":"typeof HTMLMapElement"},
    {"name":"HTMLMediaElement","type":"typeof HTMLMediaElement"},
    {"name":"HTMLMenuElement","type":"typeof HTMLMenuElement"},
    {"name":"HTMLMetaElement","type":"typeof HTMLMetaElement"},
    {"name":"HTMLMeterElement","type":"typeof HTMLMeterElement"},
    {"name":"HTMLModElement","type":"typeof HTMLModElement"},
    {"name":"HTMLObjectElement","type":"typeof HTMLObjectElement"},
    {"name":"HTMLOListElement","type":"typeof HTMLOListElement"},
    {"name":"HTMLOptGroupElement","type":"typeof HTMLOptGroupElement"},
    {"name":"HTMLOptionElement","type":"typeof HTMLOptionElement"},
    {"name":"HTMLOptionsCollection","type":"typeof HTMLOptionsCollection"},
    {"name":"HTMLOutputElement","type":"typeof HTMLOutputElement"},
    {"name":"HTMLParagraphElement","type":"typeof HTMLParagraphElement"},
    {"name":"HTMLParamElement","type":"typeof HTMLParamElement"},
    {"name":"HTMLPictureElement","type":"typeof HTMLPictureElement"},
    {"name":"HTMLPreElement","type":"typeof HTMLPreElement"},
    {"name":"HTMLProgressElement","type":"typeof HTMLProgressElement"},
    {"name":"HTMLQuoteElement","type":"typeof HTMLQuoteElement"},
    {"name":"HTMLScriptElement","type":"typeof HTMLScriptElement"},
    {"name":"HTMLSelectElement","type":"typeof HTMLSelectElement"},
    {"name":"HTMLSlotElement","type":"typeof HTMLSlotElement"},
    {"name":"HTMLSourceElement","type":"typeof HTMLSourceElement"},
    {"name":"HTMLSpanElement","type":"typeof HTMLSpanElement"},
    {"name":"HTMLStyleElement","type":"typeof HTMLStyleElement"},
    {"name":"HTMLTableCaptionElement","type":"typeof HTMLTableCaptionElement"},
    {"name":"HTMLTableCellElement","type":"typeof HTMLTableCellElement"},
    {"name":"HTMLTableColElement","type":"typeof HTMLTableColElement"},
    {"name":"HTMLTableElement","type":"typeof HTMLTableElement"},
    {"name":"HTMLTableRowElement","type":"typeof HTMLTableRowElement"},
    {"name":"HTMLTableSectionElement","type":"typeof HTMLTableSectionElement"},
    {"name":"HTMLTemplateElement","type":"typeof HTMLTemplateElement"},
    {"name":"HTMLTextAreaElement","type":"typeof HTMLTextAreaElement"},
    {"name":"HTMLTimeElement","type":"typeof HTMLTimeElement"},
    {"name":"HTMLTitleElement","type":"typeof HTMLTitleElement"},
    {"name":"HTMLTrackElement","type":"typeof HTMLTrackElement"},
    {"name":"HTMLUListElement","type":"typeof HTMLUListElement"},
    {"name":"HTMLUnknownElement","type":"typeof HTMLUnknownElement"},
    {"name":"HTMLVideoElement","type":"typeof HTMLVideoElement"},
    {"name":"http$Agent","type":"typeof http$Agent"},
    {"name":"http$ClientRequest","type":"typeof http$ClientRequest"},
    {"name":"http$IncomingMessage","type":"typeof http$IncomingMessage"},
    {"name":"http$Server","type":"typeof http$Server"},
    {"name":"http$ServerResponse","type":"typeof http$ServerResponse"},
    {"name":"https$Server","type":"typeof https$Server"},
    {"name":"IIRFilterNode","type":"typeof IIRFilterNode"},
    {"name":"Image","type":"typeof Image"},
    {"name":"ImageBitmap","type":"typeof ImageBitmap"},
    {"name":"ImageData","type":"typeof ImageData"},
    {
      "name":"importScripts",
      "type":"(...urls: Array<string | TrustedScriptURL>) => void"
    },
    {"name":"Infinity","type":"number"},
    {"name":"InputEvent","type":"typeof InputEvent"},
    {"name":"InstallEvent","type":"typeof InstallEvent"},
    {"name":"Int16Array","type":"typeof Int16Array"},
    {"name":"Int32Array","type":"typeof Int32Array"},
    {"name":"Int8Array","type":"typeof Int8Array"},
    {"name":"IntersectionObserver","type":"typeof IntersectionObserver"},
    {
      "name":"Intl",
      "type":"{Collator: Class<Intl$Collator>, DateTimeFormat: Class<Intl$DateTimeFormat>, Locale: Class<Intl$LocaleClass>, NumberFormat: Class<Intl$NumberFormat>, PluralRules: ?Class<Intl$PluralRules>, getCanonicalLocales?: (locales?: Intl$Locales) => Array<Intl$Locale>, ...}"
    },
    {"name":"Intl$Collator","type":"typeof Intl$Collator"},
    {"name":"Intl$DateTimeFormat","type":"typeof Intl$DateTimeFormat"},
    {"name":"Intl$LocaleClass","type":"typeof Intl$LocaleClass"},
    {"name":"Intl$NumberFormat","type":"typeof Intl$NumberFormat"},
    {"name":"Intl$PluralRules","type":"typeof Intl$PluralRules"},
    {"name":"isFinite","type":"(number: mixed) => boolean"},
    {"name":"isNaN","type":"(number: mixed) => boolean"},
    {"name":"Iterator","type":"typeof Iterator"},
    {
      "name":"JSON",
      "type":"{|+parse: (text: string, reviver?: (key: any, value: any) => any) => any, +stringify: ((value: null | string | number | boolean | interface {} | $ReadOnlyArray<mixed>, replacer?: ?((key: string, value: any) => any) | Array<any>, space?: string | number) => string) & ((value: mixed, replacer?: ?((key: string, value: any) => any) | Array<any>, space?: string | number) => string | void)|}"
    },
    {"name":"KeyboardEvent","type":"typeof KeyboardEvent"},
    {"name":"KeyframeEffect","type":"typeof KeyframeEffect"},
    {"name":"localStorage","type":"Storage"},
    {"name":"Location","type":"typeof Location"},
    {"name":"location","type":"Location"},
    {"name":"Map","type":"typeof Map"},
    {"name":"matchMedia","type":"(string) => MediaQueryList"},
    {
      "name":"Math",
      "type":"{E: number, LN10: number, LN2: number, LOG10E: number, LOG2E: number, PI: number, SQRT1_2: number, SQRT2: number, abs(x: number): number, acos(x: number): number, acosh(x: number): number, asin(x: number): number, asinh(x: number): number, atan(x: number): number, atan2(y: number, x: number): number, atanh(x: number): number, cbrt(x: number): number, ceil(x: number): number, clz32(x: number): number, cos(x: number): number, cosh(x: number): number, exp(x: number): number, expm1(x: number): number, floor(x: number): number, fround(x: number): number, hypot(...values: Array<number>): number, imul(x: number, y: number): number, log(x: number): number, log10(x: number): number, log1p(x: number): number, log2(x: number): number, max(...values: Array<number>): number, min(...values: Array<number>): number, pow(x: number, y: number): number, random(): number, round(x: number): number, sign(x: number): number, sin(x: number): number, sinh(x: number): number, sqrt(x: number): number, tan(x: number): number, tanh(x: number): number, trunc(x: number): number, ...}"
    },
    {"name":"MediaDeviceInfo","type":"typeof MediaDeviceInfo"},
    {"name":"MediaDevices","type":"typeof MediaDevices"},
    {
      "name":"MediaElementAudioSourceNode",
      "type":"typeof MediaElementAudioSourceNode"
    },
    {"name":"MediaError","type":"typeof MediaError"},
    {"name":"MediaKeys","type":"typeof MediaKeys"},
    {"name":"MediaKeySession","type":"typeof MediaKeySession"},
    {"name":"MediaKeyStatusMap","type":"typeof MediaKeyStatusMap"},
    {"name":"MediaList","type":"typeof MediaList"},
    {"name":"MediaQueryList","type":"typeof MediaQueryList"},
    {"name":"MediaQueryListEvent","type":"typeof MediaQueryListEvent"},
    {"name":"MediaRecorder","type":"typeof MediaRecorder"},
    {"name":"MediaSource","type":"typeof MediaSource"},
    {"name":"MediaStream","type":"typeof MediaStream"},
    {
      "name":"MediaStreamAudioDestinationNode",
      "type":"typeof MediaStreamAudioDestinationNode"
    },
    {
      "name":"MediaStreamAudioSourceNode",
      "type":"typeof MediaStreamAudioSourceNode"
    },
    {"name":"MediaStreamTrack","type":"typeof MediaStreamTrack"},
    {
      "name":"MediaStreamTrackAudioSourceNode",
      "type":"typeof MediaStreamTrackAudioSourceNode"
    },
    {"name":"MediaStreamTrackEvent","type":"typeof MediaStreamTrackEvent"},
    {"name":"MessageChannel","type":"typeof MessageChannel"},
    {"name":"MessageEvent","type":"typeof MessageEvent"},
    {"name":"MessagePort","type":"typeof MessagePort"},
    {"name":"MIDIAccess","type":"typeof MIDIAccess"},
    {"name":"MIDIConnectionEvent","type":"typeof MIDIConnectionEvent"},
    {"name":"MIDIInput","type":"typeof MIDIInput"},
    {"name":"MIDIInputMap","type":"typeof MIDIInputMap"},
    {"name":"MIDIMessageEvent","type":"typeof MIDIMessageEvent"},
    {"name":"MIDIOutput","type":"typeof MIDIOutput"},
    {"name":"MIDIOutputMap","type":"typeof MIDIOutputMap"},
    {"name":"MIDIPort","type":"typeof MIDIPort"},
    {"name":"MimeType","type":"typeof MimeType"},
    {"name":"MimeTypeArray","type":"typeof MimeTypeArray"},
    {
      "name":"module",
      "type":"{children: Array<any>, exports: any, filename: string, id: string, isPreloading: boolean, loaded: boolean, parent: any, path: string, paths: Array<string>, require(id: string): any, ...}"
    },
    {"name":"MouseEvent","type":"typeof MouseEvent"},
    {"name":"MutationObserver","type":"typeof MutationObserver"},
    {"name":"MutationRecord","type":"typeof MutationRecord"},
    {"name":"NamedNodeMap","type":"typeof NamedNodeMap"},
    {"name":"NaN","type":"number"},
    {"name":"NavigationPreloadManager","type":"typeof NavigationPreloadManager"},
    {"name":"NavigationPreloadState","type":"typeof NavigationPreloadState"},
    {"name":"Navigator","type":"typeof Navigator"},
    {"name":"navigator","type":"Navigator"},
    {
      "name":"NavigatorConcurrentHardware",
      "type":"typeof NavigatorConcurrentHardware"
    },
    {"name":"NavigatorContentUtils","type":"typeof NavigatorContentUtils"},
    {"name":"NavigatorCookies","type":"typeof NavigatorCookies"},
    {"name":"NavigatorID","type":"typeof NavigatorID"},
    {"name":"NavigatorLanguage","type":"typeof NavigatorLanguage"},
    {"name":"NavigatorOnLine","type":"typeof NavigatorOnLine"},
    {"name":"NavigatorPlugins","type":"typeof NavigatorPlugins"},
    {"name":"NavigatorStorage","type":"typeof NavigatorStorage"},
    {"name":"net$Server","type":"typeof net$Server"},
    {"name":"net$Socket","type":"typeof net$Socket"},
    {"name":"Node","type":"typeof Node"},
    {"name":"NodeFilter","type":"typeof NodeFilter"},
    {"name":"NodeIterator","type":"typeof NodeIterator"},
    {"name":"NodeList","type":"typeof NodeList"},
    {"name":"Notification","type":"typeof Notification"},
    {"name":"NotificationEvent","type":"typeof NotificationEvent"},
    {"name":"Number","type":"typeof Number"},
    {"name":"Object","type":"typeof Object"},
    {
      "name":"OfflineAudioCompletionEvent",
      "type":"typeof OfflineAudioCompletionEvent"
    },
    {"name":"OfflineAudioContext","type":"typeof OfflineAudioContext"},
    {"name":"onactivate","type":"?EventHandler"},
    {"name":"onfetch","type":"?EventHandler"},
    {"name":"onfocus","type":"(ev: Event) => any"},
    {"name":"onforeignfetch","type":"?EventHandler"},
    {"name":"oninstall","type":"?EventHandler"},
    {"name":"onmessage","type":"?EventHandler"},
    {
      "name":"open",
      "type":"(url?: string, target?: string, features?: string, replace?: boolean) => any"
    },
    {"name":"OscillatorNode","type":"typeof OscillatorNode"},
    {"name":"PageTransitionEvent","type":"typeof PageTransitionEvent"},
    {"name":"PannerNode","type":"typeof PannerNode"},
    {"name":"parent","type":"WindowProxy"},
    {"name":"parseFloat","type":"(string: mixed) => number"},
    {"name":"parseInt","type":"(string: mixed, radix?: number) => number"},
    {"name":"Path2D","type":"typeof Path2D"},
    {"name":"Performance","type":"typeof Performance"},
    {"name":"performance","type":"Performance"},
    {"name":"PerformanceEntry","type":"typeof PerformanceEntry"},
    {"name":"PerformanceEventTiming","type":"typeof PerformanceEventTiming"},
    {"name":"PerformanceLongTaskTiming","type":"typeof PerformanceLongTaskTiming"},
    {"name":"PerformanceNavigation","type":"typeof PerformanceNavigation"},
    {
      "name":"PerformanceNavigationTiming",
      "type":"typeof PerformanceNavigationTiming"
    },
    {"name":"PerformanceObserver","type":"typeof PerformanceObserver"},
    {"name":"PerformanceResourceTiming","type":"typeof PerformanceResourceTiming"},
    {"name":"PerformanceServerTiming","type":"typeof PerformanceServerTiming"},
    {"name":"PerformanceTiming","type":"typeof PerformanceTiming"},
    {"name":"PeriodicWave","type":"typeof PeriodicWave"},
    {"name":"Permissions","type":"typeof Permissions"},
    {"name":"PermissionStatus","type":"typeof PermissionStatus"},
    {"name":"Plugin","type":"typeof Plugin"},
    {"name":"PluginArray","type":"typeof PluginArray"},
    {"name":"PointerEvent","type":"typeof PointerEvent"},
    {"name":"Position","type":"typeof Position"},
    {"name":"PositionError","type":"typeof PositionError"},
    {"name":"print","type":"() => void"},
    {"name":"Process","type":"typeof Process"},
    {"name":"process","type":"Process"},
    {"name":"ProgressEvent","type":"typeof ProgressEvent"},
    {"name":"Promise","type":"typeof Promise"},
    {"name":"PromiseRejectionEvent","type":"typeof PromiseRejectionEvent"},
    {"name":"prompt","type":"(message?: any, value?: any) => string"},
    {"name":"Proxy","type":"typeof Proxy"},
    {"name":"PushManager","type":"typeof PushManager"},
    {"name":"PushSubscription","type":"typeof PushSubscription"},
    {"name":"PushSubscriptionJSON","type":"typeof PushSubscriptionJSON"},
    {
      "name":"queueMicrotask",
      "type":"<TArguments: $ReadOnlyArray<mixed>>(callback: (...args: TArguments) => mixed) => void"
    },
    {"name":"Range","type":"typeof Range"},
    {"name":"RangeError","type":"typeof RangeError"},
    {"name":"React$Component","type":"typeof React$Component"},
    {"name":"React$PureComponent","type":"typeof React$PureComponent"},
    {
      "name":"ReadableByteStreamController",
      "type":"typeof ReadableByteStreamController"
    },
    {"name":"ReadableStream","type":"typeof ReadableStream"},
    {"name":"ReadableStreamBYOBRequest","type":"typeof ReadableStreamBYOBRequest"},
    {"name":"ReadableStreamController","type":"typeof ReadableStreamController"},
    {"name":"ReadableStreamReader","type":"typeof ReadableStreamReader"},
    {"name":"readline$Interface","type":"typeof readline$Interface"},
    {"name":"ReferenceError","type":"typeof ReferenceError"},
    {
      "name":"Reflect",
      "type":"{apply(target: (...any) => any, thisArg?: any, argumentsList?: Array<any>): any, construct(target: (...any) => any, argumentsList?: Array<any>, newTarget?: any): any, defineProperty(o: any, p: any, attributes: any): boolean, deleteProperty(o: any, p: any): boolean, get(o: any, p: any, receiver?: any): any, getOwnPropertyDescriptor(o: any, p: any): any, getPrototypeOf: (o: $NotNullOrVoid) => any, has(o: any, p: any): boolean, isExtensible(o: any): boolean, ownKeys(o: any): Array<any>, preventExtensions(o: any): boolean, set(o: any, p: any, value: any, receiver?: any): boolean, setPrototypeOf: (target: any, prototype: {[any]: any} | null) => boolean, ...}"
    },
    {"name":"RegExp","type":"typeof RegExp"},
    {"name":"registration","type":"ServiceWorkerRegistration"},
    {"name":"Request","type":"typeof Request"},
    {
      "name":"requestAnimationFrame",
      "type":"(callback: (timestamp: number) => void) => AnimationFrameID"
    },
    {
      "name":"requestIdleCallback",
      "type":"(cb: (deadline: {didTimeout: boolean, timeRemaining: () => number, ...}) => void, opts?: {timeout: number, ...}) => IdleCallbackID"
    },
    {
      "name":"require",
      "type":"{(id: string): any, cache: any, main: {children: Array<any>, exports: any, filename: string, id: string, isPreloading: boolean, loaded: boolean, parent: any, path: string, paths: Array<string>, require(id: string): any, ...}, resolve: (id: string, options?: {paths?: Array<string>, ...}) => string, ...}"
    },
    {"name":"ResizeObserver","type":"typeof ResizeObserver"},
    {"name":"Response","type":"typeof Response"},
    {"name":"Screen","type":"typeof Screen"},
    {"name":"screen","type":"Screen"},
    {"name":"ScriptProcessorNode","type":"typeof ScriptProcessorNode"},
    {
      "name":"scroll",
      "type":"((x: number, y: number) => void) & ((options: ScrollToOptions) => void)"
    },
    {
      "name":"scrollBy",
      "type":"((x: number, y: number) => void) & ((options: ScrollToOptions) => void)"
    },
    {
      "name":"scrollTo",
      "type":"((x: number, y: number) => void) & ((options: ScrollToOptions) => void)"
    },
    {
      "name":"SecurityPolicyViolationEvent",
      "type":"typeof SecurityPolicyViolationEvent"
    },
    {"name":"Selection","type":"typeof Selection"},
    {"name":"self","type":"any"},
    {"name":"ServiceWorker","type":"typeof ServiceWorker"},
    {"name":"ServiceWorkerContainer","type":"typeof ServiceWorkerContainer"},
    {"name":"ServiceWorkerMessageEvent","type":"typeof ServiceWorkerMessageEvent"},
    {"name":"ServiceWorkerRegistration","type":"typeof ServiceWorkerRegistration"},
    {"name":"sessionStorage","type":"Storage"},
    {"name":"Set","type":"typeof Set"},
    {
      "name":"setImmediate",
      "type":"(callback: (...args: Array<any>) => mixed, ...args: Array<any>) => any"
    },
    {
      "name":"setInterval",
      "type":"<TArguments: Array<mixed>>(callback: (...args: TArguments) => mixed, ms?: number, ...args: TArguments) => IntervalID"
    },
    {
      "name":"setTimeout",
      "type":"<TArguments: Array<mixed>>(callback: (...args: TArguments) => mixed, ms?: number, ...args: TArguments) => TimeoutID"
    },
    {"name":"SharedArrayBuffer","type":"typeof SharedArrayBuffer"},
    {"name":"SharedWorker","type":"typeof SharedWorker"},
    {"name":"SharedWorkerGlobalScope","type":"typeof SharedWorkerGlobalScope"},
    {
      "name":"showDirectoryPicker",
      "type":"(options?: WindowDirectoryFilePickerOptions) => Promise<FileSystemDirectoryHandle>"
    },
    {
      "name":"showOpenFilePicker",
      "type":"(options?: WindowOpenFilePickerOptions) => Promise<Array<FileSystemFileHandle>>"
    },
    {
      "name":"showSaveFilePicker",
      "type":"(options?: WindowSaveFilePickerOptions) => Promise<FileSystemFileHandle>"
    },
    {"name":"skipWaiting","type":"() => Promise<void>"},
    {"name":"SourceBuffer","type":"typeof SourceBuffer"},
    {"name":"SourceBufferList","type":"typeof SourceBufferList"},
    {"name":"SpeechGrammar","type":"typeof SpeechGrammar"},
    {"name":"SpeechGrammarList","type":"typeof SpeechGrammarList"},
    {"name":"SpeechRecognition","type":"typeof SpeechRecognition"},
    {
      "name":"SpeechRecognitionAlternative",
      "type":"typeof SpeechRecognitionAlternative"
    },
    {
      "name":"SpeechRecognitionErrorEvent",
      "type":"typeof SpeechRecognitionErrorEvent"
    },
    {"name":"SpeechRecognitionEvent","type":"typeof SpeechRecognitionEvent"},
    {"name":"SpeechRecognitionResult","type":"typeof SpeechRecognitionResult"},
    {
      "name":"SpeechRecognitionResultList",
      "type":"typeof SpeechRecognitionResultList"
    },
    {"name":"SpeechSynthesis","type":"typeof SpeechSynthesis"},
    {"name":"speechSynthesis","type":"SpeechSynthesis"},
    {"name":"SpeechSynthesisErrorEvent","type":"typeof SpeechSynthesisErrorEvent"},
    {"name":"SpeechSynthesisEvent","type":"typeof SpeechSynthesisEvent"},
    {"name":"SpeechSynthesisUtterance","type":"typeof SpeechSynthesisUtterance"},
    {"name":"SpeechSynthesisVoice","type":"typeof SpeechSynthesisVoice"},
    {"name":"StereoPannerNode","type":"typeof StereoPannerNode"},
    {"name":"Storage","type":"typeof Storage"},
    {"name":"StorageEstimate","type":"typeof StorageEstimate"},
    {"name":"StorageEvent","type":"typeof StorageEvent"},
    {"name":"StorageManager","type":"typeof StorageManager"},
    {"name":"stream$Duplex","type":"typeof stream$Duplex"},
    {"name":"stream$PassThrough","type":"typeof stream$PassThrough"},
    {"name":"stream$Readable","type":"typeof stream$Readable"},
    {"name":"stream$Stream","type":"typeof stream$Stream"},
    {"name":"stream$Transform","type":"typeof stream$Transform"},
    {"name":"stream$Writable","type":"typeof stream$Writable"},
    {"name":"String","type":"typeof String"},
    {
      "name":"string_decoder$StringDecoder",
      "type":"typeof string_decoder$StringDecoder"
    },
    {"name":"StyleSheet","type":"typeof StyleSheet"},
    {"name":"StyleSheetList","type":"typeof StyleSheetList"},
    {"name":"SVGMatrix","type":"typeof SVGMatrix"},
    {"name":"Symbol","type":"typeof Symbol"},
    {"name":"SyntaxError","type":"typeof SyntaxError"},
    {"name":"SyntheticAnimationEvent","type":"typeof SyntheticAnimationEvent"},
    {"name":"SyntheticClipboardEvent","type":"typeof SyntheticClipboardEvent"},
    {"name":"SyntheticCompositionEvent","type":"typeof SyntheticCompositionEvent"},
    {"name":"SyntheticDragEvent","type":"typeof SyntheticDragEvent"},
    {"name":"SyntheticEvent","type":"typeof SyntheticEvent"},
    {"name":"SyntheticFocusEvent","type":"typeof SyntheticFocusEvent"},
    {"name":"SyntheticInputEvent","type":"typeof SyntheticInputEvent"},
    {"name":"SyntheticKeyboardEvent","type":"typeof SyntheticKeyboardEvent"},
    {"name":"SyntheticMouseEvent","type":"typeof SyntheticMouseEvent"},
    {"name":"SyntheticPointerEvent","type":"typeof SyntheticPointerEvent"},
    {"name":"SyntheticTouchEvent","type":"typeof SyntheticTouchEvent"},
    {"name":"SyntheticTransitionEvent","type":"typeof SyntheticTransitionEvent"},
    {"name":"SyntheticUIEvent","type":"typeof SyntheticUIEvent"},
    {"name":"SyntheticWheelEvent","type":"typeof SyntheticWheelEvent"},
    {"name":"TaskAttributionTiming","type":"typeof TaskAttributionTiming"},
    {"name":"Text","type":"typeof Text"},
    {"name":"TextDecoder","type":"typeof TextDecoder"},
    {"name":"TextDecoderStream","type":"typeof TextDecoderStream"},
    {"name":"TextEncoder","type":"typeof TextEncoder"},
    {"name":"TextMetrics","type":"typeof TextMetrics"},
    {"name":"TextRange","type":"typeof TextRange"},
    {"name":"TextTrack","type":"typeof TextTrack"},
    {"name":"TextTrackCue","type":"typeof TextTrackCue"},
    {"name":"TextTrackCueList","type":"typeof TextTrackCueList"},
    {"name":"TextTrackList","type":"typeof TextTrackList"},
    {"name":"TimeRanges","type":"typeof TimeRanges"},
    {"name":"tls$Server","type":"typeof tls$Server"},
    {"name":"tls$TLSSocket","type":"typeof tls$TLSSocket"},
    {"name":"top","type":"WindowProxy"},
    {"name":"Touch","type":"typeof Touch"},
    {"name":"TouchEvent","type":"typeof TouchEvent"},
    {"name":"TouchList","type":"typeof TouchList"},
    {"name":"TrackDefault","type":"typeof TrackDefault"},
    {"name":"TrackDefaultList","type":"typeof TrackDefaultList"},
    {"name":"TransformStream","type":"typeof TransformStream"},
    {"name":"TransitionEvent","type":"typeof TransitionEvent"},
    {"name":"TreeWalker","type":"typeof TreeWalker"},
    {"name":"TrustedHTML","type":"typeof TrustedHTML"},
    {"name":"TrustedScript","type":"typeof TrustedScript"},
    {"name":"TrustedScriptURL","type":"typeof TrustedScriptURL"},
    {"name":"TrustedTypePolicy","type":"typeof TrustedTypePolicy"},
    {"name":"TrustedTypePolicyFactory","type":"typeof TrustedTypePolicyFactory"},
    {"name":"tty$ReadStream","type":"typeof tty$ReadStream"},
    {"name":"tty$WriteStream","type":"typeof tty$WriteStream"},
    {"name":"TypeError","type":"typeof TypeError"},
    {"name":"UIEvent","type":"typeof UIEvent"},
    {"name":"Uint16Array","type":"typeof Uint16Array"},
    {"name":"Uint32Array","type":"typeof Uint32Array"},
    {"name":"Uint8Array","type":"typeof Uint8Array"},
    {"name":"Uint8ClampedArray","type":"typeof Uint8ClampedArray"},
    {"name":"undefined","type":"void"},
    {"name":"unescape","type":"(str: string) => string"},
    {"name":"URIError","type":"typeof URIError"},
    {"name":"URL","type":"typeof URL"},
    {"name":"URLSearchParams","type":"typeof URLSearchParams"},
    {"name":"USB","type":"typeof USB"},
    {"name":"USBAlternateInterface","type":"typeof USBAlternateInterface"},
    {"name":"USBConfiguration","type":"typeof USBConfiguration"},
    {"name":"USBConnectionEvent","type":"typeof USBConnectionEvent"},
    {"name":"USBDevice","type":"typeof USBDevice"},
    {"name":"USBEndpoint","type":"typeof USBEndpoint"},
    {"name":"USBInterface","type":"typeof USBInterface"},
    {"name":"USBInTransferResult","type":"typeof USBInTransferResult"},
    {
      "name":"USBIsochronousInTransferPacket",
      "type":"typeof USBIsochronousInTransferPacket"
    },
    {
      "name":"USBIsochronousInTransferResult",
      "type":"typeof USBIsochronousInTransferResult"
    },
    {
      "name":"USBIsochronousOutTransferPacket",
      "type":"typeof USBIsochronousOutTransferPacket"
    },
    {
      "name":"USBIsochronousOutTransferResult",
      "type":"typeof USBIsochronousOutTransferResult"
    },
    {"name":"USBOutTransferResult","type":"typeof USBOutTransferResult"},
    {"name":"ValidityState","type":"typeof ValidityState"},
    {"name":"VideoTrack","type":"typeof VideoTrack"},
    {"name":"VideoTrackList","type":"typeof VideoTrackList"},
    {"name":"vm$Context","type":"typeof vm$Context"},
    {"name":"vm$Script","type":"typeof vm$Script"},
    {"name":"VRDisplay","type":"typeof VRDisplay"},
    {"name":"VRDisplayEvent","type":"typeof VRDisplayEvent"},
    {"name":"VRFrameData","type":"typeof VRFrameData"},
    {"name":"WaveShaperNode","type":"typeof WaveShaperNode"},
    {"name":"WeakMap","type":"typeof WeakMap"},
    {"name":"WeakRef","type":"typeof WeakRef"},
    {"name":"WeakSet","type":"typeof WeakSet"},
    {
      "name":"WebAssembly",
      "type":"{CompileError: typeof WebAssembly$CompileError, Instance: typeof WebAssembly$Instance, LinkError: typeof WebAssembly$LinkError, Memory: typeof WebAssembly$Memory, Module: typeof WebAssembly$Module, RuntimeError: typeof WebAssembly$RuntimeError, Table: typeof WebAssembly$Table, compile(bufferSource: BufferSource): Promise<WebAssembly$Module>, compileStreaming(source: Response | Promise<Response>): Promise<WebAssembly$Module>, instantiate: ((bufferSource: BufferSource, importObject?: ImportObject) => Promise<ResultObject>) & ((moduleObject: WebAssembly$Module, importObject?: ImportObject) => Promise<WebAssembly$Instance>), instantiateStreaming(source: Response | Promise<Response>, importObject?: ImportObject): Promise<ResultObject>, validate(bufferSource: BufferSource): boolean, ...}"
    },
    {"name":"WebAssembly$CompileError","type":"typeof WebAssembly$CompileError"},
    {"name":"WebAssembly$Instance","type":"typeof WebAssembly$Instance"},
    {
      "name":"WebAssembly$instantiate",
      "type":"((bufferSource: BufferSource, importObject?: ImportObject) => Promise<ResultObject>) & ((moduleObject: WebAssembly$Module, importObject?: ImportObject) => Promise<WebAssembly$Instance>)"
    },
    {"name":"WebAssembly$LinkError","type":"typeof WebAssembly$LinkError"},
    {"name":"WebAssembly$Memory","type":"typeof WebAssembly$Memory"},
    {"name":"WebAssembly$Module","type":"typeof WebAssembly$Module"},
    {"name":"WebAssembly$RuntimeError","type":"typeof WebAssembly$RuntimeError"},
    {"name":"WebAssembly$Table","type":"typeof WebAssembly$Table"},
    {"name":"WebGLContextEvent","type":"typeof WebGLContextEvent"},
    {"name":"WebGLRenderingContext","type":"typeof WebGLRenderingContext"},
    {"name":"WebSocket","type":"typeof WebSocket"},
    {"name":"WheelEvent","type":"typeof WheelEvent"},
    {"name":"window","type":"any"},
    {"name":"WindowClient","type":"typeof WindowClient"},
    {"name":"Worker","type":"typeof Worker"},
    {"name":"WorkerGlobalScope","type":"typeof WorkerGlobalScope"},
    {"name":"WorkerLocation","type":"typeof WorkerLocation"},
    {"name":"WorkerNavigator","type":"typeof WorkerNavigator"},
    {"name":"WritableStream","type":"typeof WritableStream"},
    {
      "name":"WritableStreamDefaultWriter",
      "type":"typeof WritableStreamDefaultWriter"
    },
    {"name":"WriteableStream","type":"typeof WriteableStream"},
    {"name":"XDomainRequest","type":"typeof XDomainRequest"},
    {"name":"XMLHttpRequest","type":"typeof XMLHttpRequest"},
    {"name":"XMLHttpRequestEventTarget","type":"typeof XMLHttpRequestEventTarget"},
    {"name":"XMLSerializer","type":"typeof XMLSerializer"}
  ]
}

normalize-1.js:4:12
Flags: --pretty
{"result":[{"name":"b","type":"T"}]}

normalize-2.js:5:10
Flags: --pretty
{
  "result":[
    {"name":"a","type":"{b: T, ...}"},
    {"name":"async","type":""},
    {"name":"await","type":""},
    {"name":"c","type":"T"},
    {"name":"class","type":""},
    {"name":"delete","type":""},
    {"name":"foo","type":"<T>(a: {b: T, ...}) => any"},
    {"name":"function","type":""},
    {"name":"import","type":""},
    {"name":"new","type":""},
    {"name":"this","type":"this"},
    {"name":"typeof","type":""},
    {"name":"void","type":""},
    {"name":"yield","type":""}
  ]
}

unqualified-type-annotation.js:28:18
Flags: --lsp
{
  "label":"Tympanic",
  "kind":6,
  "detail":"type Tympanic = number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Tympanic"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"Tympanic",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Typaram",
  "kind":25,
  "detail":"Typaram",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Typaram"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type parameter",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"Typaram",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Types",
  "kind":9,
  "detail":"module \"./type-exports.js\"",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Types."
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type -> qualified type",
      {
        "token":null,
        "index":2,
        "session_requests":null,
        "typed_length":null,
        "completion":"Types",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Typesafe",
  "kind":8,
  "detail":"interface Typesafe",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Typesafe"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":3,
        "session_requests":null,
        "typed_length":null,
        "completion":"Typesafe",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Typeset",
  "kind":8,
  "detail":"interface Typeset",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Typeset"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":4,
        "session_requests":null,
        "typed_length":null,
        "completion":"Typeset",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Typewriter",
  "kind":7,
  "detail":"class Typewriter",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Typewriter"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: class or enum",
      {
        "token":null,
        "index":5,
        "session_requests":null,
        "typed_length":null,
        "completion":"Typewriter",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Typhoon",
  "kind":6,
  "detail":"type Typhoon = string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Typhoon"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":6,
        "session_requests":null,
        "typed_length":null,
        "completion":"Typhoon",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Typnotism",
  "kind":6,
  "detail":"type Typnotism = number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Typnotism"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":7,
        "session_requests":null,
        "typed_length":null,
        "completion":"Typnotism",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Typography",
  "kind":7,
  "detail":"class Typewriter",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Typography"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: class or enum",
      {
        "token":null,
        "index":8,
        "session_requests":null,
        "typed_length":null,
        "completion":"Typography",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Typologies",
  "kind":9,
  "detail":"module \"./type-exports.js\"",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Typologies."
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type -> qualified type",
      {
        "token":null,
        "index":9,
        "session_requests":null,
        "typed_length":null,
        "completion":"Typologies",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Tyrant",
  "kind":6,
  "detail":"type Tyrant = string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Tyrant"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":10,
        "session_requests":null,
        "typed_length":null,
        "completion":"Tyrant",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"component",
  "kind":14,
  "detail":"component",
  "documentation":{
    "kind":"markdown",
    "value":"[component type](https://flow.org/en/docs/react/component-types/)"
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"component($1)"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":11,
        "session_requests":null,
        "typed_length":null,
        "completion":"component",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"hook",
  "kind":14,
  "detail":"hook",
  "documentation":{
    "kind":"markdown",
    "value":"[hook type](https://flow.org/en/docs/react/hook-syntax/#hook-type-annotations)"
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"hook "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":12,
        "session_requests":null,
        "typed_length":null,
        "completion":"hook",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"renders",
  "kind":14,
  "detail":"renders",
  "documentation":{
    "kind":"markdown",
    "value":"`renders A` means that it will eventually render exactly one React element `A`. See https://flow.org/en/docs/react/render-types/ for more details."
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"renders "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":13,
        "session_requests":null,
        "typed_length":null,
        "completion":"renders",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"renders*",
  "kind":14,
  "detail":"renders*",
  "documentation":{
    "kind":"markdown",
    "value":"`renders* A` means that it will eventually render any amount of `A`. See https://flow.org/en/docs/react/render-types/ for more details."
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"renders* "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":14,
        "session_requests":null,
        "typed_length":null,
        "completion":"renders*",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"renders?",
  "kind":14,
  "detail":"renders?",
  "documentation":{
    "kind":"markdown",
    "value":"`renders? A` means that it will eventually render zero or one React element `A`. See https://flow.org/en/docs/react/render-types/ for more details."
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"renders? "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":15,
        "session_requests":null,
        "typed_length":null,
        "completion":"renders?",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"any",
  "kind":6,
  "detail":"any",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"any"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":16,
        "session_requests":null,
        "typed_length":null,
        "completion":"any",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"bigint",
  "kind":6,
  "detail":"bigint",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"bigint"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":17,
        "session_requests":null,
        "typed_length":null,
        "completion":"bigint",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"boolean",
  "kind":6,
  "detail":"boolean",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"boolean"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":18,
        "session_requests":null,
        "typed_length":null,
        "completion":"boolean",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"empty",
  "kind":6,
  "detail":"empty",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"empty"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":19,
        "session_requests":null,
        "typed_length":null,
        "completion":"empty",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"false",
  "kind":6,
  "detail":"false",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"false"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":20,
        "session_requests":null,
        "typed_length":null,
        "completion":"false",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"mixed",
  "kind":6,
  "detail":"mixed",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"mixed"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":21,
        "session_requests":null,
        "typed_length":null,
        "completion":"mixed",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"null",
  "kind":6,
  "detail":"null",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"null"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":22,
        "session_requests":null,
        "typed_length":null,
        "completion":"null",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"number",
  "kind":6,
  "detail":"number",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"number"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":23,
        "session_requests":null,
        "typed_length":null,
        "completion":"number",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"string",
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"string"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":24,
        "session_requests":null,
        "typed_length":null,
        "completion":"string",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"symbol",
  "kind":6,
  "detail":"symbol",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"symbol"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":25,
        "session_requests":null,
        "typed_length":null,
        "completion":"symbol",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"true",
  "kind":6,
  "detail":"true",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"true"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":26,
        "session_requests":null,
        "typed_length":null,
        "completion":"true",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"void",
  "kind":6,
  "detail":"void",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"void"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":27,
        "session_requests":null,
        "typed_length":null,
        "completion":"void",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"$Diff",
  "kind":3,
  "detail":"$Diff",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"$Diff"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":28,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Diff",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"$Exact",
  "kind":3,
  "detail":"$Exact",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"$Exact"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":29,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Exact",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"$Exports",
  "kind":3,
  "detail":"$Exports",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"$Exports"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":30,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Exports",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"$KeyMirror",
  "kind":3,
  "detail":"$KeyMirror",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"$KeyMirror"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":31,
        "session_requests":null,
        "typed_length":null,
        "completion":"$KeyMirror",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"$Keys",
  "kind":3,
  "detail":"$Keys",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"$Keys"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":32,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Keys",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"$NonMaybeType",
  "kind":3,
  "detail":"$NonMaybeType",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"$NonMaybeType"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":33,
        "session_requests":null,
        "typed_length":null,
        "completion":"$NonMaybeType",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"$ReadOnly",
  "kind":3,
  "detail":"$ReadOnly",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"$ReadOnly"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":34,
        "session_requests":null,
        "typed_length":null,
        "completion":"$ReadOnly",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"$Rest",
  "kind":3,
  "detail":"$Rest",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"$Rest"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":35,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Rest",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"$Values",
  "kind":3,
  "detail":"$Values",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"$Values"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":36,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Values",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Class",
  "kind":3,
  "detail":"Class",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Class"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":37,
        "session_requests":null,
        "typed_length":null,
        "completion":"Class",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Partial",
  "kind":3,
  "detail":"Partial",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Partial"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":38,
        "session_requests":null,
        "typed_length":null,
        "completion":"Partial",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"Required",
  "kind":3,
  "detail":"Required",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"Required"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":39,
        "session_requests":null,
        "typed_length":null,
        "completion":"Required",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"StringPrefix",
  "kind":3,
  "detail":"StringPrefix",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"StringPrefix"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":40,
        "session_requests":null,
        "typed_length":null,
        "completion":"StringPrefix",
        "ac_type":"Actype"
      }
    ]
  }
}
{
  "label":"StringSuffix",
  "kind":3,
  "detail":"StringSuffix",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},
    "newText":"StringSuffix"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":41,
        "session_requests":null,
        "typed_length":null,
        "completion":"StringSuffix",
        "ac_type":"Actype"
      }
    ]
  }
}

qualified-type-annotation.js:5:23
Flags: --pretty
{
  "result":[
    {"name":"Typesafety","type":"interface Typesafety"},
    {"name":"Typical","type":"type Typical = {|x: number, y: number|}"},
    {"name":"Tyrannosaurus","type":"class Tyrannosaurus"}
  ]
}

qualified-type-annotation-require.js:5:23
Flags: --pretty
{
  "result":[
    {"name":"Typesafety","type":"interface Typesafety"},
    {"name":"Typical","type":"type Typical = {|x: number, y: number|}"},
    {"name":"Tyrannosaurus","type":"class Tyrannosaurus"}
  ]
}

inherited-class-properties.js:16:13
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"\"bar\""},
    {"name":"baz","type":"\"baz\""},
    {"name":"foo","type":"\"oof\""}
  ]
}

function-added-properties.js:6:5
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"string"},
    {
      "name":"apply",
      "type":"<T, R, A: $ArrayLike<mixed> = $ReadOnly<[]>>(thisArg: T, args?: A) => R"
    },
    {"name":"arguments","type":"any"},
    {"name":"bind","type":"(thisArg: any, ...argArray: Array<any>) => any"},
    {
      "name":"call",
      "type":"<T, R, A: $ArrayLike<mixed> = $ReadOnly<[]>>(thisArg: T, ...args: A) => R"
    },
    {"name":"caller","type":"any | null"},
    {"name":"length","type":"number"},
    {"name":"name","type":"string"},
    {"name":"toString","type":"() => string"}
  ]
}

comments.js:3:8
Flags: --pretty
{"result":[]}

comments.js:6:8
Flags: --pretty
{"result":[]}

literal.js:3:16
Flags: --pretty
{"result":[]}

literal.js:6:16
Flags: --pretty
{"result":[]}

literal.js:9:16
Flags: --pretty
{"result":[]}

import_source.js:3:17
Flags: --pretty
{"result":[]}

import_specifiers_1.js:3:9
Flags: --pretty
{
  "result":[
    {"name":"Typesafety","type":"interface Typesafety"},
    {"name":"Typhoon","type":"declare var Typhoon: string"},
    {"name":"Typhoons","type":"declare var Typhoons: string"},
    {"name":"Typical","type":"type Typical = {|x: number, y: number|}"},
    {"name":"Tyrannosaurus","type":"class Tyrannosaurus"},
    {"name":"default","type":"declare var default: number"}
  ]
}

import_specifiers_2.js:3:17
Flags: --pretty
{
  "result":[
    {"name":"Typesafety","type":"interface Typesafety"},
    {"name":"Typhoons","type":"declare var Typhoons: string"},
    {"name":"Typical","type":"type Typical = {|x: number, y: number|}"},
    {"name":"Tyrannosaurus","type":"class Tyrannosaurus"},
    {"name":"default","type":"declare var default: number"}
  ]
}

object-spread-1.js:9:3
Flags: --pretty
{"result":[{"name":"bar","type":"B"},{"name":"foo","type":"A"}]}

object-spread-2.js:9:3
Flags: --pretty
{"result":[{"name":"bar","type":"C"},{"name":"foo","type":"A"}]}

object_keys_spread.js:22:15
Flags: --pretty
{"result":[{"name":"a","type":"number"},{"name":"c","type":"number"}]}

union-2.js:4:3
Flags: --pretty
{
  "result":[{"name":"bar","type":"\"D\" | \"B\""},{"name":"foo","type":"\"A\""}]
}

type-alias.js:7:3
Flags: --pretty
{"result":[{"name":"a","type":"number"},{"name":"b","type":"string"}]}

intersection.js:4:5
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"B"},
    {"name":"baz","type":"D"},
    {"name":"foo","type":"C & A"}
  ]
}

rank.js:7:11
Flags: --lsp
{
  "label":"toString",
  "labelDetails":{"detail":": number"},
  "kind":6,
  "detail":"number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":10},"end":{"line":6,"character":10}},
    "newText":"toString"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"toString",
        "ac_type":"Acmem"
      }
    ]
  }
}

rank_union.js:8:3
Flags: --lsp
{
  "label":"toString",
  "labelDetails":{"detail":": (() => string) | number"},
  "kind":13,
  "detail":"(() => string) | number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":2},"end":{"line":7,"character":2}},
    "newText":"toString"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"toString",
        "ac_type":"Acmem"
      }
    ]
  }
}

rank_intersection.js:8:3
Flags: --lsp
{
  "label":"toString",
  "labelDetails":{"detail":": (() => string) & number"},
  "kind":6,
  "detail":"(() => string) & number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":2},"end":{"line":7,"character":2}},
    "newText":"toString"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"toString",
        "ac_type":"Acmem"
      }
    ]
  }
}

suggest_optional_chaining_1.js:4:3
Flags: --lsp
{
  "label":"?.foo",
  "labelDetails":{"detail":": void | string"},
  "kind":13,
  "detail":"void | string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.foo"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "start optional chain",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"?.foo",
        "ac_type":"Acmem"
      }
    ]
  }
}

suggest_optional_chaining_2.js:4:3
Flags: --lsp
{
  "label":"?.bar",
  "labelDetails":{"detail":": void | number"},
  "kind":13,
  "detail":"void | number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.bar"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "start optional chain",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"?.bar",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"foo",
  "labelDetails":{"detail":": string"},
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},
    "newText":"foo"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"foo",
        "ac_type":"Acmem"
      }
    ]
  }
}

suggest_optional_chaining_3.js:4:3
Flags: --lsp
{
  "label":"?.foo",
  "labelDetails":{"detail":": void | number | string"},
  "kind":13,
  "detail":"void | number | string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},
    "newText":"?.foo"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "start optional chain",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"?.foo",
        "ac_type":"Acmem"
      }
    ]
  }
}

enums.js:11:3
Flags: --lsp
{
  "label":"Bar",
  "labelDetails":{"detail":": E"},
  "kind":6,
  "detail":"E",
  "documentation":{"kind":"markdown","value":"**@deprecated**"},
  "tags":[1],
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},
    "newText":"Bar"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"Bar",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"Foo",
  "labelDetails":{"detail":": E"},
  "kind":6,
  "detail":"E",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},
    "newText":"Foo"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"Foo",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"cast",
  "labelDetails":{"detail":": (input: ?string) => void | E"},
  "kind":3,
  "detail":"(input: ?string) => void | E",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},
    "newText":"cast"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":2,
        "session_requests":null,
        "typed_length":null,
        "completion":"cast",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"getName",
  "labelDetails":{"detail":": (input: E) => string"},
  "kind":3,
  "detail":"(input: E) => string",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},
    "newText":"getName"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":3,
        "session_requests":null,
        "typed_length":null,
        "completion":"getName",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"isValid",
  "labelDetails":{"detail":": (input: ?string | E) => boolean"},
  "kind":3,
  "detail":"(input: ?string | E) => boolean",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},
    "newText":"isValid"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":4,
        "session_requests":null,
        "typed_length":null,
        "completion":"isValid",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"members",
  "labelDetails":{"detail":": () => Iterator<E>"},
  "kind":3,
  "detail":"() => Iterator<E>",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},
    "newText":"members"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":5,
        "session_requests":null,
        "typed_length":null,
        "completion":"members",
        "ac_type":"Acmem"
      }
    ]
  }
}

enum-key.js:4:4
Flags: --lsp

enum-id.js:9:5
Flags: --pretty
{
  "result":[
    {"name":"Fab","type":"enum Fab"},
    {"name":"Foo","type":"enum Foo"},
    {"name":"function","type":""},
    {"name":"for","type":""},
    {"name":"finally","type":""}
  ]
}

class_declaration_name.js:5:8
Flags: --pretty
{"result":[]}

class_extends.js:5:20
Flags: --pretty
{"result":[{"name":"Foo","type":"class Foo"},{"name":"function","type":""}]}

pattern_object_key_middle.js:6:12
Flags: --pretty
{"result":[{"name":"foobar","type":"string"}]}

iterator.js:4:5
Flags: --lsp
{
  "label":"bar",
  "labelDetails":{"detail":": {\"@@asyncIterator\": AsyncIterator<number>, ...}"},
  "kind":6,
  "detail":"{\"@@asyncIterator\": AsyncIterator<number>, ...}",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":4},"end":{"line":3,"character":4}},
    "newText":"bar"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "local value identifier",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"bar",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"foo",
  "labelDetails":{"detail":": {\"@@iterator\": Iterator<number>, ...}"},
  "kind":6,
  "detail":"{\"@@iterator\": Iterator<number>, ...}",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":4},"end":{"line":3,"character":4}},
    "newText":"foo"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "local value identifier",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"foo",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"Symbol.iterator",
  "labelDetails":{"detail":": Iterator<number>"},
  "kind":6,
  "detail":"Iterator<number>",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":4},"end":{"line":3,"character":4}},
    "newText":"Symbol.iterator"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":2,
        "session_requests":null,
        "typed_length":null,
        "completion":"Symbol.iterator",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"takesMap1",
  "labelDetails":{"detail":": (map: Map<number, string>) => void"},
  "kind":3,
  "detail":"(map: Map<number, string>) => void",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":4},"end":{"line":3,"character":4}},
    "newText":"takesMap1"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "local value identifier",
      {
        "token":null,
        "index":3,
        "session_requests":null,
        "typed_length":null,
        "completion":"takesMap1",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"takesMap2",
  "labelDetails":{"detail":": (map: Map<number, string>) => void"},
  "kind":3,
  "detail":"(map: Map<number, string>) => void",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":4},"end":{"line":3,"character":4}},
    "newText":"takesMap2"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "local value identifier",
      {
        "token":null,
        "index":4,
        "session_requests":null,
        "typed_length":null,
        "completion":"takesMap2",
        "ac_type":"Acmem"
      }
    ]
  }
}

iterator.js:8:5
Flags: --lsp
{
  "label":"bar",
  "labelDetails":{"detail":": {\"@@asyncIterator\": AsyncIterator<number>, ...}"},
  "kind":6,
  "detail":"{\"@@asyncIterator\": AsyncIterator<number>, ...}",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},
    "newText":"bar"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "local value identifier",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"bar",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"foo",
  "labelDetails":{"detail":": {\"@@iterator\": Iterator<number>, ...}"},
  "kind":6,
  "detail":"{\"@@iterator\": Iterator<number>, ...}",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},
    "newText":"foo"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "local value identifier",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"foo",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"Symbol.asyncIterator",
  "labelDetails":{"detail":": AsyncIterator<number>"},
  "kind":6,
  "detail":"AsyncIterator<number>",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},
    "newText":"Symbol.asyncIterator"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":2,
        "session_requests":null,
        "typed_length":null,
        "completion":"Symbol.asyncIterator",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"takesMap1",
  "labelDetails":{"detail":": (map: Map<number, string>) => void"},
  "kind":3,
  "detail":"(map: Map<number, string>) => void",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},
    "newText":"takesMap1"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "local value identifier",
      {
        "token":null,
        "index":3,
        "session_requests":null,
        "typed_length":null,
        "completion":"takesMap1",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"takesMap2",
  "labelDetails":{"detail":": (map: Map<number, string>) => void"},
  "kind":3,
  "detail":"(map: Map<number, string>) => void",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},
    "newText":"takesMap2"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "local value identifier",
      {
        "token":null,
        "index":4,
        "session_requests":null,
        "typed_length":null,
        "completion":"takesMap2",
        "ac_type":"Acmem"
      }
    ]
  }
}

iterator.js:12:11
Flags: --lsp
{
  "label":"size",
  "labelDetails":{"detail":": number"},
  "kind":6,
  "detail":"number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":11,"character":8},"end":{"line":11,"character":10}},
    "newText":"size"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"size",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"[Symbol.iterator]",
  "labelDetails":{"detail":": () => Iterator<[number, string]>"},
  "kind":3,
  "detail":"() => Iterator<[number, string]>",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":11,"character":7},"end":{"line":11,"character":10}},
    "newText":"[Symbol.iterator]"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "dot-member switched to bracket-syntax member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"[Symbol.iterator]",
        "ac_type":"Acmem"
      }
    ]
  }
}

iterator.js:17:11
Flags: --lsp
{
  "label":"size",
  "labelDetails":{"detail":": number"},
  "kind":6,
  "detail":"number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "newText":"size",
    "insert":{"start":{"line":16,"character":8},"end":{"line":16,"character":10}},
    "replace":{"start":{"line":16,"character":8},"end":{"line":16,"character":12}}
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"size",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"[Symbol.iterator]",
  "labelDetails":{"detail":": () => Iterator<[number, string]>"},
  "kind":3,
  "detail":"() => Iterator<[number, string]>",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":16,"character":7},"end":{"line":16,"character":12}},
    "newText":"[Symbol.iterator]"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "dot-member switched to bracket-syntax member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"[Symbol.iterator]",
        "ac_type":"Acmem"
      }
    ]
  }
}

indexed-access-1.js:8:12
Flags: --lsp
{
  "label":"'bar'",
  "labelDetails":{"detail":"?: string | void"},
  "kind":13,
  "detail":"string | void",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"'bar'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"'bar'",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"'foo'",
  "labelDetails":{"detail":": number"},
  "kind":6,
  "detail":"number",
  "documentation":{"kind":"markdown","value":"**@deprecated**"},
  "tags":[1],
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"'foo'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"'foo'",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"K",
  "kind":12,
  "detail":"type K = \"foo\"",
  "documentation":{"kind":"markdown","value":"**@deprecated**"},
  "tags":[1],
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"K"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":2,
        "session_requests":null,
        "typed_length":null,
        "completion":"K",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"O",
  "kind":6,
  "detail":"type O = {bar?: string, foo: number, ...}",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"O"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":3,
        "session_requests":null,
        "typed_length":null,
        "completion":"O",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"T",
  "kind":6,
  "detail":"type T = O[any]",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"T"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":4,
        "session_requests":null,
        "typed_length":null,
        "completion":"T",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"component",
  "kind":14,
  "detail":"component",
  "documentation":{
    "kind":"markdown",
    "value":"[component type](https://flow.org/en/docs/react/component-types/)"
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"component($1)"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":5,
        "session_requests":null,
        "typed_length":null,
        "completion":"component",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"hook",
  "kind":14,
  "detail":"hook",
  "documentation":{
    "kind":"markdown",
    "value":"[hook type](https://flow.org/en/docs/react/hook-syntax/#hook-type-annotations)"
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"hook "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":6,
        "session_requests":null,
        "typed_length":null,
        "completion":"hook",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"renders",
  "kind":14,
  "detail":"renders",
  "documentation":{
    "kind":"markdown",
    "value":"`renders A` means that it will eventually render exactly one React element `A`. See https://flow.org/en/docs/react/render-types/ for more details."
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"renders "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":7,
        "session_requests":null,
        "typed_length":null,
        "completion":"renders",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"renders*",
  "kind":14,
  "detail":"renders*",
  "documentation":{
    "kind":"markdown",
    "value":"`renders* A` means that it will eventually render any amount of `A`. See https://flow.org/en/docs/react/render-types/ for more details."
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"renders* "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":8,
        "session_requests":null,
        "typed_length":null,
        "completion":"renders*",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"renders?",
  "kind":14,
  "detail":"renders?",
  "documentation":{
    "kind":"markdown",
    "value":"`renders? A` means that it will eventually render zero or one React element `A`. See https://flow.org/en/docs/react/render-types/ for more details."
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"renders? "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":9,
        "session_requests":null,
        "typed_length":null,
        "completion":"renders?",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"any",
  "kind":6,
  "detail":"any",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"any"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":10,
        "session_requests":null,
        "typed_length":null,
        "completion":"any",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"bigint",
  "kind":6,
  "detail":"bigint",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"bigint"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":11,
        "session_requests":null,
        "typed_length":null,
        "completion":"bigint",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"boolean",
  "kind":6,
  "detail":"boolean",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"boolean"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":12,
        "session_requests":null,
        "typed_length":null,
        "completion":"boolean",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"empty",
  "kind":6,
  "detail":"empty",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"empty"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":13,
        "session_requests":null,
        "typed_length":null,
        "completion":"empty",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"false",
  "kind":6,
  "detail":"false",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"false"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":14,
        "session_requests":null,
        "typed_length":null,
        "completion":"false",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"mixed",
  "kind":6,
  "detail":"mixed",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"mixed"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":15,
        "session_requests":null,
        "typed_length":null,
        "completion":"mixed",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"null",
  "kind":6,
  "detail":"null",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"null"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":16,
        "session_requests":null,
        "typed_length":null,
        "completion":"null",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"number",
  "kind":6,
  "detail":"number",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"number"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":17,
        "session_requests":null,
        "typed_length":null,
        "completion":"number",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"string",
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"string"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":18,
        "session_requests":null,
        "typed_length":null,
        "completion":"string",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"symbol",
  "kind":6,
  "detail":"symbol",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"symbol"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":19,
        "session_requests":null,
        "typed_length":null,
        "completion":"symbol",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"true",
  "kind":6,
  "detail":"true",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"true"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":20,
        "session_requests":null,
        "typed_length":null,
        "completion":"true",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"void",
  "kind":6,
  "detail":"void",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"void"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":21,
        "session_requests":null,
        "typed_length":null,
        "completion":"void",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Diff",
  "kind":3,
  "detail":"$Diff",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"$Diff"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":22,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Diff",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Exact",
  "kind":3,
  "detail":"$Exact",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"$Exact"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":23,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Exact",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Exports",
  "kind":3,
  "detail":"$Exports",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"$Exports"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":24,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Exports",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$KeyMirror",
  "kind":3,
  "detail":"$KeyMirror",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"$KeyMirror"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":25,
        "session_requests":null,
        "typed_length":null,
        "completion":"$KeyMirror",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Keys",
  "kind":3,
  "detail":"$Keys",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"$Keys"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":26,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Keys",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$NonMaybeType",
  "kind":3,
  "detail":"$NonMaybeType",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"$NonMaybeType"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":27,
        "session_requests":null,
        "typed_length":null,
        "completion":"$NonMaybeType",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$ReadOnly",
  "kind":3,
  "detail":"$ReadOnly",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"$ReadOnly"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":28,
        "session_requests":null,
        "typed_length":null,
        "completion":"$ReadOnly",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Rest",
  "kind":3,
  "detail":"$Rest",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"$Rest"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":29,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Rest",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Values",
  "kind":3,
  "detail":"$Values",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"$Values"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":30,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Values",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"Class",
  "kind":3,
  "detail":"Class",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"Class"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":31,
        "session_requests":null,
        "typed_length":null,
        "completion":"Class",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"Partial",
  "kind":3,
  "detail":"Partial",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"Partial"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":32,
        "session_requests":null,
        "typed_length":null,
        "completion":"Partial",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"Required",
  "kind":3,
  "detail":"Required",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"Required"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":33,
        "session_requests":null,
        "typed_length":null,
        "completion":"Required",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"StringPrefix",
  "kind":3,
  "detail":"StringPrefix",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"StringPrefix"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":34,
        "session_requests":null,
        "typed_length":null,
        "completion":"StringPrefix",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"StringSuffix",
  "kind":3,
  "detail":"StringSuffix",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},
    "newText":"StringSuffix"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":35,
        "session_requests":null,
        "typed_length":null,
        "completion":"StringSuffix",
        "ac_type":"Acmem"
      }
    ]
  }
}

indexed-access-2.js:4:13
Flags: --lsp
{
  "label":"\"bar\"",
  "labelDetails":{"detail":"?: string | void"},
  "kind":13,
  "detail":"string | void",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":11},"end":{"line":3,"character":11}},
    "newText":"\"bar\""
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"\"bar\"",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"\"foo\"",
  "labelDetails":{"detail":": number"},
  "kind":6,
  "detail":"number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":11},"end":{"line":3,"character":11}},
    "newText":"\"foo\""
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"\"foo\"",
        "ac_type":"Acmem"
      }
    ]
  }
}

indexed-access-3.js:4:25
Flags: --lsp
{
  "label":"'foo'",
  "labelDetails":{"detail":": string"},
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":23},"end":{"line":3,"character":25}},
    "newText":"'foo'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"'foo'",
        "ac_type":"Acmem"
      }
    ]
  }
}

indexed-access-4.js:4:25
Flags: --lsp
{
  "label":"\"foo\"",
  "labelDetails":{"detail":": string"},
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":23},"end":{"line":3,"character":25}},
    "newText":"\"foo\""
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"\"foo\"",
        "ac_type":"Acmem"
      }
    ]
  }
}

indexed-access-optional-1.js:7:14
Flags: --lsp
{
  "label":"'bar'",
  "labelDetails":{"detail":"?: void | string"},
  "kind":13,
  "detail":"void | string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"'bar'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"'bar'",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"'foo'",
  "labelDetails":{"detail":": number"},
  "kind":6,
  "detail":"number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"'foo'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"'foo'",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"K",
  "kind":12,
  "detail":"type K = \"foo\"",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"K"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":2,
        "session_requests":null,
        "typed_length":null,
        "completion":"K",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"O",
  "kind":13,
  "detail":"type O = ?{bar?: string, foo: number, ...}",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"O"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":3,
        "session_requests":null,
        "typed_length":null,
        "completion":"O",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"T",
  "kind":6,
  "detail":"type T = O?.[any]",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"T"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "unqualified type: local type identifier",
      {
        "token":null,
        "index":4,
        "session_requests":null,
        "typed_length":null,
        "completion":"T",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"component",
  "kind":14,
  "detail":"component",
  "documentation":{
    "kind":"markdown",
    "value":"[component type](https://flow.org/en/docs/react/component-types/)"
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"component($1)"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":5,
        "session_requests":null,
        "typed_length":null,
        "completion":"component",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"hook",
  "kind":14,
  "detail":"hook",
  "documentation":{
    "kind":"markdown",
    "value":"[hook type](https://flow.org/en/docs/react/hook-syntax/#hook-type-annotations)"
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"hook "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":6,
        "session_requests":null,
        "typed_length":null,
        "completion":"hook",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"renders",
  "kind":14,
  "detail":"renders",
  "documentation":{
    "kind":"markdown",
    "value":"`renders A` means that it will eventually render exactly one React element `A`. See https://flow.org/en/docs/react/render-types/ for more details."
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"renders "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":7,
        "session_requests":null,
        "typed_length":null,
        "completion":"renders",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"renders*",
  "kind":14,
  "detail":"renders*",
  "documentation":{
    "kind":"markdown",
    "value":"`renders* A` means that it will eventually render any amount of `A`. See https://flow.org/en/docs/react/render-types/ for more details."
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"renders* "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":8,
        "session_requests":null,
        "typed_length":null,
        "completion":"renders*",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"renders?",
  "kind":14,
  "detail":"renders?",
  "documentation":{
    "kind":"markdown",
    "value":"`renders? A` means that it will eventually render zero or one React element `A`. See https://flow.org/en/docs/react/render-types/ for more details."
  },
  "sortText":"00000000000000000100",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"renders? "
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type operators",
      {
        "token":null,
        "index":9,
        "session_requests":null,
        "typed_length":null,
        "completion":"renders?",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"any",
  "kind":6,
  "detail":"any",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"any"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":10,
        "session_requests":null,
        "typed_length":null,
        "completion":"any",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"bigint",
  "kind":6,
  "detail":"bigint",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"bigint"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":11,
        "session_requests":null,
        "typed_length":null,
        "completion":"bigint",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"boolean",
  "kind":6,
  "detail":"boolean",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"boolean"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":12,
        "session_requests":null,
        "typed_length":null,
        "completion":"boolean",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"empty",
  "kind":6,
  "detail":"empty",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"empty"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":13,
        "session_requests":null,
        "typed_length":null,
        "completion":"empty",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"false",
  "kind":6,
  "detail":"false",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"false"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":14,
        "session_requests":null,
        "typed_length":null,
        "completion":"false",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"mixed",
  "kind":6,
  "detail":"mixed",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"mixed"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":15,
        "session_requests":null,
        "typed_length":null,
        "completion":"mixed",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"null",
  "kind":6,
  "detail":"null",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"null"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":16,
        "session_requests":null,
        "typed_length":null,
        "completion":"null",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"number",
  "kind":6,
  "detail":"number",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"number"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":17,
        "session_requests":null,
        "typed_length":null,
        "completion":"number",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"string",
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"string"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":18,
        "session_requests":null,
        "typed_length":null,
        "completion":"string",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"symbol",
  "kind":6,
  "detail":"symbol",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"symbol"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":19,
        "session_requests":null,
        "typed_length":null,
        "completion":"symbol",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"true",
  "kind":6,
  "detail":"true",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"true"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":20,
        "session_requests":null,
        "typed_length":null,
        "completion":"true",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"void",
  "kind":6,
  "detail":"void",
  "sortText":"00000000000000000200",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"void"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":21,
        "session_requests":null,
        "typed_length":null,
        "completion":"void",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Diff",
  "kind":3,
  "detail":"$Diff",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"$Diff"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":22,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Diff",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Exact",
  "kind":3,
  "detail":"$Exact",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"$Exact"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":23,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Exact",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Exports",
  "kind":3,
  "detail":"$Exports",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"$Exports"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":24,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Exports",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$KeyMirror",
  "kind":3,
  "detail":"$KeyMirror",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"$KeyMirror"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":25,
        "session_requests":null,
        "typed_length":null,
        "completion":"$KeyMirror",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Keys",
  "kind":3,
  "detail":"$Keys",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"$Keys"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":26,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Keys",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$NonMaybeType",
  "kind":3,
  "detail":"$NonMaybeType",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"$NonMaybeType"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":27,
        "session_requests":null,
        "typed_length":null,
        "completion":"$NonMaybeType",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$ReadOnly",
  "kind":3,
  "detail":"$ReadOnly",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"$ReadOnly"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":28,
        "session_requests":null,
        "typed_length":null,
        "completion":"$ReadOnly",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Rest",
  "kind":3,
  "detail":"$Rest",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"$Rest"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":29,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Rest",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"$Values",
  "kind":3,
  "detail":"$Values",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"$Values"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":30,
        "session_requests":null,
        "typed_length":null,
        "completion":"$Values",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"Class",
  "kind":3,
  "detail":"Class",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"Class"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":31,
        "session_requests":null,
        "typed_length":null,
        "completion":"Class",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"Partial",
  "kind":3,
  "detail":"Partial",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"Partial"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":32,
        "session_requests":null,
        "typed_length":null,
        "completion":"Partial",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"Required",
  "kind":3,
  "detail":"Required",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"Required"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":33,
        "session_requests":null,
        "typed_length":null,
        "completion":"Required",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"StringPrefix",
  "kind":3,
  "detail":"StringPrefix",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"StringPrefix"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":34,
        "session_requests":null,
        "typed_length":null,
        "completion":"StringPrefix",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"StringSuffix",
  "kind":3,
  "detail":"StringSuffix",
  "sortText":"00000000000000000300",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},
    "newText":"StringSuffix"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "builtin type",
      {
        "token":null,
        "index":35,
        "session_requests":null,
        "typed_length":null,
        "completion":"StringSuffix",
        "ac_type":"Acmem"
      }
    ]
  }
}

indexed-access-optional-2.js:4:15
Flags: --lsp
{
  "label":"\"bar\"",
  "labelDetails":{"detail":"?: void | string"},
  "kind":13,
  "detail":"void | string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":13},"end":{"line":3,"character":13}},
    "newText":"\"bar\""
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"\"bar\"",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"\"foo\"",
  "labelDetails":{"detail":": number"},
  "kind":6,
  "detail":"number",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":13},"end":{"line":3,"character":13}},
    "newText":"\"foo\""
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "bracket syntax member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"\"foo\"",
        "ac_type":"Acmem"
      }
    ]
  }
}

typeof.js:4:18
Flags: --lsp
{
  "label":"abb",
  "labelDetails":{"detail":": {b: string, ...}"},
  "kind":6,
  "detail":"{b: string, ...}",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":16},"end":{"line":3,"character":17}},
    "newText":"abb"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "local value identifier",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"abb",
        "ac_type":"Acid"
      }
    ]
  }
}

typeof_2.js:4:19
Flags: --lsp
{
  "label":"b",
  "labelDetails":{"detail":": string"},
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":3,"character":18},"end":{"line":3,"character":18}},
    "newText":"b"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"b",
        "ac_type":"Acmem"
      }
    ]
  }
}

recursive.js:11:6
Flags: --pretty
{
  "result":[
    {"name":"ab","type":"number"},
    {"name":"ac","type":"React$ComponentType<Props>"}
  ]
}

class_members.js:16:18
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"number"},
    {"name":"break","type":""},
    {"name":"this.been","type":"() => void"},
    {"name":"this.bye","type":"string"}
  ]
}

class_members.js:23:10
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"number"},
    {"name":"break","type":""},
    {"name":"this.baz","type":"() => void"},
    {"name":"this.boo","type":"string"}
  ]
}

class_members.js:36:10
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"number"},
    {"name":"break","type":""},
    {"name":"this.baz","type":"() => void"},
    {"name":"this.boo","type":"string"}
  ]
}

method_signature.js:22:4
Flags: --lsp
{
  "label":"bar",
  "labelDetails":{"detail":"(s: string) { … }"},
  "kind":3,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},
    "newText":"bar(s: string) {\n  $0\n}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "class key",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"bar",
        "ac_type":"Ac_class_key"
      }
    ]
  }
}
{
  "label":"foo",
  "labelDetails":{"detail":"(): number { … }"},
  "kind":3,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},
    "newText":"foo(): number {\n  $0\n}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "class key",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"foo",
        "ac_type":"Ac_class_key"
      }
    ]
  }
}
{
  "label":"i",
  "labelDetails":{"detail":"(x: number): string { … }"},
  "kind":3,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},
    "newText":"i(x: number): string {\n  $0\n}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "class key",
      {
        "token":null,
        "index":2,
        "session_requests":null,
        "typed_length":null,
        "completion":"i",
        "ac_type":"Ac_class_key"
      }
    ]
  }
}
{
  "label":"qux",
  "labelDetails":{"detail":"(): void { … }"},
  "kind":3,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},
    "newText":"qux(): void {\n  $0\n}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "class key",
      {
        "token":null,
        "index":3,
        "session_requests":null,
        "typed_length":null,
        "completion":"qux",
        "ac_type":"Ac_class_key"
      }
    ]
  }
}

method_signature.js:31:4
Flags: --lsp
{
  "label":"foo",
  "labelDetails":{"detail":": () => string"},
  "kind":3,
  "detail":"() => string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":30,"character":3},"end":{"line":30,"character":3}},
    "newText":"foo"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "object key",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"foo",
        "ac_type":"Ackey"
      }
    ]
  }
}
{
  "label":"foo",
  "labelDetails":{"detail":"(): string { … }"},
  "kind":3,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":30,"character":3},"end":{"line":30,"character":3}},
    "newText":"foo(): string {\n  $0\n}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "class key",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"foo",
        "ac_type":"Ackey"
      }
    ]
  }
}

method_signature.js:40:4
Flags: --lsp

last_empty_line.js:5:0
Flags: --pretty
{
  "result":[
    {"name":"async","type":""},
    {"name":"await","type":""},
    {"name":"break","type":""},
    {"name":"case","type":""},
    {"name":"catch","type":""},
    {"name":"class","type":""},
    {"name":"component","type":""},
    {"name":"const","type":""},
    {"name":"continue","type":""},
    {"name":"debugger","type":""},
    {"name":"declare","type":""},
    {"name":"default","type":""},
    {"name":"delete","type":""},
    {"name":"do","type":""},
    {"name":"else","type":""},
    {"name":"enum","type":""},
    {"name":"export","type":""},
    {"name":"extends","type":""},
    {"name":"finally","type":""},
    {"name":"foo","type":"string"},
    {"name":"for","type":""},
    {"name":"function","type":""},
    {"name":"hook","type":""},
    {"name":"if","type":""},
    {"name":"implements","type":""},
    {"name":"import","type":""},
    {"name":"interface","type":""},
    {"name":"let","type":""},
    {"name":"new","type":""},
    {"name":"opaque","type":""},
    {"name":"return","type":""},
    {"name":"static","type":""},
    {"name":"switch","type":""},
    {"name":"throw","type":""},
    {"name":"try","type":""},
    {"name":"type","type":""},
    {"name":"typeof","type":""},
    {"name":"var","type":""},
    {"name":"void","type":""},
    {"name":"while","type":""},
    {"name":"yield","type":""}
  ]
}

string_literal.js:5:16
Flags: --lsp
{
  "label":"'foo'",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"'foo'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"'foo'",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"async",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"async"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"async",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"await",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"await"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":2,
        "session_requests":null,
        "typed_length":null,
        "completion":"await",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"class",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"class"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":3,
        "session_requests":null,
        "typed_length":null,
        "completion":"class",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"delete",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"delete"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":4,
        "session_requests":null,
        "typed_length":null,
        "completion":"delete",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"function",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"function"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":5,
        "session_requests":null,
        "typed_length":null,
        "completion":"function",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"import",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"import"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":6,
        "session_requests":null,
        "typed_length":null,
        "completion":"import",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"new",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"new"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":7,
        "session_requests":null,
        "typed_length":null,
        "completion":"new",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"typeof",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"typeof"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":8,
        "session_requests":null,
        "typed_length":null,
        "completion":"typeof",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"void",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"void"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":9,
        "session_requests":null,
        "typed_length":null,
        "completion":"void",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"yield",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"yield"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":10,
        "session_requests":null,
        "typed_length":null,
        "completion":"yield",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"a",
  "labelDetails":{"detail":": Foo"},
  "kind":6,
  "detail":"Foo",
  "sortText":"00000000000000000001",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},
    "newText":"a"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "local value identifier",
      {
        "token":null,
        "index":11,
        "session_requests":null,
        "typed_length":null,
        "completion":"a",
        "ac_type":"Acid"
      }
    ]
  }
}

string_literal.js:7:17
Flags: --lsp
{
  "label":"'foo'",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":6,"character":15},"end":{"line":6,"character":17}},
    "newText":"'foo'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"'foo'",
        "ac_type":"Acliteral"
      }
    ]
  }
}

string_literal.js:9:17
Flags: --lsp
{
  "label":"'foo'",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":8,"character":15},"end":{"line":8,"character":15}},
    "newText":"'foo'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"'foo'",
        "ac_type":"Acliteral"
      }
    ]
  }
}

string_literal.js:11:17
Flags: --lsp
{
  "label":"function",
  "kind":14,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":10,"character":15},"end":{"line":10,"character":16}},
    "newText":"function"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "keyword",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"function",
        "ac_type":"Acid"
      }
    ]
  }
}
{
  "label":"'foo'",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":10,"character":15},"end":{"line":10,"character":16}},
    "newText":"'foo'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"'foo'",
        "ac_type":"Acid"
      }
    ]
  }
}

string_literal.js:13:18
Flags: --lsp
{
  "label":"'foo'",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":12,"character":15},"end":{"line":12,"character":18}},
    "newText":"'foo'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"'foo'",
        "ac_type":"Acliteral"
      }
    ]
  }
}

string_literal.js:15:18
Flags: --lsp
{
  "label":"'foo'",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},
    "newText":"'foo'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"'foo'",
        "ac_type":"Acliteral"
      }
    ]
  }
}

string_literal.js:17:17
Flags: --lsp
{
  "label":"\"foo\"",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":16,"character":15},"end":{"line":16,"character":17}},
    "newText":"\"foo\""
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"\"foo\"",
        "ac_type":"Acliteral"
      }
    ]
  }
}

string_literal.js:19:17
Flags: --lsp
{
  "label":"\"foo\"",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":18,"character":15},"end":{"line":18,"character":15}},
    "newText":"\"foo\""
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"\"foo\"",
        "ac_type":"Acliteral"
      }
    ]
  }
}

string_literal.js:21:18
Flags: --lsp
{
  "label":"\"foo\"",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":20,"character":15},"end":{"line":20,"character":18}},
    "newText":"\"foo\""
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"\"foo\"",
        "ac_type":"Acliteral"
      }
    ]
  }
}

string_literal.js:23:18
Flags: --lsp
{
  "label":"\"foo\"",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":22,"character":15},"end":{"line":22,"character":15}},
    "newText":"\"foo\""
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"\"foo\"",
        "ac_type":"Acliteral"
      }
    ]
  }
}

string_literal.js:25:18
Flags: --lsp
{
  "label":"'foo'",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":24,"character":15},"end":{"line":24,"character":20}},
    "newText":"'foo'"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"'foo'",
        "ac_type":"Acliteral"
      }
    ]
  }
}

string_literal.js:27:18
Flags: --lsp
{
  "label":"\"foo\"",
  "labelDetails":{"detail":": \"foo\""},
  "kind":12,
  "detail":"\"foo\"",
  "preselect":true,
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":26,"character":15},"end":{"line":26,"character":20}},
    "newText":"\"foo\""
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "literal from upper bound",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"\"foo\"",
        "ac_type":"Acliteral"
      }
    ]
  }
}

type_binding_id.js:5:7
Flags: --pretty
{"result":[]}

type_binding_id.js:8:14
Flags: --pretty
{"result":[]}

type_binding_id.js:11:15
Flags: --pretty
{"result":[]}

type_string_literal.js:3:13
Flags: --pretty
{"result":[]}

fixme.js:5:4
Flags: --lsp
{
  "label":"$FlowFixMe[incompatible-call]",
  "kind":1,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},
    "newText":"\\$FlowFixMe[incompatible-call] ${1:reason for suppression}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "fixme comment",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"$FlowFixMe[incompatible-call]",
        "ac_type":"Ac_comment"
      }
    ]
  }
}

fixme.js:8:5
Flags: --lsp
{
  "label":"$FlowFixMe[incompatible-call]",
  "kind":1,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":7,"character":3},"end":{"line":7,"character":4}},
    "newText":"\\$FlowFixMe[incompatible-call] ${1:reason for suppression}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "fixme comment",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"$FlowFixMe[incompatible-call]",
        "ac_type":"Ac_comment"
      }
    ]
  }
}
{
  "label":"$FlowFixMe[unsafe-addition]",
  "kind":1,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":7,"character":3},"end":{"line":7,"character":4}},
    "newText":"\\$FlowFixMe[unsafe-addition] ${1:reason for suppression}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "fixme comment",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"$FlowFixMe[unsafe-addition]",
        "ac_type":"Ac_comment"
      }
    ]
  }
}

fixme.js:14:8
Flags: --lsp
{
  "label":"$FlowFixMe[unused-promise]",
  "kind":1,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":13,"character":7},"end":{"line":13,"character":7}},
    "newText":"\\$FlowFixMe[unused-promise] ${1:reason for suppression}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "fixme comment",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"$FlowFixMe[unused-promise]",
        "ac_type":"Ac_comment"
      }
    ]
  }
}

fixme.js:18:12
Flags: --pretty
{"result":[]}

fixme.js:21:10
Flags: --lsp
{
  "label":"$FlowFixMe[incompatible-call]",
  "kind":1,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":20,"character":3},"end":{"line":20,"character":9}},
    "newText":"\\$FlowFixMe[incompatible-call] ${1:reason for suppression}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "fixme comment",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"$FlowFixMe[incompatible-call]",
        "ac_type":"Ac_comment"
      }
    ]
  }
}

super_member.js:9:11
Flags: --pretty
{"result":[{"name":"foo","type":"() => void"}]}

switch.js:6:8
Flags: --pretty
{
  "result":[
    {"name":"'bar'","type":"\"bar\""},
    {"name":"'baz'","type":"\"baz\""},
    {"name":"'foo'","type":"\"foo\""},
    {"name":"x","type":"\"foo\" | \"bar\" | \"baz\""}
  ]
}

keywords_after_export_default.js:3:17
Flags: --pretty
{"result":[{"name":"class","type":""},{"name":"component","type":""}]}

keywords_c.js:3:4
Flags: --pretty
{
  "result":[
    {"name":"const","type":""},
    {"name":"class","type":""},
    {"name":"case","type":""},
    {"name":"catch","type":""},
    {"name":"continue","type":""},
    {"name":"component","type":""}
  ]
}

keywords_f.js:3:4
Flags: --pretty
{
  "result":[
    {"name":"function","type":""},
    {"name":"for","type":""},
    {"name":"finally","type":""}
  ]
}

