array.js:8
  8: var arrayTest4: Iterable<number> = ["hi"];
                                         ^^^^ string. This type is incompatible with
  8: var arrayTest4: Iterable<number> = ["hi"];
                              ^^^^^^ number

array.js:10
 10: var arrayTest5: Iterable<string> = ["hi", 1];
                                               ^ number. This type is incompatible with
 10: var arrayTest5: Iterable<string> = ["hi", 1];
                              ^^^^^^ string

caching_bug.js:21
 21: function miss_the_cache(x: Array<string | number>): Iterable<string> { return x; }
                                               ^^^^^^ number. This type is incompatible with
 21: function miss_the_cache(x: Array<string | number>): Iterable<string> { return x; }
                                                                  ^^^^^^ string

iterator_result.js:23
 23:         return { done, value: "still going..." }; // Error string ~> void
                      ^^^^ boolean. Expected boolean literal `false`, got `true` instead
489:   | { done: false, value: Yield };
                 ^^^^^ boolean literal `false`. See lib: <BUILTINS>/core.js:489

iterator_result.js:25
 25:         return { done }; // Error void ~> string
                      ^^^^ boolean. Expected boolean literal `true`, got `false` instead
488:   | { done: true, value?: Return }
                 ^^^^ boolean literal `true`. See lib: <BUILTINS>/core.js:488

map.js:13
 13: function mapTest4(map: Map<number, string>): Iterable<string> {
                                                           ^^^^^^ string. This type is incompatible with
536:     @@iterator(): Iterator<[K, V]>;
                                ^^^^^^ tuple type. See lib: <BUILTINS>/core.js:536

set.js:13
 13: function setTest4(set: Set<string>): Iterable<number> {
                                ^^^^^^ string. This type is incompatible with
 13: function setTest4(set: Set<string>): Iterable<number> {
                                                   ^^^^^^ number

string.js:5
  5: var stringTest3: Iterable<number> = "hi"; // Error - string is a Iterable<string>
                               ^^^^^^ number. This type is incompatible with
241:     @@iterator(): Iterator<string>;
                                ^^^^^^ string. See lib: <BUILTINS>/core.js:241


Found 8 errors
