Error: bound.js:9
  9:     var y : string = x;  // not ok
                          ^ null. This type is incompatible with
  9:     var y : string = x;  // not ok
                 ^^^^^^ string

Error: bound.js:9
  9:     var y : string = x;  // not ok
                          ^ undefined. This type is incompatible with
  9:     var y : string = x;  // not ok
                 ^^^^^^ string

Error: bound.js:47
 47:     var y : string = x;  // not ok
                          ^ null. This type is incompatible with
 47:     var y : string = x;  // not ok
                 ^^^^^^ string

Error: bound.js:47
 47:     var y : string = x;  // not ok
                          ^ undefined. This type is incompatible with
 47:     var y : string = x;  // not ok
                 ^^^^^^ string

Error: bound.js:53
 53:       var y : string = x;  // not ok
                            ^ null. This type is incompatible with
 53:       var y : string = x;  // not ok
                   ^^^^^^ string

Error: bound.js:53
 53:       var y : string = x;  // not ok
                            ^ undefined. This type is incompatible with
 53:       var y : string = x;  // not ok
                   ^^^^^^ string

Error: heap.js:5
  5:     var y : string = x.p;  // not ok
                          ^^^ null. This type is incompatible with
  5:     var y : string = x.p;  // not ok
                 ^^^^^^ string

Error: heap.js:5
  5:     var y : string = x.p;  // not ok
                          ^^^ undefined. This type is incompatible with
  5:     var y : string = x.p;  // not ok
                 ^^^^^^ string

Error: heap.js:40
 40:       var y : string = x.p;  // not ok
                            ^^^ null. This type is incompatible with
 40:       var y : string = x.p;  // not ok
                   ^^^^^^ string

Error: heap.js:40
 40:       var y : string = x.p;  // not ok
                            ^^^ undefined. This type is incompatible with
 40:       var y : string = x.p;  // not ok
                   ^^^^^^ string

Error: heap.js:48
 48:       var y : string = x.p;  // not ok
                            ^^^ null. This type is incompatible with
 48:       var y : string = x.p;  // not ok
                   ^^^^^^ string

Error: heap.js:55
 55:     var y : string = x.p;  // not ok
                          ^^^ null. This type is incompatible with
 55:     var y : string = x.p;  // not ok
                 ^^^^^^ string

Error: heap.js:55
 55:     var y : string = x.p;  // not ok
                          ^^^ undefined. This type is incompatible with
 55:     var y : string = x.p;  // not ok
                 ^^^^^^ string

Error: heap.js:62
 62:       var y : string = x.p;  // not ok
                            ^^^ null. This type is incompatible with
 62:       var y : string = x.p;  // not ok
                   ^^^^^^ string

Error: heap.js:62
 62:       var y : string = x.p;  // not ok
                            ^^^ undefined. This type is incompatible with
 62:       var y : string = x.p;  // not ok
                   ^^^^^^ string

Error: heap.js:105
105:       x.y = 123; // error
                 ^^^ number. This type is incompatible with
105:       x.y = 123; // error
           ^^^ string

Error: heap.js:107
107:     (x.y: string); // error, this got widened to a number
          ^^^ number. This type is incompatible with
107:     (x.y: string); // error, this got widened to a number
               ^^^^^^ string

Error: heap.js:125
125:     (x.y : string); // error, could also be boolean
          ^^^ boolean. This type is incompatible with
125:     (x.y : string); // error, could also be boolean
                ^^^^^^ string

Error: heap.js:135
135:     (x.y : boolean); // error, string
          ^^^ string. This type is incompatible with
135:     (x.y : boolean); // error, string
                ^^^^^^^ boolean

Error: heap.js:146
146:     (x.y : string); // error
          ^^^ null. This type is incompatible with
146:     (x.y : string); // error
                ^^^^^^ string

Error: heap.js:159
159:     (x.y : string); // error
          ^^^ boolean. This type is incompatible with
159:     (x.y : string); // error
                ^^^^^^ string

Error: heap.js:172
172:     (x.y : string); // error
          ^^^ boolean. This type is incompatible with
172:     (x.y : string); // error
                ^^^^^^ string

Error: heap.js:172
172:     (x.y : string); // error
          ^^^ number. This type is incompatible with
172:     (x.y : string); // error
                ^^^^^^ string

Error: heap.js:188
188:     (x: 'b'); // error (but only once, string !~> 'b'; 'a' is irrelevant)
          ^ string. Expected string literal `b`
188:     (x: 'b'); // error (but only once, string !~> 'b'; 'a' is irrelevant)
             ^^^ string literal `b`

Error: heap.js:192
192:     if (typeof x.bar === 'string') {} // error, so `x.bar` refinement is empty
                      ^^^ property `bar`. Property not found in
192:     if (typeof x.bar === 'string') {} // error, so `x.bar` refinement is empty
                    ^ mixed

Error: heap.js:193
193:     (x: string & number);
          ^ mixed. This type is incompatible with
193:     (x: string & number);
             ^^^^^^ string

Error: heap.js:193
193:     (x: string & number);
          ^ mixed. This type is incompatible with
193:     (x: string & number);
                      ^^^^^^ number

Error: lex.js:6
  6:   (x : string); // error: number ~> string
        ^ number. This type is incompatible with
  6:   (x : string); // error: number ~> string
            ^^^^^^ string

Error: lex.js:15
 15:   (x : string); // error: number ~> string
        ^ number. This type is incompatible with
 15:   (x : string); // error: number ~> string
            ^^^^^^ string

Error: lex.js:25
 25:   (x : string); // error: number ~> string
        ^ number. This type is incompatible with
 25:   (x : string); // error: number ~> string
            ^^^^^^ string

Error: lex.js:35
 35:   (x : string); // error: number ~> string
        ^ number. This type is incompatible with
 35:   (x : string); // error: number ~> string
            ^^^^^^ string

Error: local.js:5
  5:     var y : string = x;  // not ok
                          ^ null. This type is incompatible with
  5:     var y : string = x;  // not ok
                 ^^^^^^ string

Error: local.js:5
  5:     var y : string = x;  // not ok
                          ^ undefined. This type is incompatible with
  5:     var y : string = x;  // not ok
                 ^^^^^^ string

Error: local.js:47
 47:     var y : string = x;  // not ok
                          ^ null. This type is incompatible with
 47:     var y : string = x;  // not ok
                 ^^^^^^ string

Error: local.js:47
 47:     var y : string = x;  // not ok
                          ^ undefined. This type is incompatible with
 47:     var y : string = x;  // not ok
                 ^^^^^^ string

Error: local.js:54
 54:       var y : string = x;  // not ok
                            ^ null. This type is incompatible with
 54:       var y : string = x;  // not ok
                   ^^^^^^ string

Error: local.js:54
 54:       var y : string = x;  // not ok
                            ^ undefined. This type is incompatible with
 54:       var y : string = x;  // not ok
                   ^^^^^^ string

Error: null_tests.js:150
150:       return super.p;  // not ok
                  ^^^^^^^ null. This type is incompatible with the expected return type of
147:   ensure103(): string {
                    ^^^^^^ string

Error: null_tests.js:150
150:       return super.p;  // not ok
                  ^^^^^^^ undefined. This type is incompatible with the expected return type of
147:   ensure103(): string {
                    ^^^^^^ string

Error: switch.js:49
 49:   return foo; // error, possibly uninitialized
              ^^^ possibly uninitialized variable. This type is incompatible with the expected return type of
 27: function exhaustion2(x, y): number {
                                 ^^^^^^ number


Found 40 errors
