Error: base_class.js:9
  9:   annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                                  ^^^^^^ string. This type is incompatible with
  9:   annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                         ^^^^^^ number

Error: base_class.js:16
 16:   static annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                                         ^^^^^^ string. This type is incompatible with
 16:   static annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                                ^^^^^^ number

Error: base_class.js:33
 33: (o.annotatedField: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^ number. This type is incompatible with
 33: (o.annotatedField: string); // Error: number ~> string
                        ^^^^^^ string

Error: base_class.js:35
 35: (Base.annotatedField: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 35: (Base.annotatedField: string); // Error: number ~> string
                           ^^^^^^ string

Error: base_class.js:41
 41: (o.initializedField: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 41: (o.initializedField: string); // Error: number ~> string
                          ^^^^^^ string

Error: base_class.js:43
 43: (Base.initializedField: number); // Error: string ~> number
      ^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
 43: (Base.initializedField: number); // Error: string ~> number
                             ^^^^^^ number

Error: base_class.js:49
 49: (o.initializedFieldWithThis: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 49: (o.initializedFieldWithThis: string); // Error: number ~> string
                                  ^^^^^^ string

Error: base_class.js:51
 51: (Base.initializedFieldWithThis: number); // Error: string ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
 51: (Base.initializedFieldWithThis: number); // Error: string ~> number
                                     ^^^^^^ number

Error: base_class.js:59
 59: (o.annotatedInitializedFieldValid: number); // Error: ?number ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null or undefined. This type is incompatible with
 59: (o.annotatedInitializedFieldValid: number); // Error: ?number ~> number
                                        ^^^^^^ number

Error: base_class.js:61
 61: (Base.annotatedInitializedFieldValid: number); // Error: ?number ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null or undefined. This type is incompatible with
 61: (Base.annotatedInitializedFieldValid: number); // Error: ?number ~> number
                                           ^^^^^^ number

Error: base_class.js:70
 70: (o.annotatedInitializedFieldInvalid: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 70: (o.annotatedInitializedFieldInvalid: string); // Error: number ~> string
                                          ^^^^^^ string

Error: base_class.js:72
 72: (Base.annotatedInitializedFieldInvalid: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 72: (Base.annotatedInitializedFieldInvalid: string); // Error: number ~> string
                                             ^^^^^^ string

Error: derived_class.js:9
  9:   base_annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                                       ^^^^^^ string. This type is incompatible with
  9:   base_annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                              ^^^^^^ number

Error: derived_class.js:16
 16:   static base_annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                                              ^^^^^^ string. This type is incompatible with
 16:   static base_annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                                     ^^^^^^ number

Error: derived_class.js:28
 28:   child_annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                                        ^^^^^^ string. This type is incompatible with
 28:   child_annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                               ^^^^^^ number

Error: derived_class.js:35
 35:   static child_annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                                               ^^^^^^ string. This type is incompatible with
 35:   static child_annotatedInitializedFieldInvalid: number = 'asdf'; // Error: string ~> number
                                                      ^^^^^^ number

Error: derived_class.js:61
 61: (o.base_annotatedField: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 61: (o.base_annotatedField: string); // Error: number ~> string
                             ^^^^^^ string

Error: derived_class.js:63
 63: (Child.base_annotatedField: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 63: (Child.base_annotatedField: string); // Error: number ~> string
                                 ^^^^^^ string

Error: derived_class.js:66
 66: (o.child_annotatedField: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 66: (o.child_annotatedField: string); // Error: number ~> string
                              ^^^^^^ string

Error: derived_class.js:68
 68: (Child.child_annotatedField: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 68: (Child.child_annotatedField: string); // Error: number ~> string
                                  ^^^^^^ string

Error: derived_class.js:74
 74: (o.base_initializedField: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 74: (o.base_initializedField: string); // Error: number ~> string
                               ^^^^^^ string

Error: derived_class.js:76
 76: (Child.base_initializedField: number); // Error: string ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
 76: (Child.base_initializedField: number); // Error: string ~> number
                                   ^^^^^^ number

Error: derived_class.js:79
 79: (o.child_initializedField: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 79: (o.child_initializedField: string); // Error: number ~> string
                                ^^^^^^ string

Error: derived_class.js:81
 81: (Child.child_initializedField: number); // Error: string ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
 81: (Child.child_initializedField: number); // Error: string ~> number
                                    ^^^^^^ number

Error: derived_class.js:87
 87: (o.base_initializedFieldWithThis: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 87: (o.base_initializedFieldWithThis: string); // Error: number ~> string
                                       ^^^^^^ string

Error: derived_class.js:89
 89: (Child.base_initializedFieldWithThis: number); // Error: string ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
 89: (Child.base_initializedFieldWithThis: number); // Error: string ~> number
                                           ^^^^^^ number

Error: derived_class.js:92
 92: (o.child_initializedFieldWithThis: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
 92: (o.child_initializedFieldWithThis: string); // Error: number ~> string
                                        ^^^^^^ string

Error: derived_class.js:94
 94: (Child.child_initializedFieldWithThis: number); // Error: string ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
 94: (Child.child_initializedFieldWithThis: number); // Error: string ~> number
                                            ^^^^^^ number

Error: derived_class.js:102
102: (o.base_annotatedInitializedFieldValid: number); // Error: ?number ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null or undefined. This type is incompatible with
102: (o.base_annotatedInitializedFieldValid: number); // Error: ?number ~> number
                                             ^^^^^^ number

Error: derived_class.js:104
104: (Child.base_annotatedInitializedFieldValid: number); // Error: ?number ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null or undefined. This type is incompatible with
104: (Child.base_annotatedInitializedFieldValid: number); // Error: ?number ~> number
                                                 ^^^^^^ number

Error: derived_class.js:107
107: (o.child_annotatedInitializedFieldValid: number); // Error: ?number ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null or undefined. This type is incompatible with
107: (o.child_annotatedInitializedFieldValid: number); // Error: ?number ~> number
                                              ^^^^^^ number

Error: derived_class.js:109
109: (Child.child_annotatedInitializedFieldValid: number); // Error: ?number ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null or undefined. This type is incompatible with
109: (Child.child_annotatedInitializedFieldValid: number); // Error: ?number ~> number
                                                  ^^^^^^ number

Error: derived_class.js:118
118: (o.base_annotatedInitializedFieldInvalid: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
118: (o.base_annotatedInitializedFieldInvalid: string); // Error: number ~> string
                                               ^^^^^^ string

Error: derived_class.js:120
120: (Child.base_annotatedInitializedFieldInvalid: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
120: (Child.base_annotatedInitializedFieldInvalid: string); // Error: number ~> string
                                                   ^^^^^^ string

Error: derived_class.js:123
123: (o.child_annotatedInitializedFieldInvalid: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
123: (o.child_annotatedInitializedFieldInvalid: string); // Error: number ~> string
                                                ^^^^^^ string

Error: derived_class.js:125
125: (Child.child_annotatedInitializedFieldInvalid: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
125: (Child.child_annotatedInitializedFieldInvalid: string); // Error: number ~> string
                                                    ^^^^^^ string

Error: derived_class.js:132
132: (o.inherited_initializer: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
132: (o.inherited_initializer: string); // Error: number ~> string
                               ^^^^^^ string

Error: derived_class.js:134
134: (Child.inherited_initializer: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ number. This type is incompatible with
134: (Child.inherited_initializer: string); // Error: number ~> string
                                   ^^^^^^ string

Error: generic_class.js:15
 15: (o1.p: string); // Error: number ~> string
      ^^^^ number. This type is incompatible with
 15: (o1.p: string); // Error: number ~> string
            ^^^^^^ string

Error: generic_class.js:18
 18: (ClassAnnotated.p: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^^ number. This type is incompatible with
 18: (ClassAnnotated.p: string); // Error: number ~> string
                        ^^^^^^ string

Error: generic_class.js:26
 26:   invalid: T = 42; // Error: number ~> Generic<T>
                    ^^ number. This type is incompatible with
 25: class ClassGenericInitialized<T, U> {
           ^^^^^^^^^^^^^^^^^^^^^^^ some incompatible instantiation of `T`

Error: generic_class.js:29
 29:   static invalid: T = 42; // Error: number ~> Generic<T>
                           ^^ number. This type is incompatible with
 25: class ClassGenericInitialized<T, U> {
           ^^^^^^^^^^^^^^^^^^^^^^^ some incompatible instantiation of `T`

Error: scoping.js:24
 24: (new Foo().outer: string); // Error: number ~> string
      ^^^^^^^^^^^^^^^ number. This type is incompatible with
 24: (new Foo().outer: string); // Error: number ~> string
                       ^^^^^^ string

Error: scoping.js:26
 26: (Foo.outer: string); // Error: number ~> string
      ^^^^^^^^^ number. This type is incompatible with
 26: (Foo.outer: string); // Error: number ~> string
                 ^^^^^^ string

Error: scoping.js:33
 33: (new Foo().selfTyped: number); // Error: Foo ~> number
      ^^^^^^^^^^^^^^^^^^^ Foo. This type is incompatible with
 33: (new Foo().selfTyped: number); // Error: Foo ~> number
                           ^^^^^^ number

Error: scoping.js:35
 35: (Foo.selfTyped: number); // Error: Foo ~> number
      ^^^^^^^^^^^^^ Foo. This type is incompatible with
 35: (Foo.selfTyped: number); // Error: Foo ~> number
                     ^^^^^^ number

Error: scoping.js:38
 38: (new Foo().selfTypedInit: number); // Error: Foo ~> number
      ^^^^^^^^^^^^^^^^^^^^^^^ Foo. This type is incompatible with
 38: (new Foo().selfTypedInit: number); // Error: Foo ~> number
                               ^^^^^^ number

Error: scoping.js:40
 40: (Foo.selfTypedInit: number); // Error: Foo ~> number
      ^^^^^^^^^^^^^^^^^ Foo. This type is incompatible with
 40: (Foo.selfTypedInit: number); // Error: Foo ~> number
                         ^^^^^^ number


Found 48 errors
