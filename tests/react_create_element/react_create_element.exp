Error ------------------------------------------------------------------------------------------------------ test.js:5:7

Cannot call `React.createElement` because: [incompatible-call]
 - Either undefined [1] is incompatible with string [2].
 - Or undefined [1] is incompatible with AbstractComponent [3].
 - Or function type [4] requires another argument from call of method `createElement` [1].

   test.js:5:7
     5| React.createElement(); // Error: Needs a minimum of two arguments.
              ^^^^^^^^^^^^^

References:
   test.js:5:1
     5| React.createElement(); // Error: Needs a minimum of two arguments.
        ^^^^^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/react.js:135:5
   135|   | string
            ^^^^^^ [2]
   <BUILTINS>/react.js:136:5
   136|   | React$AbstractComponent<empty, mixed, React$Node>;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   lib.js:33:6
             v
    33|   & (<
    34|     Comp: React$ElementType,
    35|     Props: {...},
    36|     Children: $ReadOnlyArray<mixed> = [],
    37|   >(component: Comp, props: Props, ...children: Children) => CheckedReactElement<Comp, Props, Children>
          ----------------------------------------------------------------------------------------------------^ [4]


Error ------------------------------------------------------------------------------------------------------ test.js:7:7

Cannot call `React.createElement` because: [incompatible-call]
 - Either number [1] is incompatible with string [2] in the first argument.
 - Or number [1] is incompatible with AbstractComponent [3] in the first argument.

   test.js:7:7
     7| React.createElement(42); // Error: Number is not a valid component type.
              ^^^^^^^^^^^^^

References:
   test.js:7:21
     7| React.createElement(42); // Error: Number is not a valid component type.
                            ^^ [1]
   <BUILTINS>/react.js:135:5
   135|   | string
            ^^^^^^ [2]
   <BUILTINS>/react.js:136:5
   136|   | React$AbstractComponent<empty, mixed, React$Node>;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------------ test.js:9:7

Cannot call `React.createElement` because: [incompatible-call]
 - Either object literal [1] is incompatible with union type [2] in the second argument.
 - Or number [3] is incompatible with string [4] in the first argument.

   test.js:9:7
     9| React.createElement(42, {}); // Error: Number is not a valid component type.
              ^^^^^^^^^^^^^

References:
   test.js:9:25
     9| React.createElement(42, {}); // Error: Number is not a valid component type.
                                ^^ [1]
   lib.js:31:30
    31|   >(component: Comp, props?: null | void, ...children: Children) => CheckedReactElement<Comp, {||}, Children>
                                     ^^^^^^^^^^^ [2]
   test.js:9:21
     9| React.createElement(42, {}); // Error: Number is not a valid component type.
                            ^^ [3]
   <BUILTINS>/react.js:135:5
   135|   | string
            ^^^^^^ [4]


Error ----------------------------------------------------------------------------------------------------- test.js:10:7

Cannot call `React.createElement` because: [incompatible-call]
 - Either object literal [1] is incompatible with union type [2] in the second argument.
 - Or object literal [3] is incompatible with AbstractComponent [4] in the first argument.

   test.js:10:7
    10| React.createElement({}, {}); // Error: Object is not a valid component type.
              ^^^^^^^^^^^^^

References:
   test.js:10:25
    10| React.createElement({}, {}); // Error: Object is not a valid component type.
                                ^^ [1]
   lib.js:31:30
    31|   >(component: Comp, props?: null | void, ...children: Children) => CheckedReactElement<Comp, {||}, Children>
                                     ^^^^^^^^^^^ [2]
   test.js:10:21
    10| React.createElement({}, {}); // Error: Object is not a valid component type.
                            ^^ [3]
   <BUILTINS>/react.js:136:5
   136|   | React$AbstractComponent<empty, mixed, React$Node>;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error ----------------------------------------------------------------------------------------------------- test.js:18:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar` of type argument
`_ValidatedProps`. [incompatible-type-arg]

   test.js:18:7
   18| React.createElement(A, {
             ^^^^^^^^^^^^^

References:
   test.js:20:8
   20|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]
   test.js:13:52
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                                          ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:22:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar` of type argument
`_ValidatedProps`. [incompatible-type-arg]

   test.js:22:7
   22| React.createElement(B, {
             ^^^^^^^^^^^^^

References:
   test.js:24:8
   24|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]
   test.js:14:38
   14| function B(props: {foo: number, bar: number}) { return null }
                                            ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:26:7

Cannot call `React.createElement` because property `bar` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:26:7
   26| React.createElement(A, {foo: 42}); // Error: `bar` is missing.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:27:7

Cannot call `React.createElement` because property `bar` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:27:7
   27| React.createElement(B, {foo: 42}); // Error: `bar` is missing.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:28:7

Cannot call `React.createElement` because property `bar` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:28:7
   28| React.createElement(A, undefined); // Error: `foo` and `bar` are missing.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:28:7

Cannot call `React.createElement` because property `foo` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:28:7
   28| React.createElement(A, undefined); // Error: `foo` and `bar` are missing.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:29:7

Cannot call `React.createElement` because property `bar` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:29:7
   29| React.createElement(B, undefined); // Error: `foo` and `bar` are missing.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:29:7

Cannot call `React.createElement` because property `foo` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:29:7
   29| React.createElement(B, undefined); // Error: `foo` and `bar` are missing.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:30:7

Cannot call `React.createElement` because property `bar` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:30:7
   30| React.createElement(A, null); // Error: `foo` and `bar` are missing.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:30:7

Cannot call `React.createElement` because property `foo` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:30:7
   30| React.createElement(A, null); // Error: `foo` and `bar` are missing.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:31:7

Cannot call `React.createElement` because property `bar` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:31:7
   31| React.createElement(B, null); // Error: `foo` and `bar` are missing.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:31:7

Cannot call `React.createElement` because property `foo` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:31:7
   31| React.createElement(B, null); // Error: `foo` and `bar` are missing.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:34:8

Cannot call `React.createElement` because: [incompatible-call]
 - Either object literal [1] is incompatible with union type [2] in the second argument.
 - Or number [3] is incompatible with boolean [4] in property `foo` of type argument `P` [5].

   test.js:34:8
    34| (React.createElement(A, {foo: 1, bar: 2}): React.Element<Class<A>, {foo: boolean, bar: number}>); // error
               ^^^^^^^^^^^^^

References:
   test.js:34:25
    34| (React.createElement(A, {foo: 1, bar: 2}): React.Element<Class<A>, {foo: boolean, bar: number}>); // error
                                ^^^^^^^^^^^^^^^^ [1]
   lib.js:31:30
    31|   >(component: Comp, props?: null | void, ...children: Children) => CheckedReactElement<Comp, {||}, Children>
                                     ^^^^^^^^^^^ [2]
   test.js:13:39
    13| class A extends React.Component<{foo: number, bar: number}> {}
                                              ^^^^^^ [3]
   test.js:34:74
    34| (React.createElement(A, {foo: 1, bar: 2}): React.Element<Class<A>, {foo: boolean, bar: number}>); // error
                                                                                 ^^^^^^^ [4]
   <BUILTINS>/react.js:150:69
   150| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                                                            ^ [5]


Error ----------------------------------------------------------------------------------------------------- test.js:35:8

Cannot call `React.createElement` because: [incompatible-call]
 - Either object literal [1] is incompatible with union type [2] in the second argument.
 - Or number [3] is incompatible with boolean [4] in property `foo` of type argument `P` [5].

   test.js:35:8
    35| (React.createElement(B, {foo: 1, bar: 2}): React.Element<typeof B, {foo: boolean, bar: number}>); // error
               ^^^^^^^^^^^^^

References:
   test.js:35:25
    35| (React.createElement(B, {foo: 1, bar: 2}): React.Element<typeof B, {foo: boolean, bar: number}>); // error
                                ^^^^^^^^^^^^^^^^ [1]
   lib.js:31:30
    31|   >(component: Comp, props?: null | void, ...children: Children) => CheckedReactElement<Comp, {||}, Children>
                                     ^^^^^^^^^^^ [2]
   test.js:14:25
    14| function B(props: {foo: number, bar: number}) { return null }
                                ^^^^^^ [3]
   test.js:35:74
    35| (React.createElement(B, {foo: 1, bar: 2}): React.Element<typeof B, {foo: boolean, bar: number}>); // error
                                                                                 ^^^^^^^ [4]
   <BUILTINS>/react.js:150:69
   150| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                                                            ^ [5]


Error ---------------------------------------------------------------------------------------------------- test.js:36:42

Cannot get `React.createElement(...).nope` because property `nope` is missing in `React.Element` [1]. [prop-missing]

   test.js:36:42
   36| React.createElement(A, {foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
                                                ^^^^

References:
   lib.js:37:62
   37|   >(component: Comp, props: Props, ...children: Children) => CheckedReactElement<Comp, Props, Children>
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:37:42

Cannot get `React.createElement(...).nope` because property `nope` is missing in `React.Element` [1]. [prop-missing]

   test.js:37:42
   37| React.createElement(B, {foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
                                                ^^^^

References:
   lib.js:37:62
   37|   >(component: Comp, props: Props, ...children: Children) => CheckedReactElement<Comp, Props, Children>
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- test.js:38:7

Cannot call `React.createElement` because property `bar` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:38:7
   38| React.createElement(A); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:38:7

Cannot call `React.createElement` because property `foo` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:38:7
   38| React.createElement(A); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:39:7

Cannot call `React.createElement` because property `bar` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:39:7
   39| React.createElement(B); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:39:7

Cannot call `React.createElement` because property `foo` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:39:7
   39| React.createElement(B); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:49:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar` of type argument
`_ValidatedProps`. [incompatible-type-arg]

   test.js:49:7
   49| React.createElement(C, {
             ^^^^^^^^^^^^^

References:
   test.js:51:8
   51|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]
   test.js:41:52
   41| class C extends React.Component<{foo: number, bar: number}> {
                                                          ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:53:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar` of type argument
`_ValidatedProps`. [incompatible-type-arg]

   test.js:53:7
   53| React.createElement(D, {
             ^^^^^^^^^^^^^

References:
   test.js:55:8
   55|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]
   test.js:44:38
   44| function D(props: {foo: number, bar: number}) { return null }
                                            ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:65:7

Cannot call `React.createElement` because property `children` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:65:7
   65| React.createElement(E, {}); // Error
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:66:7

Cannot call `React.createElement` because property `children` is missing in object type [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:66:7
   66| React.createElement(E, undefined); // Error
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:67:7

Cannot call `React.createElement` because property `children` is missing in object type [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:67:7
   67| React.createElement(E, null); // Error
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:71:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:71:7
   71| React.createElement(E, {}, 1, 2); // Error
             ^^^^^^^^^^^^^

References:
   test.js:71:1
   71| React.createElement(E, {}, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:72:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:72:7
   72| React.createElement(E, undefined, 1, 2); // Error
             ^^^^^^^^^^^^^

References:
   test.js:72:1
   72| React.createElement(E, undefined, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:73:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:73:7
   73| React.createElement(E, null, 1, 2); // Error
             ^^^^^^^^^^^^^

References:
   test.js:73:1
   73| React.createElement(E, null, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:74:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:74:7
   74| React.createElement(E, {}, 1, 2, 3); // Error
             ^^^^^^^^^^^^^

References:
   test.js:74:1
   74| React.createElement(E, {}, 1, 2, 3); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:75:7

Cannot call `React.createElement` because array literal [1] is incompatible with number [2] in property `children` of
type argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:75:7
   75| React.createElement(E, {}, [1, 2]); // Error
             ^^^^^^^^^^^^^

References:
   test.js:75:28
   75| React.createElement(E, {}, [1, 2]); // Error
                                  ^^^^^^ [1]
   test.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:76:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:76:7
   76| React.createElement(E, {}, [1, 2], [3, 4]); // Error
             ^^^^^^^^^^^^^

References:
   test.js:76:1
   76| React.createElement(E, {}, [1, 2], [3, 4]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:77:7

Cannot call `React.createElement` because property `children` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:77:7
   77| React.createElement(E, {}, ...[]); // Error
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:79:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:79:7
   79| React.createElement(E, {}, ...[1, 2]); // Error
             ^^^^^^^^^^^^^

References:
   test.js:79:1
   79| React.createElement(E, {}, ...[1, 2]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:80:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:80:7
   80| React.createElement(E, {}, ...(any: Array<number>)); // Error
             ^^^^^^^^^^^^^

References:
   test.js:80:1
   80| React.createElement(E, {}, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:82:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:82:7
   82| React.createElement(E, {}, 1, ...[2]); // Error
             ^^^^^^^^^^^^^

References:
   test.js:82:1
   82| React.createElement(E, {}, 1, ...[2]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:83:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:83:7
   83| React.createElement(E, {}, 1, ...(any: Array<number>)); // Error
             ^^^^^^^^^^^^^

References:
   test.js:83:1
   83| React.createElement(E, {}, 1, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:86:7

Cannot call `React.createElement` because property `children` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:86:7
   86| React.createElement(F, {}); // Error
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:87:7

Cannot call `React.createElement` because property `children` is missing in object type [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:87:7
   87| React.createElement(F, undefined); // Error
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:88:7

Cannot call `React.createElement` because property `children` is missing in object type [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:88:7
   88| React.createElement(F, null); // Error
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:89:7

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:89:7
   89| React.createElement(F, {}, 1); // Error
             ^^^^^^^^^^^^^

References:
   test.js:89:28
   89| React.createElement(F, {}, 1); // Error
                                  ^ [1]
   test.js:85:44
   85| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:90:7

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:90:7
   90| React.createElement(F, undefined, 1); // Error
             ^^^^^^^^^^^^^

References:
   test.js:90:35
   90| React.createElement(F, undefined, 1); // Error
                                         ^ [1]
   test.js:85:44
   85| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:91:7

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:91:7
   91| React.createElement(F, null, 1); // Error
             ^^^^^^^^^^^^^

References:
   test.js:91:30
   91| React.createElement(F, null, 1); // Error
                                    ^ [1]
   test.js:85:44
   85| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:97:7

Cannot call `React.createElement` because array literal [1] is incompatible with number [2] in array element of property
`children` of type argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:97:7
   97| React.createElement(F, {}, [1, 2], [3, 4]); // Error
             ^^^^^^^^^^^^^

References:
   test.js:97:28
   97| React.createElement(F, {}, [1, 2], [3, 4]); // Error
                                  ^^^^^^ [1]
   test.js:85:50
   85| class F extends React.Component<{children: Array<number>}> {}
                                                        ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:97:7

Cannot call `React.createElement` because array literal [1] is incompatible with number [2] in array element of property
`children` of type argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:97:7
   97| React.createElement(F, {}, [1, 2], [3, 4]); // Error
             ^^^^^^^^^^^^^

References:
   test.js:97:36
   97| React.createElement(F, {}, [1, 2], [3, 4]); // Error
                                          ^^^^^^ [1]
   test.js:85:50
   85| class F extends React.Component<{children: Array<number>}> {}
                                                        ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:98:7

Cannot call `React.createElement` because property `children` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:98:7
   98| React.createElement(F, {}, ...[]); // Error
             ^^^^^^^^^^^^^

References:
   lib.js:23:42
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
   23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:99:7

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:99:7
   99| React.createElement(F, {}, ...[1]); // Error
             ^^^^^^^^^^^^^

References:
   test.js:99:32
   99| React.createElement(F, {}, ...[1]); // Error
                                      ^ [1]
   test.js:85:44
   85| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:102:7

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:102:7
   102| React.createElement(F, {}, 1, ...[]); // Error
              ^^^^^^^^^^^^^

References:
   test.js:102:28
   102| React.createElement(F, {}, 1, ...[]); // Error
                                   ^ [1]
   test.js:85:44
    85| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:107:7

Cannot call `React.createElement` because property `children` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:107:7
   107| React.createElement(G, {}); // Error
              ^^^^^^^^^^^^^

References:
   lib.js:23:42
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:112:7

Cannot call `React.createElement` because in property `children` of type argument `_ValidatedProps`:
[incompatible-type-arg]
 - Either array literal [1] is incompatible with number [2] in array element.
 - Or rest array [3] is incompatible with number [4].

   test.js:112:7
   112| React.createElement(G, {}, [1, 2], [3, 4]); // Error
              ^^^^^^^^^^^^^

References:
   test.js:112:28
   112| React.createElement(G, {}, [1, 2], [3, 4]); // Error
                                   ^^^^^^ [1]
   test.js:106:68
   106| class G extends React.Component<{children: number | $ReadOnlyArray<number>}> {}
                                                                           ^^^^^^ [2]
   test.js:112:1
   112| React.createElement(G, {}, [1, 2], [3, 4]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   test.js:106:44
   106| class G extends React.Component<{children: number | $ReadOnlyArray<number>}> {}
                                                   ^^^^^^ [4]


Error ---------------------------------------------------------------------------------------------------- test.js:113:7

Cannot call `React.createElement` because property `children` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:113:7
   113| React.createElement(G, {}, ...[]); // Error
              ^^^^^^^^^^^^^

References:
   lib.js:23:42
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:127:7

Cannot call `React.createElement` because in property `children` of type argument `_ValidatedProps`:
[incompatible-type-arg]
 - Either array literal [1] is incompatible with number [2] in array element.
 - Or rest array [3] is incompatible with number [4].

   test.js:127:7
   127| React.createElement(G2, {}, [1, 2], [3, 4]); // Error
              ^^^^^^^^^^^^^

References:
   test.js:127:29
   127| React.createElement(G2, {}, [1, 2], [3, 4]); // Error
                                    ^^^^^^ [1]
   test.js:121:70
   121| class G2 extends React.Component<{children?: number | $ReadOnlyArray<number>}> {}
                                                                             ^^^^^^ [2]
   test.js:127:1
   127| React.createElement(G2, {}, [1, 2], [3, 4]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   test.js:121:46
   121| class G2 extends React.Component<{children?: number | $ReadOnlyArray<number>}> {}
                                                     ^^^^^^ [4]


Error ---------------------------------------------------------------------------------------------------- test.js:138:7

Cannot call `React.createElement` because property `children` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:138:7
   138| React.createElement(H, {}); // Error
              ^^^^^^^^^^^^^

References:
   lib.js:23:42
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:144:7

Cannot call `React.createElement` because property `children` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:144:7
   144| React.createElement(H, {}, ...[]); // Error
              ^^^^^^^^^^^^^

References:
   lib.js:23:42
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:155:7

Cannot call `React.createElement` because null [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:155:7
   155| React.createElement(I, {}, null); // Error
              ^^^^^^^^^^^^^

References:
   test.js:155:28
   155| React.createElement(I, {}, null); // Error
                                   ^^^^ [1]
   test.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:157:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:157:7
   157| React.createElement(I, {}, 1, 2); // Error
              ^^^^^^^^^^^^^

References:
   test.js:157:1
   157| React.createElement(I, {}, 1, 2); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:160:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:160:7
   160| React.createElement(I, {}, ...[1, 2]); // Error
              ^^^^^^^^^^^^^

References:
   test.js:160:1
   160| React.createElement(I, {}, ...[1, 2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:161:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:161:7
   161| React.createElement(I, {}, ...(any: Array<number>)); // Error
              ^^^^^^^^^^^^^

References:
   test.js:161:1
   161| React.createElement(I, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:163:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:163:7
   163| React.createElement(I, {}, 1, ...[2]); // Error
              ^^^^^^^^^^^^^

References:
   test.js:163:1
   163| React.createElement(I, {}, 1, ...[2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:164:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:164:7
   164| React.createElement(I, {}, 1, ...(any: Array<number>)); // Error
              ^^^^^^^^^^^^^

References:
   test.js:164:1
   164| React.createElement(I, {}, 1, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:167:7

Cannot call `React.createElement` because property `children` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:167:7
   167| React.createElement(J, {}); // Error
              ^^^^^^^^^^^^^

References:
   lib.js:23:42
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:171:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:171:7
   171| React.createElement(J, {}, 1, 2); // Error
              ^^^^^^^^^^^^^

References:
   test.js:171:1
   171| React.createElement(J, {}, 1, 2); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:166:45
   166| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:172:7

Cannot call `React.createElement` because property `children` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:172:7
   172| React.createElement(J, {}, ...[]); // Error
              ^^^^^^^^^^^^^

References:
   lib.js:23:42
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:174:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:174:7
   174| React.createElement(J, {}, ...[1, 2]); // Error
              ^^^^^^^^^^^^^

References:
   test.js:174:1
   174| React.createElement(J, {}, ...[1, 2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:166:45
   166| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:175:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:175:7
   175| React.createElement(J, {}, ...(any: Array<number>)); // Error
              ^^^^^^^^^^^^^

References:
   test.js:175:1
   175| React.createElement(J, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:166:45
   166| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:177:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:177:7
   177| React.createElement(J, {}, 1, ...[2]); // Error
              ^^^^^^^^^^^^^

References:
   test.js:177:1
   177| React.createElement(J, {}, 1, ...[2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:166:45
   166| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:178:7

Cannot call `React.createElement` because rest array [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:178:7
   178| React.createElement(J, {}, 1, ...(any: Array<number>)); // Error
              ^^^^^^^^^^^^^

References:
   test.js:178:1
   178| React.createElement(J, {}, 1, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:166:45
   166| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:184:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:184:7
   184| React.createElement(K, {}, '42'); // Error
              ^^^^^^^^^^^^^

References:
   test.js:184:28
   184| React.createElement(K, {}, '42'); // Error
                                   ^^^^ [1]
   test.js:180:44
   180| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:185:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:185:7
   185| React.createElement(K, {children: '42'}); // Error
              ^^^^^^^^^^^^^

References:
   test.js:185:35
   185| React.createElement(K, {children: '42'}); // Error
                                          ^^^^ [1]
   test.js:180:44
   180| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:187:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:187:7
   187| React.createElement(K, {children: 42}, '42'); // Error
              ^^^^^^^^^^^^^

References:
   test.js:187:40
   187| React.createElement(K, {children: 42}, '42'); // Error
                                               ^^^^ [1]
   test.js:180:44
   180| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:188:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:188:7
   188| React.createElement(K, {children: '42'}, '42'); // Error
              ^^^^^^^^^^^^^

References:
   test.js:188:42
   188| React.createElement(K, {children: '42'}, '42'); // Error
                                                 ^^^^ [1]
   test.js:180:44
   180| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:201:7

Cannot call `React.createElement` because property `foo` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:201:7
   201| React.createElement(L, {}, 1); // Error
              ^^^^^^^^^^^^^

References:
   lib.js:23:42
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:202:7

Cannot call `React.createElement` because property `foo` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:202:7
   202| React.createElement(L, {children: 1}); // Error
              ^^^^^^^^^^^^^

References:
   lib.js:23:42
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:203:7

Cannot call `React.createElement` because property `foo` is missing in object type [1] but exists in `ExpectedProps` [2]
in type argument `_ValidatedProps`. [prop-missing]

   test.js:203:7
   203| React.createElement(L, {bar: 1}, 2); // Error
              ^^^^^^^^^^^^^

References:
   lib.js:23:42
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:204:7

Cannot call `React.createElement` because property `foo` is missing in object literal [1] but exists in
`ExpectedProps` [2] in type argument `_ValidatedProps`. [prop-missing]

   test.js:204:7
   204| React.createElement(L, {bar: 1, children: 2}); // Error
              ^^^^^^^^^^^^^

References:
   lib.js:23:42
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   lib.js:23:20
    23|   _ValidatedProps: ExpectedProps<Comp> = PropsFromPropsArgAndChildrenArg<Props, Children>
                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:205:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `foo` of type argument
`_ValidatedProps`. [incompatible-type-arg]

   test.js:205:7
   205| React.createElement(L, {foo: '1', bar: 2}, 3); // Error
              ^^^^^^^^^^^^^

References:
   test.js:205:30
   205| React.createElement(L, {foo: '1', bar: 2}, 3); // Error
                                     ^^^ [1]
   test.js:191:8
   191|   foo: number,
               ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:206:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `foo` of type argument
`_ValidatedProps`. [incompatible-type-arg]

   test.js:206:7
   206| React.createElement(L, {foo: '1', bar: 2, children: 3}); // Error
              ^^^^^^^^^^^^^

References:
   test.js:206:30
   206| React.createElement(L, {foo: '1', bar: 2, children: 3}); // Error
                                     ^^^ [1]
   test.js:191:8
   191|   foo: number,
               ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:207:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar` of type argument
`_ValidatedProps`. [incompatible-type-arg]

   test.js:207:7
   207| React.createElement(L, {foo: 1, bar: '2'}, 3); // Error
              ^^^^^^^^^^^^^

References:
   test.js:207:38
   207| React.createElement(L, {foo: 1, bar: '2'}, 3); // Error
                                             ^^^ [1]
   test.js:192:8
   192|   bar: number,
               ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:208:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar` of type argument
`_ValidatedProps`. [incompatible-type-arg]

   test.js:208:7
   208| React.createElement(L, {foo: 1, bar: '2', children: 3}); // Error
              ^^^^^^^^^^^^^

References:
   test.js:208:38
   208| React.createElement(L, {foo: 1, bar: '2', children: 3}); // Error
                                             ^^^ [1]
   test.js:192:8
   192|   bar: number,
               ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:209:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:209:7
   209| React.createElement(L, {foo: 1, bar: 2}, '3'); // Error
              ^^^^^^^^^^^^^

References:
   test.js:209:42
   209| React.createElement(L, {foo: 1, bar: 2}, '3'); // Error
                                                 ^^^ [1]
   test.js:193:13
   193|   children: number,
                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:210:7

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children` of type
argument `_ValidatedProps`. [incompatible-type-arg]

   test.js:210:7
   210| React.createElement(L, {foo: 1, bar: 2, children: '3'}); // Error
              ^^^^^^^^^^^^^

References:
   test.js:210:51
   210| React.createElement(L, {foo: 1, bar: 2, children: '3'}); // Error
                                                          ^^^ [1]
   test.js:193:13
   193|   children: number,
                    ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:215:8

Cannot call `React.createElement` because `M` [1] is incompatible with `N` [2] in the first argument.
[incompatible-call]

   test.js:215:8
   215| (React.createElement(M): React.Element<Class<N>, any>); // Error
               ^^^^^^^^^^^^^

References:
   test.js:212:7
   212| class M extends React.Component<{}> {}
              ^ [1]
   test.js:215:46
   215| (React.createElement(M): React.Element<Class<N>, any>); // Error
                                                     ^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:219:7

Cannot call `React.createElement` because rest array [1] has an unknown number of elements, so is incompatible with
tuple type [2] in property `children` of type argument `_ValidatedProps`. [invalid-tuple-arity]

   test.js:219:7
   219| React.createElement(P, null, 1, 2, ...(any: Array<number>)); // ERROR
              ^^^^^^^^^^^^^

References:
   test.js:219:1
   219| React.createElement(P, null, 1, 2, ...(any: Array<number>)); // ERROR
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   test.js:217:31
   217| declare function P({children: [1, 2]}): void;
                                      ^^^^^^ [2]



Found 86 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
