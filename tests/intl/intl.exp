Error ------------------------------------------------------------------------------------------------- collator.js:5:29

Cannot assign `new Intl.Collator()` to `c` because `Intl$Collator` [1] is incompatible with `Intl$PluralRules` [2].
[incompatible-type]

   collator.js:5:29
   5| const c: Intl$PluralRules = new Intl.Collator() // incorrect
                                  ^^^^^^^^^^^^^^^^^^^ [1]

References:
   collator.js:5:10
   5| const c: Intl$PluralRules = new Intl.Collator() // incorrect
               ^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- collator.js:6:15

Cannot call `Intl.Collator` with `1` bound to `locales` because number [1] is incompatible with string [2].
[incompatible-call]

   collator.js:6:15
    6| Intl.Collator(1, {
                     ^ [1]

References:
   <BUILTINS>/intl.js:20:21
   20| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- collator.js:7:18

Cannot call `Intl.Collator` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `localeMatcher`. [incompatible-call]

   collator.js:7:18
    7|   localeMatcher: 'look fit',
                        ^^^^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:50:19
   50|   localeMatcher?: 'lookup' | 'best fit',
                         ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- collator.js:8:10

Cannot call `Intl.Collator` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `usage`. [incompatible-call]

   collator.js:8:10
    8|   usage: 'find',
                ^^^^^^ [1]

References:
   <BUILTINS>/intl.js:51:11
   51|   usage?: 'sort' | 'search',
                 ^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- collator.js:9:16

Cannot call `Intl.Collator` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `sensitivity`. [incompatible-call]

   collator.js:9:16
    9|   sensitivity: '',
                      ^^ [1]

References:
   <BUILTINS>/intl.js:52:17
   52|   sensitivity?: 'base' | 'accent' | 'case' | 'variant',
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ collator.js:10:22

Cannot call `Intl.Collator` with object literal bound to `options` because null [1] is incompatible with boolean [2] in
property `ignorePunctuation`. [incompatible-call]

   collator.js:10:22
   10|   ignorePunctuation: null,
                            ^^^^ [1]

References:
   <BUILTINS>/intl.js:53:23
   53|   ignorePunctuation?: boolean,
                             ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ collator.js:11:12

Cannot call `Intl.Collator` with object literal bound to `options` because number [1] is incompatible with boolean [2]
in property `numeric`. [incompatible-call]

   collator.js:11:12
   11|   numeric: 1,
                  ^ [1]

References:
   <BUILTINS>/intl.js:54:13
   54|   numeric?: boolean,
                   ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ collator.js:12:14

Cannot call `Intl.Collator` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `caseFirst`. [incompatible-call]

   collator.js:12:14
   12|   caseFirst: 'true'
                    ^^^^^^ [1]

References:
   <BUILTINS>/intl.js:55:15
   55|   caseFirst?: 'upper' | 'lower' | 'false',
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- collator.js:24:5

Cannot resolve name `Collator`. [cannot-resolve-name]

   24| new Collator().format() // incorrect
           ^^^^^^^^


Error ----------------------------------------------------------------------------------------- date_time_format.js:5:30

Cannot assign `new Intl.DateTimeFormat()` to `c` because `Intl$DateTimeFormat` [1] is incompatible with
`Intl$NumberFormat` [2]. [incompatible-type]

   date_time_format.js:5:30
   5| const c: Intl$NumberFormat = new Intl.DateTimeFormat() // incorrect
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   date_time_format.js:5:10
   5| const c: Intl$NumberFormat = new Intl.DateTimeFormat() // incorrect
               ^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:6:21

Cannot call `Intl.DateTimeFormat` with `1` bound to `locales` because number [1] is incompatible with string [2].
[incompatible-call]

   date_time_format.js:6:21
    6| Intl.DateTimeFormat(1, {
                           ^ [1]

References:
   <BUILTINS>/intl.js:20:21
   20| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:7:18

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `localeMatcher`. [incompatible-call]

   date_time_format.js:7:18
     7|   localeMatcher: 'look',
                         ^^^^^^ [1]

References:
   <BUILTINS>/intl.js:103:19
   103|   localeMatcher?: 'lookup' | 'best fit',
                          ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:8:13

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because number [1] is incompatible with
string [2] in property `timeZone`. [incompatible-call]

   date_time_format.js:8:13
     8|   timeZone: 1,
                    ^ [1]

References:
   <BUILTINS>/intl.js:104:14
   104|   timeZone?: string,
                     ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:9:11

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with
boolean [2] in property `hour12`. [incompatible-call]

   date_time_format.js:9:11
     9|   hour12: '',
                  ^^ [1]

References:
   <BUILTINS>/intl.js:105:12
   105|   hour12?: boolean,
                   ^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:10:18

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `formatMatcher`. [incompatible-call]

   date_time_format.js:10:18
    10|   formatMatcher: 'basic fit',
                         ^^^^^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:106:19
   106|   formatMatcher?: 'basic' | 'best fit',
                          ^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:11:12

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `weekday`. [incompatible-call]

   date_time_format.js:11:12
    11|   weekday: '2-digit',
                   ^^^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:107:13
   107|   weekday?: 'narrow' | 'short' | 'long',
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:12:8

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `era`. [incompatible-call]

   date_time_format.js:12:8
    12|   era: '',
               ^^ [1]

References:
   <BUILTINS>/intl.js:108:9
   108|   era?: 'narrow' | 'short' | 'long',
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:13:9

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `year`. [incompatible-call]

   date_time_format.js:13:9
    13|   year: '',
                ^^ [1]

References:
   <BUILTINS>/intl.js:109:10
   109|   year?: 'numeric' | '2-digit',
                 ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:14:10

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `month`. [incompatible-call]

   date_time_format.js:14:10
    14|   month: '',
                 ^^ [1]

References:
   <BUILTINS>/intl.js:110:11
   110|   month?: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:15:8

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `day`. [incompatible-call]

   date_time_format.js:15:8
    15|   day: '',
               ^^ [1]

References:
   <BUILTINS>/intl.js:111:9
   111|   day?: 'numeric' | '2-digit',
                ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:16:9

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `hour`. [incompatible-call]

   date_time_format.js:16:9
    16|   hour: '',
                ^^ [1]

References:
   <BUILTINS>/intl.js:112:10
   112|   hour?: 'numeric' | '2-digit',
                 ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:17:11

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `minute`. [incompatible-call]

   date_time_format.js:17:11
    17|   minute: 'long',
                  ^^^^^^ [1]

References:
   <BUILTINS>/intl.js:113:12
   113|   minute?: 'numeric' | '2-digit',
                   ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:18:11

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `second`. [incompatible-call]

   date_time_format.js:18:11
    18|   second: 'short',
                  ^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:114:12
   114|   second?: 'numeric' | '2-digit',
                   ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:19:17

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `timeZoneName`. [incompatible-call]

   date_time_format.js:19:17
    19|   timeZoneName: 'narrow'
                        ^^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:115:18
   115|   timeZoneName?: 'short' | 'long',
                         ^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:38:5

Cannot resolve name `DateTimeFormat`. [cannot-resolve-name]

   38| new DateTimeFormat().select() // incorrect
           ^^^^^^^^^^^^^^


Error ----------------------------------------------------------------------------------------------------- intl.js:2:19

Cannot assign `Intl.getCanonicalLocales()` to `a` because array type [1] is incompatible with string [2].
[incompatible-type]

   intl.js:2:19
    2| const a: string = Intl.getCanonicalLocales(); // incorrect
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:15:53
   15|   getCanonicalLocales?: (locales?: Intl$Locales) => Intl$Locale[],
                                                           ^^^^^^^^^^^^^ [1]
   intl.js:2:10
    2| const a: string = Intl.getCanonicalLocales(); // incorrect
                ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- intl.js:2:24

Cannot call `Intl.getCanonicalLocales` because undefined [1] is not a function. [not-a-function]

   intl.js:2:24
    2| const a: string = Intl.getCanonicalLocales(); // incorrect
                              ^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:15:25
   15|   getCanonicalLocales?: (locales?: Intl$Locales) => Intl$Locale[],
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- intl.js:5:21

Cannot assign `getCanonicalLocales()` to `b` because array type [1] is incompatible with string [2]. [incompatible-type]

   intl.js:5:21
    5|   const b: string = getCanonicalLocales(); // incorrect
                           ^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:15:53
   15|   getCanonicalLocales?: (locales?: Intl$Locales) => Intl$Locale[],
                                                           ^^^^^^^^^^^^^ [1]
   intl.js:5:12
    5|   const b: string = getCanonicalLocales(); // incorrect
                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- intl.js:6:43

Cannot call `getCanonicalLocales` with `null` bound to `locales` because: [incompatible-call]
 - Either null [1] is incompatible with string [2].
 - Or null [1] is incompatible with array type [3].

   intl.js:6:43
    6|   const c: string[] = getCanonicalLocales(null); // incorrect
                                                 ^^^^ [1]

References:
   <BUILTINS>/intl.js:20:21
   20| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:20:35
   20| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------------------- intl.js:7:45

Cannot call `getCanonicalLocales` with array literal bound to `locales` because number [1] is incompatible with
string [2] in array element. [incompatible-call]

   intl.js:7:45
    7|   const d: string[] = getCanonicalLocales([ 1, 2 ]); // incorrect
                                                   ^ [1]

References:
   <BUILTINS>/intl.js:20:35
   20| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- intl.js:7:48

Cannot call `getCanonicalLocales` with array literal bound to `locales` because number [1] is incompatible with
string [2] in array element. [incompatible-call]

   intl.js:7:48
    7|   const d: string[] = getCanonicalLocales([ 1, 2 ]); // incorrect
                                                      ^ [1]

References:
   <BUILTINS>/intl.js:20:35
   20| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- intl.js:13:16

Cannot get `Intl.Unknown` because property `Unknown` is missing in object type [1]. [prop-missing]

   intl.js:13:16
   13| const h = Intl.Unknown; // incorrect
                      ^^^^^^^

References:
   <BUILTINS>/intl.js:10:19
                         v
   10| declare var Intl: {
   11|   Collator: Class<Intl$Collator>,
   12|   DateTimeFormat: Class<Intl$DateTimeFormat>,
   13|   NumberFormat: Class<Intl$NumberFormat>,
   14|   PluralRules: ?Class<Intl$PluralRules>,
   15|   getCanonicalLocales?: (locales?: Intl$Locales) => Intl$Locale[],
   16|   ...
   17| }
       ^ [1]


Error -------------------------------------------------------------------------------------------- number_format.js:5:32

Cannot assign `new Intl.NumberFormat()` to `c` because `Intl$NumberFormat` [1] is incompatible with
`Intl$DateTimeFormat` [2]. [incompatible-type]

   number_format.js:5:32
   5| const c: Intl$DateTimeFormat = new Intl.NumberFormat() // incorrect
                                     ^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   number_format.js:5:10
   5| const c: Intl$DateTimeFormat = new Intl.NumberFormat() // incorrect
               ^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- number_format.js:6:19

Cannot call `Intl.NumberFormat` with `1` bound to `locales` because number [1] is incompatible with string [2].
[incompatible-call]

   number_format.js:6:19
    6| Intl.NumberFormat(1, {
                         ^ [1]

References:
   <BUILTINS>/intl.js:20:21
   20| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- number_format.js:7:18

Cannot call `Intl.NumberFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `localeMatcher`. [incompatible-call]

   number_format.js:7:18
     7|   localeMatcher: 'best',
                         ^^^^^^ [1]

References:
   <BUILTINS>/intl.js:151:19
   151|   localeMatcher?: 'lookup' | 'best fit',
                          ^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- number_format.js:8:10

Cannot call `Intl.NumberFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `style`. [incompatible-call]

   number_format.js:8:10
     8|   style: 'octal',
                 ^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:152:11
   152|   style?: 'decimal' | 'currency' | 'percent',
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- number_format.js:9:13

Cannot call `Intl.NumberFormat` with object literal bound to `options` because number [1] is incompatible with
string [2] in property `currency`. [incompatible-call]

   number_format.js:9:13
     9|   currency: 123,
                    ^^^ [1]

References:
   <BUILTINS>/intl.js:153:14
   153|   currency?: string,
                     ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:10:20

Cannot call `Intl.NumberFormat` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `currencyDisplay`. [incompatible-call]

   number_format.js:10:20
    10|   currencyDisplay: 'sym',
                           ^^^^^ [1]

References:
   <BUILTINS>/intl.js:154:21
   154|   currencyDisplay?: 'symbol' | 'code' | 'name',
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:11:16

Cannot call `Intl.NumberFormat` with object literal bound to `options` because number [1] is incompatible with
boolean [2] in property `useGrouping`. [incompatible-call]

   number_format.js:11:16
    11|   useGrouping: 5,
                       ^ [1]

References:
   <BUILTINS>/intl.js:155:17
   155|   useGrouping?: boolean,
                        ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:12:25

Cannot call `Intl.NumberFormat` with object literal bound to `options` because object literal [1] is incompatible with
number [2] in property `minimumIntegerDigits`. [incompatible-call]

   number_format.js:12:25
    12|   minimumIntegerDigits: {},
                                ^^ [1]

References:
   <BUILTINS>/intl.js:156:26
   156|   minimumIntegerDigits?: number,
                                 ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:13:26

Cannot call `Intl.NumberFormat` with object literal bound to `options` because string [1] is incompatible with
number [2] in property `minimumFractionDigits`. [incompatible-call]

   number_format.js:13:26
    13|   minimumFractionDigits: '',
                                 ^^ [1]

References:
   <BUILTINS>/intl.js:157:27
   157|   minimumFractionDigits?: number,
                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:14:26

Cannot call `Intl.NumberFormat` with object literal bound to `options` because null [1] is incompatible with number [2]
in property `maximumFractionDigits`. [incompatible-call]

   number_format.js:14:26
    14|   maximumFractionDigits: null,
                                 ^^^^ [1]

References:
   <BUILTINS>/intl.js:158:27
   158|   maximumFractionDigits?: number,
                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:15:29

Cannot call `Intl.NumberFormat` with object literal bound to `options` because string [1] is incompatible with
number [2] in property `minimumSignificantDigits`. [incompatible-call]

   number_format.js:15:29
    15|   minimumSignificantDigits: '',
                                    ^^ [1]

References:
   <BUILTINS>/intl.js:159:30
   159|   minimumSignificantDigits?: number,
                                     ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:16:29

Cannot call `Intl.NumberFormat` with object literal bound to `options` because null [1] is incompatible with number [2]
in property `maximumSignificantDigits`. [incompatible-call]

   number_format.js:16:29
    16|   maximumSignificantDigits: null
                                    ^^^^ [1]

References:
   <BUILTINS>/intl.js:160:30
   160|   maximumSignificantDigits?: number,
                                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- number_format.js:32:5

Cannot resolve name `NumberFormat`. [cannot-resolve-name]

   32| new NumberFormat().select() // incorrect
           ^^^^^^^^^^^^


Error --------------------------------------------------------------------------------------------- plural_rules.js:3:16

Cannot call `Intl.PluralRules` because null or undefined [1] is not a function. [not-a-function]

   plural_rules.js:3:16
    3| const a = Intl.PluralRules(); // incorrect
                      ^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:14:16
   14|   PluralRules: ?Class<Intl$PluralRules>,
                      ^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- plural_rules.js:3:16

Cannot call `Intl.PluralRules` because a call signature declaring the expected parameter / return type is missing in
statics of `Intl$PluralRules` [1]. [prop-missing]

   plural_rules.js:3:16
     3| const a = Intl.PluralRules(); // incorrect
                       ^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:164:15
   164| declare class Intl$PluralRules {
                      ^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- plural_rules.js:6:13

Cannot call `PluralRules` because a call signature declaring the expected parameter / return type is missing in statics
of `Intl$PluralRules` [1]. [prop-missing]

   plural_rules.js:6:13
     6|   const b = PluralRules(); // incorrect
                    ^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:164:15
   164| declare class Intl$PluralRules {
                      ^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- plural_rules.js:8:19

Cannot call `PluralRules` with `1` bound to `locales` because number [1] is incompatible with string [2].
[incompatible-call]

   plural_rules.js:8:19
    8|   new PluralRules(1); // incorrect
                         ^ [1]

References:
   <BUILTINS>/intl.js:20:21
   20| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:12:20

Cannot call `PluralRules` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `localeMatcher`. [incompatible-call]

   plural_rules.js:12:20
    12|     localeMatcher: 'best one',
                           ^^^^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:190:19
   190|   localeMatcher?: 'lookup' | 'best fit',
                          ^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:13:11

Cannot call `PluralRules` with object literal bound to `options` because string [1] is incompatible with literal
union [2] in property `type`. [incompatible-call]

   plural_rules.js:13:11
    13|     type: 'count',
                  ^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:191:10
   191|   type?: 'cardinal' | 'ordinal',
                 ^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:14:27

Cannot call `PluralRules` with object literal bound to `options` because string [1] is incompatible with number [2] in
property `minimumIntegerDigits`. [incompatible-call]

   plural_rules.js:14:27
    14|     minimumIntegerDigits: '',
                                  ^^ [1]

References:
   <BUILTINS>/intl.js:192:26
   192|   minimumIntegerDigits?: number,
                                 ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:17:31

Cannot call `PluralRules` with object literal bound to `options` because `Intl$PluralRules` [1] is incompatible with
number [2] in property `minimumSignificantDigits`. [incompatible-call]

   plural_rules.js:17:31
    17|     minimumSignificantDigits: c,
                                      ^

References:
   plural_rules.js:7:13
     7|   const c = new PluralRules(); // correct
                    ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/intl.js:195:30
   195|   minimumSignificantDigits?: number,
                                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:18:31

Cannot call `PluralRules` with object literal bound to `options` because string [1] is incompatible with number [2] in
property `maximumSignificantDigits`. [incompatible-call]

   plural_rules.js:18:31
    18|     maximumSignificantDigits: ''
                                      ^^ [1]

References:
   <BUILTINS>/intl.js:196:30
   196|   maximumSignificantDigits?: number,
                                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:30:21

Cannot call `(new PluralRules()).format` because property `format` is missing in `Intl$PluralRules` [1]. [prop-missing]

   plural_rules.js:30:21
   30|   new PluralRules().format() // incorrect
                           ^^^^^^

References:
   plural_rules.js:30:3
   30|   new PluralRules().format() // incorrect
         ^^^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- plural_rules.js:31:21

Cannot call `(new PluralRules()).select` because function [1] requires another argument. [incompatible-call]

   plural_rules.js:31:21
    31|   new PluralRules().select() // incorrect
                            ^^^^^^

References:
   <BUILTINS>/intl.js:170:3
   170|   select (number): Intl$PluralRule;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- plural_rules.js:37:15

Cannot call `PluralRules.getCanonicalLocales` because property `getCanonicalLocales` is missing in statics of
`Intl$PluralRules` [1]. [prop-missing]

   plural_rules.js:37:15
    37|   PluralRules.getCanonicalLocales() // incorrect
                      ^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:164:15
   164| declare class Intl$PluralRules {
                      ^^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- plural_rules.js:39:34

Cannot call `PluralRules.supportedLocalesOf` with `1` bound to `locales` because number [1] is incompatible with
string [2]. [incompatible-call]

   plural_rules.js:39:34
   39|   PluralRules.supportedLocalesOf(1) // incorrect
                                        ^ [1]

References:
   <BUILTINS>/intl.js:20:21
   20| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]



Found 58 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
