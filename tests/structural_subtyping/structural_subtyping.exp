Error: builtin.js:11
 11: var lengthTest3: IHasLength = 123; // number doesn't have length
                                   ^^^ number. This type is incompatible with
 11: var lengthTest3: IHasLength = 123; // number doesn't have length
                      ^^^^^^^^^^ IHasLength
  Property `length` is incompatible:
     11: var lengthTest3: IHasLength = 123; // number doesn't have length
                          ^^^^^^^^^^ property `length` of IHasLength. Property not found in
     11: var lengthTest3: IHasLength = 123; // number doesn't have length
                                       ^^^ number

Error: builtin.js:12
 12: var lengthTest4: IHasLength = true; // bool doesn't have length
                                   ^^^^ boolean. This type is incompatible with
 12: var lengthTest4: IHasLength = true; // bool doesn't have length
                      ^^^^^^^^^^ IHasLength
  Property `length` is incompatible:
     12: var lengthTest4: IHasLength = true; // bool doesn't have length
                          ^^^^^^^^^^ property `length` of IHasLength. Property not found in
     12: var lengthTest4: IHasLength = true; // bool doesn't have length
                                       ^^^^ boolean

Error: class.js:22
 22: var testInstance2: IHasXNumber = new ClassWithXString(); // Error wrong type
                                      ^^^^^^^^^^^^^^^^^^^^^^ ClassWithXString. This type is incompatible with
 22: var testInstance2: IHasXNumber = new ClassWithXString(); // Error wrong type
                        ^^^^^^^^^^^ IHasXNumber
  Property `x` is incompatible:
      6:   x: string;
              ^^^^^^ string. This type is incompatible with
     14:   x: number;
              ^^^^^^ number

Error: class.js:22
 22: var testInstance2: IHasXNumber = new ClassWithXString(); // Error wrong type
                                      ^^^^^^^^^^^^^^^^^^^^^^ ClassWithXString. This type is incompatible with
 22: var testInstance2: IHasXNumber = new ClassWithXString(); // Error wrong type
                        ^^^^^^^^^^^ IHasXNumber
  Property `x` is incompatible:
     14:   x: number;
              ^^^^^^ number. This type is incompatible with
      6:   x: string;
              ^^^^^^ string

Error: class.js:23
 23: var testInstance3: IHasYString = new ClassWithXString(); // Error missing prop
                                      ^^^^^^^^^^^^^^^^^^^^^^ ClassWithXString. This type is incompatible with
 23: var testInstance3: IHasYString = new ClassWithXString(); // Error missing prop
                        ^^^^^^^^^^^ IHasYString
  Property `y` is incompatible:
     23: var testInstance3: IHasYString = new ClassWithXString(); // Error missing prop
                            ^^^^^^^^^^^ property `y` of IHasYString. Property not found in
     23: var testInstance3: IHasYString = new ClassWithXString(); // Error missing prop
                                          ^^^^^^^^^^^^^^^^^^^^^^ ClassWithXString

Error: obj.js:10
 10: var propTest2: IHasXString = { x: 123 }; // Error string != number
                                  ^^^^^^^^^^ object literal. This type is incompatible with
 10: var propTest2: IHasXString = { x: 123 }; // Error string != number
                    ^^^^^^^^^^^ IHasXString
  Property `x` is incompatible:
      6:   x: string;
              ^^^^^^ string. This type is incompatible with
     10: var propTest2: IHasXString = { x: 123 }; // Error string != number
                                           ^^^ number

Error: obj.js:10
 10: var propTest2: IHasXString = { x: 123 }; // Error string != number
                                  ^^^^^^^^^^ object literal. This type is incompatible with
 10: var propTest2: IHasXString = { x: 123 }; // Error string != number
                    ^^^^^^^^^^^ IHasXString
  Property `x` is incompatible:
     10: var propTest2: IHasXString = { x: 123 }; // Error string != number
                                           ^^^ number. This type is incompatible with
      6:   x: string;
              ^^^^^^ string

Error: obj.js:11
 11: var propTest3: IHasXString = {}; // Property not found
                                  ^^ object literal. This type is incompatible with
 11: var propTest3: IHasXString = {}; // Property not found
                    ^^^^^^^^^^^ IHasXString
  Property `x` is incompatible:
     11: var propTest3: IHasXString = {}; // Property not found
                        ^^^^^^^^^^^ property `x` of IHasXString. Property not found in
     11: var propTest3: IHasXString = {}; // Property not found
                                      ^^ object literal

Error: obj.js:19
 19:   (y: IHasXString); // error: string != number
        ^ object type. This type is incompatible with
 19:   (y: IHasXString); // error: string != number
           ^^^^^^^^^^^ IHasXString
  Property `x` is incompatible:
      6:   x: string;
              ^^^^^^ string. This type is incompatible with
     18: function propTest6(y: {[key: string]: number}) {
                                               ^^^^^^ number

Error: obj.js:19
 19:   (y: IHasXString); // error: string != number
        ^ object type. This type is incompatible with
 19:   (y: IHasXString); // error: string != number
           ^^^^^^^^^^^ IHasXString
  Property `x` is incompatible:
     18: function propTest6(y: {[key: string]: number}) {
                                               ^^^^^^ number. This type is incompatible with
      6:   x: string;
              ^^^^^^ string

Error: optional.js:10
 10: var test2: HasOptional = {}; // Error: missing property a
                              ^^ object literal. This type is incompatible with
 10: var test2: HasOptional = {}; // Error: missing property a
                ^^^^^^^^^^^ HasOptional
  Property `a` is incompatible:
     10: var test2: HasOptional = {}; // Error: missing property a
                    ^^^^^^^^^^^ property `a` of HasOptional. Property not found in
     10: var test2: HasOptional = {}; // Error: missing property a
                                  ^^ object literal

Error: optional.js:12
 12: var test3: HasOptional = { a: "hello", b: true }; // Error: boolean ~> number
                              ^^^^^^^^^^^^^^^^^^^^^^^ object literal. This type is incompatible with
 12: var test3: HasOptional = { a: "hello", b: true }; // Error: boolean ~> number
                ^^^^^^^^^^^ HasOptional
  Property `b` is incompatible:
      5:   b?: number,
               ^^^^^^ number. This type is incompatible with
     12: var test3: HasOptional = { a: "hello", b: true }; // Error: boolean ~> number
                                                   ^^^^ boolean

Error: optional.js:12
 12: var test3: HasOptional = { a: "hello", b: true }; // Error: boolean ~> number
                              ^^^^^^^^^^^^^^^^^^^^^^^ object literal. This type is incompatible with
 12: var test3: HasOptional = { a: "hello", b: true }; // Error: boolean ~> number
                ^^^^^^^^^^^ HasOptional
  Property `b` is incompatible:
     12: var test3: HasOptional = { a: "hello", b: true }; // Error: boolean ~> number
                                                   ^^^^ boolean. This type is incompatible with
      5:   b?: number,
               ^^^^^^ number


Found 13 errors
