
=== Codemod annotate-exports ===

>>> ./a.js
// @flow

declare var cond: boolean;

module.exports = {
  f1: (): $TEMPORARY$string<"0"> | $TEMPORARY$string<"1"> => (cond ? "0" : "1"),
  f2: (): $TEMPORARY$string<"A0"> | $TEMPORARY$string<"A1"> => (cond ? "A0" : "A1"),
  f3: (): $TEMPORARY$string<"Aa"> | $TEMPORARY$string<"Bb"> => (cond ? "Aa" : "Bb"),
  f4: (): $TEMPORARY$string<"A_"> | $TEMPORARY$string<"B_"> => (cond ? "A_" : "B_"),

  f5: (): $TEMPORARY$string<"1/1/2000"> | $TEMPORARY$string<"1/1/2001"> => (cond ? "1/1/2000" : "1/1/2001"),
}

>>> Launching report...

Stats:
  Files changed:                            1
  Number of annotations added:              5
  Total size of annotations:               15
  Number of sig. ver. errors:               5
  Number of annotations required:           5
  Number of annotations skipped:            0

Errors:
  Missing annot./normalizer error:          0
  Validation Error:                         0
  Import Error:
    Loc source none:                        0
    Parsing heaps get ast error:            0
    Indeterminate module type:              0
    No matching export:                     0
  Serializer error:                         0
  Unsupported error kind:                   0

Warnings:
  Skipping arrow function:                  0
  Large type added:                         0
  Location unhandled:                       0
  Empty NoUpper:                            0
  Empty SomeKnownUpper:                     0


=== Autofix exports ===

>>> ./a.js
// @flow

declare var cond: boolean;

module.exports = {
  f1: (): string => (cond ? "0" : "1"),
  f2: (): string => (cond ? "A0" : "A1"),
  f3: (): string => (cond ? "Aa" : "Bb"),
  f4: (): string => (cond ? "A_" : "B_"),

  f5: (): string => (cond ? "1/1/2000" : "1/1/2001"),
}


=== Diff between codemod-ed & autofix-ed ===
>>> ./a.js
6,9c6,9
<   f1: (): $TEMPORARY$string<"0"> | $TEMPORARY$string<"1"> => (cond ? "0" : "1"),
<   f2: (): $TEMPORARY$string<"A0"> | $TEMPORARY$string<"A1"> => (cond ? "A0" : "A1"),
<   f3: (): $TEMPORARY$string<"Aa"> | $TEMPORARY$string<"Bb"> => (cond ? "Aa" : "Bb"),
<   f4: (): $TEMPORARY$string<"A_"> | $TEMPORARY$string<"B_"> => (cond ? "A_" : "B_"),
---
>   f1: (): string => (cond ? "0" : "1"),
>   f2: (): string => (cond ? "A0" : "A1"),
>   f3: (): string => (cond ? "Aa" : "Bb"),
>   f4: (): string => (cond ? "A_" : "B_"),
11c11
<   f5: (): $TEMPORARY$string<"1/1/2000"> | $TEMPORARY$string<"1/1/2001"> => (cond ? "1/1/2000" : "1/1/2001"),
---
>   f5: (): string => (cond ? "1/1/2000" : "1/1/2001"),

