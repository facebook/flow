Error ----------------------------------------------------------------------------------------------------- HOC.js:29:26

Cannot get `X.defaultProps` because property `defaultProps` is missing in `React.AbstractComponentStatics` [1].
[prop-missing]

   HOC.js:29:26
   29|   C.defaultProps = {...X.defaultProps};
                                ^^^^^^^^^^^^

References:
   HOC.js:22:6
   22|   X: React.AbstractComponent<Props, Instance>,
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- HOC.js:44:26

Cannot get `X.defaultProps` because property `defaultProps` is missing in `React.AbstractComponentStatics` [1].
[prop-missing]

   HOC.js:44:26
   44|   C.defaultProps = {...X.defaultProps, baz: 3};
                                ^^^^^^^^^^^^

References:
   HOC.js:37:6
   37|   X: React.AbstractComponent<Props, Instance>
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------ abstract_vs_abstract.js:22:10

Cannot return `x` because property `foo` is missing in object type [1] but exists in object type [2]. [prop-missing]

   abstract_vs_abstract.js:22:10
   22|   return x;
                ^

References:
   abstract_vs_abstract.js:21:28
   21| ): React$AbstractComponent<{}, Component, React$Node> { // Error missing props
                                  ^^ [1]
   abstract_vs_abstract.js:20:30
   20|   x: React$AbstractComponent<{foo: number}, Component, React$Node>,
                                    ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------ abstract_vs_abstract.js:28:10

Cannot return `x` because `Component` [1] is incompatible with `Subcomponent` [2]. [incompatible-return]

   abstract_vs_abstract.js:28:10
   28|   return x;
                ^

References:
   abstract_vs_abstract.js:26:34
   26|   x: React$AbstractComponent<{}, Component, React$Node>,
                                        ^^^^^^^^^ [1]
   abstract_vs_abstract.js:27:32
   27| ): React$AbstractComponent<{}, Subcomponent, React$Node> { // Error instance is covariant
                                      ^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- arity.js:11:19

Cannot use AbstractComponent [1] with more than 3 type arguments. [extra-type-arg]

   11| function test3(x: React$AbstractComponent<any,any,any,any>) { // Too many targs
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- arity.js:17:2

Cannot cast `C` to empty because `Component` [1] is incompatible with empty [2]. [incompatible-cast]

   arity.js:17:2
   17| (C: empty); // ERROR, Type sig correctly handles defaults
        ^

References:
   arity.js:16:18
   16| declare const C: Component;
                        ^^^^^^^^^ [1]
   arity.js:17:5
   17| (C: empty); // ERROR, Type sig correctly handles defaults
           ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- arity.js:18:2

Cannot cast `C` to AbstractComponent because mixed (default type argument for AbstractComponent's 2nd position) [1] is
incompatible with number [2]. [incompatible-cast]

   arity.js:18:2
   18| (C: React$AbstractComponent<empty, number>); // ERROR
        ^

References:
   signature_arity.js:1:25
    1| export type Component = React$AbstractComponent<any>; // OK
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   arity.js:18:36
   18| (C: React$AbstractComponent<empty, number>); // ERROR
                                          ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- arity.js:21:10

Cannot return `x` because `$Iterable` [1] does not render number [2]. [incompatible-return]

   arity.js:21:10
     21|   return x; // ERROR 2x
                  ^

References:
   <BUILTINS>/core.js:1765:21
   1765| type Iterable<+T> = $Iterable<T,void,void>;
                             ^^^^^^^^^^^^^^^^^^^^^^ [1]
   arity.js:20:107
     20| function defaultsErrorMessages(x: React$AbstractComponent<empty>): React$AbstractComponent<empty, number, number> {
                                                                                                                   ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- arity.js:21:10

Cannot return `x` because `React.Element` [1] is incompatible with number [2]. [incompatible-return]

   arity.js:21:10
    21|   return x; // ERROR 2x
                 ^

References:
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [1]
   arity.js:20:107
    20| function defaultsErrorMessages(x: React$AbstractComponent<empty>): React$AbstractComponent<empty, number, number> {
                                                                                                                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- arity.js:21:10

Cannot return `x` because `React.Portal` [1] does not render number [2]. [incompatible-return]

   arity.js:21:10
    21|   return x; // ERROR 2x
                 ^

References:
   <BUILTINS>/react.js:208:21
   208| declare opaque type React$Portal;
                            ^^^^^^^^^^^^ [1]
   arity.js:20:107
    20| function defaultsErrorMessages(x: React$AbstractComponent<empty>): React$AbstractComponent<empty, number, number> {
                                                                                                                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- arity.js:21:10

Cannot return `x` because `React.Node` (default type argument for AbstractComponent's 3rd position) [1] does not render
number [2]. [incompatible-return]

   arity.js:21:10
   21|   return x; // ERROR 2x
                ^

References:
   arity.js:20:35
   20| function defaultsErrorMessages(x: React$AbstractComponent<empty>): React$AbstractComponent<empty, number, number> {
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   arity.js:20:107
   20| function defaultsErrorMessages(x: React$AbstractComponent<empty>): React$AbstractComponent<empty, number, number> {
                                                                                                                 ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- arity.js:21:10

Cannot return `x` because mixed (default type argument for AbstractComponent's 2nd position) [1] is incompatible with
number [2]. [incompatible-return]

   arity.js:21:10
   21|   return x; // ERROR 2x
                ^

References:
   arity.js:20:35
   20| function defaultsErrorMessages(x: React$AbstractComponent<empty>): React$AbstractComponent<empty, number, number> {
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   arity.js:20:99
   20| function defaultsErrorMessages(x: React$AbstractComponent<empty>): React$AbstractComponent<empty, number, number> {
                                                                                                         ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:17:2

Cannot cast `ComponentNarrower` to AbstractComponent because property `bar` is missing in object type [1] but exists in
object type [2]. [prop-missing]

   classes_lower.js:17:2
   17| (ComponentNarrower: React$AbstractComponent<{}, any, any>); // Error missing foo and bar in config
        ^^^^^^^^^^^^^^^^^

References:
   classes_lower.js:17:45
   17| (ComponentNarrower: React$AbstractComponent<{}, any, any>); // Error missing foo and bar in config
                                                   ^^ [1]
   classes_lower.js:11:49
   11| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:17:2

Cannot cast `ComponentNarrower` to AbstractComponent because property `foo` is missing in object type [1] but exists in
object type [2]. [prop-missing]

   classes_lower.js:17:2
   17| (ComponentNarrower: React$AbstractComponent<{}, any, any>); // Error missing foo and bar in config
        ^^^^^^^^^^^^^^^^^

References:
   classes_lower.js:17:45
   17| (ComponentNarrower: React$AbstractComponent<{}, any, any>); // Error missing foo and bar in config
                                                   ^^ [1]
   classes_lower.js:11:49
   11| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:18:2

Cannot cast `ComponentNarrower` to AbstractComponent because property `bar` is missing in object type [1] but exists in
object type [2]. [prop-missing]

   classes_lower.js:18:2
   18| (ComponentNarrower: React$AbstractComponent<{+foo?: number}, any, any>); // Error missing bar in config
        ^^^^^^^^^^^^^^^^^

References:
   classes_lower.js:18:45
   18| (ComponentNarrower: React$AbstractComponent<{+foo?: number}, any, any>); // Error missing bar in config
                                                   ^^^^^^^^^^^^^^^ [1]
   classes_lower.js:11:49
   11| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:19:2

Cannot cast `ComponentNarrower` to AbstractComponent because `ComponentNarrower` [1] is incompatible with
`Component` [2]. [incompatible-cast]

   classes_lower.js:19:2
   19| (ComponentNarrower: React$AbstractComponent<any, Component, any>); // Error instance type is wrong
        ^^^^^^^^^^^^^^^^^

References:
   classes_lower.js:11:7
   11| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
             ^^^^^^^^^^^^^^^^^ [1]
   classes_lower.js:19:50
   19| (ComponentNarrower: React$AbstractComponent<any, Component, any>); // Error instance type is wrong
                                                        ^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:25:2

Cannot cast `Component` to AbstractComponent because `Component` [1] is incompatible with `Subclass` [2].
[incompatible-cast]

   classes_lower.js:25:2
   25| (Component: React$AbstractComponent<any, Subclass, any>); // Ok, Instance is covariant
        ^^^^^^^^^

References:
   classes_lower.js:5:7
    5| class Component extends React.Component<{}> {}
             ^^^^^^^^^ [1]
   classes_lower.js:25:42
   25| (Component: React$AbstractComponent<any, Subclass, any>); // Ok, Instance is covariant
                                                ^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:36:2

Cannot cast `SpecificRender` to AbstractComponent because number [1] is incompatible with string [2].
[incompatible-cast]

   classes_lower.js:36:2
   36| (SpecificRender: React$AbstractComponent<{}, SpecificRender, string>); // Error, number ~> string
        ^^^^^^^^^^^^^^

References:
   classes_lower.js:29:13
   29|   render(): number {
                   ^^^^^^ [1]
   classes_lower.js:36:62
   36| (SpecificRender: React$AbstractComponent<{}, SpecificRender, string>); // Error, number ~> string
                                                                    ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- config.js:13:2

Cannot cast `y` to `NotTheRightConfig` because property `baz` is missing in `Props` [1] but exists in
`NotTheRightConfig` [2]. [prop-missing]

   config.js:13:2
   13| (y: NotTheRightConfig); // Error, configs don't match
        ^

References:
   config.js:8:29
    8| declare var y: React$Config<Props, DefaultProps>;
                                   ^^^^^ [1]
   config.js:13:5
   13| (y: NotTheRightConfig); // Error, configs don't match
           ^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- config.js:13:2

Cannot cast `y` to `NotTheRightConfig` because property `qux` is missing in `Props` [1] but exists in
`NotTheRightConfig` [2]. [prop-missing]

   config.js:13:2
   13| (y: NotTheRightConfig); // Error, configs don't match
        ^

References:
   config.js:8:29
    8| declare var y: React$Config<Props, DefaultProps>;
                                   ^^^^^ [1]
   config.js:13:5
   13| (y: NotTheRightConfig); // Error, configs don't match
           ^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- config.js:16:2

Cannot cast `z` to config of React component because property `bar` is missing in `NotTheRightConfig` [1] but exists in
`Props` [2]. [prop-missing]

   config.js:16:2
   16| (z: React$Config<Props, DefaultProps>); // Error, configs don't match
        ^

References:
   config.js:15:16
   15| declare var z: NotTheRightConfig;
                      ^^^^^^^^^^^^^^^^^ [1]
   config.js:16:18
   16| (z: React$Config<Props, DefaultProps>); // Error, configs don't match
                        ^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- config.js:16:2

Cannot cast `z` to config of React component because property `foo` is missing in `NotTheRightConfig` [1] but exists in
`Props` [2]. [prop-missing]

   config.js:16:2
   16| (z: React$Config<Props, DefaultProps>); // Error, configs don't match
        ^

References:
   config.js:15:16
   15| declare var z: NotTheRightConfig;
                      ^^^^^^^^^^^^^^^^^ [1]
   config.js:16:18
   16| (z: React$Config<Props, DefaultProps>); // Error, configs don't match
                        ^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- config.js:39:13

Cannot create `WrappedComponent` element because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   config.js:39:13
   39| const _c = <WrappedComponent foo={3} />; // Error missing bar
                   ^^^^^^^^^^^^^^^^

References:
   config.js:39:12
   39| const _c = <WrappedComponent foo={3} />; // Error missing bar
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   config.js:30:41
   30| class Component extends React.Component<{foo: number, bar: number}> {
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- config.js:42:13

Cannot create `WrappedComponent2` element because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   config.js:42:13
   42| const _f = <WrappedComponent2 />; // Error missing bar
                   ^^^^^^^^^^^^^^^^^

References:
   config.js:42:12
   42| const _f = <WrappedComponent2 />; // Error missing bar
                  ^^^^^^^^^^^^^^^^^^^^^ [1]
   config.js:41:32
   41| const WrappedComponent2 = HOC2<{foo: number, bar: number}, {foo: number}, _>(Component);
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:17:13

Cannot create `C` element because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_element.js:17:13
   17| const _c = <C baz={4} />; // Error missing bar
                   ^

References:
   create_element.js:17:12
   17| const _c = <C baz={4} />; // Error missing bar
                  ^^^^^^^^^^^^^ [1]
   create_element.js:6:3
         v
    6|   {
    7|     +foo?: number,
    8|     +bar: number | string,
    9|     +baz: number,
   10|   },
         ^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:18:13

Cannot create `C` element because property `baz` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_element.js:18:13
   18| const _d = <C bar={3} />; // Error missing baz
                   ^

References:
   create_element.js:18:12
   18| const _d = <C bar={3} />; // Error missing baz
                  ^^^^^^^^^^^^^ [1]
   create_element.js:6:3
         v
    6|   {
    7|     +foo?: number,
    8|     +bar: number | string,
    9|     +baz: number,
   10|   },
         ^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:24:41

Cannot create `C` element because in property `ref`: [incompatible-type]
 - Either number [1] is incompatible with string [2] in property `current`.
 - Or a call signature declaring the expected parameter / return type is missing in object type [3] but exists in
   function type [4].

   create_element.js:24:41
    24| const _f = <C bar="string" baz={4} ref={refBad} />; // Error bad ref
                                                ^^^^^^

References:
   create_element.js:11:3
    11|   number,
          ^^^^^^ [1]
   create_element.js:23:32
    23| const refBad = React.createRef<string>();
                                       ^^^^^^ [2]
   <BUILTINS>/react.js:239:6
   239|   ): {|current: null | T|};
             ^^^^^^^^^^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:176:6
   176|   | ((React$ElementRef<ElementType> | null) => mixed)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error ------------------------------------------------------------------------------------------ create_element.js:27:49

Cannot create `C` element because in property `key`: [incompatible-type]
 - Either object literal [1] is incompatible with string [2].
 - Or object literal [1] is incompatible with number [3].

   create_element.js:27:49
    27| const _h = <C foo={3} bar="string" baz={4} key={{bad: 3}} />; // Error bad key
                                                        ^^^^^^^^ [1]

References:
   <BUILTINS>/react.js:168:26
   168| declare type React$Key = string | number;
                                 ^^^^^^ [2]
   <BUILTINS>/react.js:168:35
   168| declare type React$Key = string | number;
                                          ^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------- destructors.js:9:13

Cannot create `C` element because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   destructors.js:9:13
   9| const _b = <C baz={3} />; // Error, bar missing
                  ^

References:
   destructors.js:9:12
   9| const _b = <C baz={3} />; // Error, bar missing
                 ^^^^^^^^^^^^^ [1]
   destructors.js:5:40
   5| declare var C: React$AbstractComponent<{foo?: number, bar: number}, void, React$Node>;
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- destructors.js:14:2

Cannot cast `3` to `React.ElementRef` because number [1] is incompatible with undefined [2]. [incompatible-cast]

   destructors.js:14:2
   14| (3 : React$ElementRef<typeof C>); // Error, 3 is not void.
        ^ [1]

References:
   destructors.js:5:69
    5| declare var C: React$AbstractComponent<{foo?: number, bar: number}, void, React$Node>;
                                                                           ^^^^ [2]


Error ---------------------------------------------------------------------------------------------- destructors.js:21:2

Cannot cast object literal to `React.ElementConfig` because property `bar` is missing in object literal [1] but exists
in object type [2]. [prop-missing]

   destructors.js:21:2
   21| ({baz: 3}: React$ElementConfig<typeof C>); // Error, bar missing
        ^^^^^^^^ [1]

References:
   destructors.js:5:40
    5| declare var C: React$AbstractComponent<{foo?: number, bar: number}, void, React$Node>;
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ double_wrapped.js:23:13

Cannot create `WrappedBoth` element because property `bar` is missing in object type [1] but exists in props [2].
[prop-missing]

   double_wrapped.js:23:13
   23| const _a = <WrappedBoth foo={42} bar={43} />; // Error, extra prop bar
                   ^^^^^^^^^^^

References:
   double_wrapped.js:4:43
    4| class MyComponent extends React.Component<{| foo: number |}> {
                                                 ^^^^^^^^^^^^^^^^^ [1]
   double_wrapped.js:23:12
   23| const _a = <WrappedBoth foo={42} bar={43} />; // Error, extra prop bar
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ double_wrapped.js:24:13

Cannot create `WrappedBoth` element because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   double_wrapped.js:24:13
   24| const _b = <WrappedBoth />; // Error, missing prop foo
                   ^^^^^^^^^^^

References:
   double_wrapped.js:24:12
   24| const _b = <WrappedBoth />; // Error, missing prop foo
                  ^^^^^^^^^^^^^^^ [1]
   double_wrapped.js:4:43
    4| class MyComponent extends React.Component<{| foo: number |}> {
                                                 ^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------- error_positioning/error_positioning.js:30:36

`MockFn` [1] is not a React component. [not-a-component]

   error_positioning/error_positioning.js:30:36
   30| let RefetchContainer = HOC<any, _>(Component); // Error, mock is not a Component
                                          ^^^^^^^^^

References:
   error_positioning/error_positioning.js:23:4
   23| ): MockFn<TArguments, TReturn>
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- function_lower.js:7:2

Cannot cast `Component` to AbstractComponent because property `foo` is missing in props [1] but exists in `Props` [2].
[prop-missing]

   function_lower.js:7:2
   7| (Component: React$AbstractComponent<{}, void, React$Node>); // Error, missing foo
       ^^^^^^^^^

References:
   function_lower.js:7:37
   7| (Component: React$AbstractComponent<{}, void, React$Node>); // Error, missing foo
                                          ^^ [1]
   function_lower.js:4:23
   4| function Component(x: Props): React$Node { return null; }
                            ^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:10:2

Cannot cast `Component` to AbstractComponent because undefined [1] is incompatible with number [2]. [incompatible-cast]

   function_lower.js:10:2
   10| (Component: React$AbstractComponent<Props, number, React$Node>); // Error void ~> number
        ^^^^^^^^^ [1]

References:
   function_lower.js:10:44
   10| (Component: React$AbstractComponent<Props, number, React$Node>); // Error void ~> number
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:18:2

Cannot cast `ComponentWithDefaultProps` to AbstractComponent because property `bar` is missing in props [1] but exists
in `Props2` [2]. [prop-missing]

   function_lower.js:18:2
   18| (ComponentWithDefaultProps: React$AbstractComponent<{}, void, React$Node>); // Error, missing foo and bar
        ^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   function_lower.js:18:53
   18| (ComponentWithDefaultProps: React$AbstractComponent<{}, void, React$Node>); // Error, missing foo and bar
                                                           ^^ [1]
   function_lower.js:14:39
   14| function ComponentWithDefaultProps(x: Props2) { return null; }
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:20:2

Cannot cast `ComponentWithDefaultProps` to AbstractComponent because undefined [1] is incompatible with number [2].
[incompatible-cast]

   function_lower.js:20:2
   20| (ComponentWithDefaultProps: React$AbstractComponent<Config2, number, React$Node>); // Error, void ~> number
        ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   function_lower.js:20:62
   20| (ComponentWithDefaultProps: React$AbstractComponent<Config2, number, React$Node>); // Error, void ~> number
                                                                    ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ function_lower.js:25:10

All branches are incompatible: [incompatible-type]
 - Either class `NotAComponent` [1] is incompatible with `React.Element` [2].
 - Or class `NotAComponent` [1] is incompatible with `React.Portal` [3].
 - Or property `@@iterator` is missing in class `NotAComponent` [1] but exists in `$Iterable` [4].

   function_lower.js:25:10
   25|   return NotAComponent; // Error, not a component
                ^^^^^^^^^^^^^

References:
   function_lower.js:22:7
   22| class NotAComponent {};
             ^^^^^^^^^^^^^ [1]
   <BUILTINS>/react.js:21:5
   21|   | React$Element<any>
           ^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:22:5
   22|   | React$Portal
           ^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:23:5
   23|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [4]


Error ------------------------------------------------------------------------------------------- function_lower.js:28:2

Cannot cast `NotAFunctionComponent` to AbstractComponent because: [incompatible-cast]
 - Either class `NotAComponent` [1] is incompatible with `React.Element` [2].
 - Or class `NotAComponent` [1] is incompatible with `React.Portal` [3].
 - Or property `@@iterator` is missing in class `NotAComponent` [1] but exists in `$Iterable` [4].

   function_lower.js:28:2
   28| (NotAFunctionComponent: React$AbstractComponent<Props, void, React$Node>);
        ^^^^^^^^^^^^^^^^^^^^^

References:
   function_lower.js:22:7
   22| class NotAComponent {};
             ^^^^^^^^^^^^^ [1]
   <BUILTINS>/react.js:21:5
   21|   | React$Element<any>
           ^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:22:5
   22|   | React$Portal
           ^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:23:5
   23|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [4]


Error ------------------------------------------------------------------------------------------- function_lower.js:35:2

Cannot cast `SpecificRender` to AbstractComponent because number [1] is incompatible with string [2].
[incompatible-cast]

   function_lower.js:35:2
   35| (SpecificRender: React$AbstractComponent<{}, void, string>); // ERROR, number ~> string
        ^^^^^^^^^^^^^^

References:
   function_lower.js:30:28
   30| function SpecificRender(): number {
                                  ^^^^^^ [1]
   function_lower.js:35:52
   35| (SpecificRender: React$AbstractComponent<{}, void, string>); // ERROR, number ~> string
                                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- get_set_elem.js:6:3

Cannot assign `y` to `x[y]` because an index signature declaring the expected key / value type is missing in
`React.AbstractComponentStatics` [1]. [prop-missing]

   get_set_elem.js:6:3
     6| x[y] = y; // error: no indexed type
          ^

References:
   <BUILTINS>/react.js:108:47
                                                      v
   108| declare type React$AbstractComponentStatics = {
   109|   displayName?: ?string,
   110|   // This is only on function components, but trying to access name when
   111|   // displayName is undefined is a common pattern.
   112|   name?: ?string,
   113|   propTypes?: {[string] : any, ...},
   114|   ...
   115| };
        ^ [1]


Error -------------------------------------------------------------------------------------------- get_set_props.js:8:17

Cannot call `x.displayName.toString` because property `toString` is missing in null or undefined [1]. [incompatible-use]

   get_set_props.js:8:17
     8|   x.displayName.toString(); // Error maybe null or undefined
                        ^^^^^^^^

References:
   <BUILTINS>/react.js:109:17
   109|   displayName?: ?string,
                        ^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- get_set_props.js:8:17

Cannot call `x.displayName.toString` because property `toString` is missing in undefined [1]. [incompatible-use]

   get_set_props.js:8:17
     8|   x.displayName.toString(); // Error maybe null or undefined
                        ^^^^^^^^

References:
   <BUILTINS>/react.js:109:17
   109|   displayName?: ?string,
                        ^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- get_set_props.js:8:17

Cannot call `x.displayName.toString` because property `toString` is missing in null [1]. [incompatible-use]

   get_set_props.js:8:17
   8|   x.displayName.toString(); // Error maybe null or undefined
                      ^^^^^^^^

References:
   get_set_props.js:6:21
   6|     x.displayName = null;
                          ^^^^ [1]


Error --------------------------------------------------------------------------------------------- get_set_props.js:9:5

Cannot get `x.definitelyNotHere` because property `definitelyNotHere` is missing in
`React.AbstractComponentStatics` [1]. [prop-missing]

   get_set_props.js:9:5
     9|   x.definitelyNotHere.toString(); // Error missing prop
            ^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:108:47
                                                      v
   108| declare type React$AbstractComponentStatics = {
   109|   displayName?: ?string,
   110|   // This is only on function components, but trying to access name when
   111|   // displayName is undefined is a common pattern.
   112|   name?: ?string,
   113|   propTypes?: {[string] : any, ...},
   114|   ...
   115| };
        ^ [1]


Error ------------------------------------------------------------------------------------------- get_set_props.js:11:19

Cannot assign `3` to `x.displayName` because number [1] is incompatible with string [2]. [incompatible-type]

   get_set_props.js:11:19
    11|   x.displayName = 3; // Error num ~> string
                          ^ [1]

References:
   <BUILTINS>/react.js:109:18
   109|   displayName?: ?string,
                         ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- strict.js:4:12

Cannot create `Component` element because props [1] is incompatible with empty [2]. [incompatible-type]

   strict.js:4:12
     4| const c = <Component f = {3}/>;
                   ^^^^^^^^^

References:
   strict.js:4:11
     4| const c = <Component f = {3}/>;
                  ^^^^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/react.js:149:29
   149|   | React$AbstractComponent<empty, mixed, React$Node>;
                                    ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- strict.js:9:5

Cannot call `foo` with `ref` bound to `a` because `HTMLElement` [1] is incompatible with `React.Component` [2].
[incompatible-call]

   strict.js:9:5
     9| foo(ref);
            ^^^

References:
   <BUILTINS>/react-dom.js:677:13
   677|   instance: HTMLElement,
                    ^^^^^^^^^^^ [1]
   strict.js:7:26
     7| declare function foo(a: ?React$Component<any, any>): void;
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- strict.js:9:5

Cannot call `foo` with `ref` bound to `a` because mixed [1] is incompatible with `React.Component` [2].
[incompatible-call]

   strict.js:9:5
     9| foo(ref);
            ^^^

References:
   <BUILTINS>/react.js:149:36
   149|   | React$AbstractComponent<empty, mixed, React$Node>;
                                           ^^^^^ [1]
   strict.js:7:26
     7| declare function foo(a: ?React$Component<any, any>): void;
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- test_prop.js:5:9

Cannot get `x.notOnEitherSFCOrClass` because property `notOnEitherSFCOrClass` is missing in
`React.AbstractComponentStatics` [1]. [prop-missing]

   test_prop.js:5:9
     5|   if (x.notOnEitherSFCOrClass) {} // Error Not on any component
                ^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:108:47
                                                      v
   108| declare type React$AbstractComponentStatics = {
   109|   displayName?: ?string,
   110|   // This is only on function components, but trying to access name when
   111|   // displayName is undefined is a common pattern.
   112|   name?: ?string,
   113|   propTypes?: {[string] : any, ...},
   114|   ...
   115| };
        ^ [1]


Error -------------------------------------------------------------------------------------------- type_visitor.js:10:18

Cannot build a typed interface for this module. You should annotate the exports of this module with types. Cannot
determine the type of this call expression. Please provide an annotation, e.g., by adding a type cast around this
expression. [signature-verification-failure]

   10| module.exports = HOC(A); // Error, missing annotation only for Config
                        ^^^^^^



Found 52 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
