Error ----------------------------------------------------------------------------------------------------- HOC.js:26:26

Cannot get `x.defaultProps` because property `defaultProps` is missing in `React.AbstractComponentStatics` [1].
[prop-missing]

   HOC.js:26:26
   26|   C.defaultProps = {...x.defaultProps};
                                ^^^^^^^^^^^^

References:
   HOC.js:19:6
   19|   x: React.AbstractComponent<Props, Instance>,
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- HOC.js:41:26

Cannot get `x.defaultProps` because property `defaultProps` is missing in `React.AbstractComponentStatics` [1].
[prop-missing]

   HOC.js:41:26
   41|   C.defaultProps = {...x.defaultProps, baz: 3};
                                ^^^^^^^^^^^^

References:
   HOC.js:34:6
   34|   x: React.AbstractComponent<Props, Instance>
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------ abstract_vs_abstract.js:16:10

Cannot return `x` because property `foo` is missing in object type [1] but exists in object type [2]. [prop-missing]

   abstract_vs_abstract.js:16:10
   16|   return x;
                ^

References:
   abstract_vs_abstract.js:15:95
   15| function test3(x: React$AbstractComponent<{foo: number}, Component>): React$AbstractComponent<{}, Component> { // Error missing props
                                                                                                     ^^ [1]
   abstract_vs_abstract.js:15:43
   15| function test3(x: React$AbstractComponent<{foo: number}, Component>): React$AbstractComponent<{}, Component> { // Error missing props
                                                 ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------ abstract_vs_abstract.js:20:10

Cannot return `x` because `Component` [1] is incompatible with `Subcomponent` [2]. [incompatible-return]

   abstract_vs_abstract.js:20:10
   20|   return x;
                ^

References:
   abstract_vs_abstract.js:19:47
   19| function test4(x: React$AbstractComponent<{}, Component>): React$AbstractComponent<{}, Subcomponent> { // Error instance is covariant
                                                     ^^^^^^^^^ [1]
   abstract_vs_abstract.js:19:88
   19| function test4(x: React$AbstractComponent<{}, Component>): React$AbstractComponent<{}, Subcomponent> { // Error instance is covariant
                                                                                              ^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- arity.js:3:19

Cannot use type without exactly 2 type arguments. [nonpolymorphic-type-app]

   3| function test1(x: React$AbstractComponent<any>) { // Not enough targs
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error --------------------------------------------------------------------------------------------------- arity.js:11:19

Cannot use type without exactly 2 type arguments. [nonpolymorphic-type-app]

   11| function test3(x: React$AbstractComponent<any,any,any>) { // Too many targs
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------------------- classes_lower.js:15:21

Cannot use type without exactly 2 type arguments. [nonpolymorphic-type-app]

   15| (ComponentNarrower: React$AbstractComponent<any, any, any>);
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Error -------------------------------------------------------------------------------------------- classes_lower.js:17:2

Cannot cast `ComponentNarrower` to AbstractComponent because property `bar` is missing in object type [1] but exists in
object type [2]. [prop-missing]

   classes_lower.js:17:2
   17| (ComponentNarrower: React$AbstractComponent<{}, any>); // Error missing foo and bar in config
        ^^^^^^^^^^^^^^^^^

References:
   classes_lower.js:17:45
   17| (ComponentNarrower: React$AbstractComponent<{}, any>); // Error missing foo and bar in config
                                                   ^^ [1]
   classes_lower.js:11:49
   11| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:17:2

Cannot cast `ComponentNarrower` to AbstractComponent because property `foo` is missing in object type [1] but exists in
object type [2]. [prop-missing]

   classes_lower.js:17:2
   17| (ComponentNarrower: React$AbstractComponent<{}, any>); // Error missing foo and bar in config
        ^^^^^^^^^^^^^^^^^

References:
   classes_lower.js:17:45
   17| (ComponentNarrower: React$AbstractComponent<{}, any>); // Error missing foo and bar in config
                                                   ^^ [1]
   classes_lower.js:11:49
   11| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:18:2

Cannot cast `ComponentNarrower` to AbstractComponent because property `bar` is missing in object type [1] but exists in
object type [2]. [prop-missing]

   classes_lower.js:18:2
   18| (ComponentNarrower: React$AbstractComponent<{+foo?: number}, any>); // Error missing bar in config
        ^^^^^^^^^^^^^^^^^

References:
   classes_lower.js:18:45
   18| (ComponentNarrower: React$AbstractComponent<{+foo?: number}, any>); // Error missing bar in config
                                                   ^^^^^^^^^^^^^^^ [1]
   classes_lower.js:11:49
   11| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:19:2

Cannot cast `ComponentNarrower` to AbstractComponent because `ComponentNarrower` [1] is incompatible with
`Component` [2]. [incompatible-cast]

   classes_lower.js:19:2
   19| (ComponentNarrower: React$AbstractComponent<any, Component>); // Error instance type is wrong
        ^^^^^^^^^^^^^^^^^

References:
   classes_lower.js:11:7
   11| class ComponentNarrower extends React.Component<{foo: number, bar: number}> {
             ^^^^^^^^^^^^^^^^^ [1]
   classes_lower.js:19:50
   19| (ComponentNarrower: React$AbstractComponent<any, Component>); // Error instance type is wrong
                                                        ^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- classes_lower.js:25:2

Cannot cast `Component` to AbstractComponent because `Component` [1] is incompatible with `Subclass` [2].
[incompatible-cast]

   classes_lower.js:25:2
   25| (Component: React$AbstractComponent<any, Subclass>); // Ok, Instance is covariant
        ^^^^^^^^^

References:
   classes_lower.js:5:7
    5| class Component extends React.Component<{}> {}
             ^^^^^^^^^ [1]
   classes_lower.js:25:42
   25| (Component: React$AbstractComponent<any, Subclass>); // Ok, Instance is covariant
                                                ^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- config.js:13:2

Cannot cast `y` to `NotTheRightConfig` because property `baz` is missing in `Props` [1] but exists in
`NotTheRightConfig` [2]. [prop-missing]

   config.js:13:2
   13| (y: NotTheRightConfig); // Error, configs don't match
        ^

References:
   config.js:8:29
    8| declare var y: React$Config<Props, DefaultProps>;
                                   ^^^^^ [1]
   config.js:13:5
   13| (y: NotTheRightConfig); // Error, configs don't match
           ^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- config.js:13:2

Cannot cast `y` to `NotTheRightConfig` because property `qux` is missing in `Props` [1] but exists in
`NotTheRightConfig` [2]. [prop-missing]

   config.js:13:2
   13| (y: NotTheRightConfig); // Error, configs don't match
        ^

References:
   config.js:8:29
    8| declare var y: React$Config<Props, DefaultProps>;
                                   ^^^^^ [1]
   config.js:13:5
   13| (y: NotTheRightConfig); // Error, configs don't match
           ^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- config.js:16:2

Cannot cast `z` to config of React component because property `bar` is missing in `NotTheRightConfig` [1] but exists in
`Props` [2]. [prop-missing]

   config.js:16:2
   16| (z: React$Config<Props, DefaultProps>); // Error, configs don't match
        ^

References:
   config.js:15:16
   15| declare var z: NotTheRightConfig;
                      ^^^^^^^^^^^^^^^^^ [1]
   config.js:16:18
   16| (z: React$Config<Props, DefaultProps>); // Error, configs don't match
                        ^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- config.js:16:2

Cannot cast `z` to config of React component because property `foo` is missing in `NotTheRightConfig` [1] but exists in
`Props` [2]. [prop-missing]

   config.js:16:2
   16| (z: React$Config<Props, DefaultProps>); // Error, configs don't match
        ^

References:
   config.js:15:16
   15| declare var z: NotTheRightConfig;
                      ^^^^^^^^^^^^^^^^^ [1]
   config.js:16:18
   16| (z: React$Config<Props, DefaultProps>); // Error, configs don't match
                        ^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- config.js:39:13

Cannot create `WrappedComponent` element because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   config.js:39:13
   39| const _c = <WrappedComponent foo={3} />; // Error missing bar
                   ^^^^^^^^^^^^^^^^

References:
   config.js:39:12
   39| const _c = <WrappedComponent foo={3} />; // Error missing bar
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   config.js:30:41
   30| class Component extends React.Component<{foo: number, bar: number}> {
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:9:13

Cannot create `C` element because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_element.js:9:13
   9| const _c = <C baz={4} />; // Error missing bar
                  ^

References:
   create_element.js:9:12
   9| const _c = <C baz={4} />; // Error missing bar
                 ^^^^^^^^^^^^^ [1]
   create_element.js:5:40
   5| declare var C: React$AbstractComponent<{+foo?: number, +bar: number | string, +baz: number}, number>;
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:10:13

Cannot create `C` element because property `baz` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_element.js:10:13
   10| const _d = <C bar={3} />; // Error missing baz
                   ^

References:
   create_element.js:10:12
   10| const _d = <C bar={3} />; // Error missing baz
                  ^^^^^^^^^^^^^ [1]
   create_element.js:5:40
    5| declare var C: React$AbstractComponent<{+foo?: number, +bar: number | string, +baz: number}, number>;
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:16:41

Cannot create `C` element because in property `ref`: [incompatible-type]
 - Either number [1] is incompatible with string [2] in property `current`.
 - Or a call signature declaring the expected parameter / return type is missing in object type [3] but exists in
   function type [4].

   create_element.js:16:41
    16| const _f = <C bar="string" baz={4} ref={refBad} />; // Error bad ref
                                                ^^^^^^

References:
   create_element.js:5:94
     5| declare var C: React$AbstractComponent<{+foo?: number, +bar: number | string, +baz: number}, number>;
                                                                                                     ^^^^^^ [1]
   create_element.js:15:32
    15| const refBad = React.createRef<string>();
                                       ^^^^^^ [2]
   <BUILTINS>/react.js:264:6
   264|   ): {|current: null | T|};
             ^^^^^^^^^^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:213:6
   213|   | ((React$ElementRef<ElementType> | null) => mixed)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error ------------------------------------------------------------------------------------------ create_element.js:19:49

Cannot create `C` element because in property `key`: [incompatible-type]
 - Either object literal [1] is incompatible with string [2].
 - Or object literal [1] is incompatible with number [3].

   create_element.js:19:49
    19| const _h = <C foo={3} bar="string" baz={4} key={{bad: 3}} />; // Error bad key
                                                        ^^^^^^^^ [1]

References:
   <BUILTINS>/react.js:206:26
   206| declare type React$Key = string | number;
                                 ^^^^^^ [2]
   <BUILTINS>/react.js:206:35
   206| declare type React$Key = string | number;
                                          ^^^^^^ [3]


Error ---------------------------------------------------------------------------------------------- destructors.js:9:13

Cannot create `C` element because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   destructors.js:9:13
   9| const _b = <C baz={3} />; // Error, bar missing
                  ^

References:
   destructors.js:9:12
   9| const _b = <C baz={3} />; // Error, bar missing
                 ^^^^^^^^^^^^^ [1]
   destructors.js:5:40
   5| declare var C: React$AbstractComponent<{foo?: number, bar: number}, void>;
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- destructors.js:14:2

Cannot cast `3` to `React.ElementRef` because number [1] is incompatible with undefined [2]. [incompatible-cast]

   destructors.js:14:2
   14| (3 : React$ElementRef<typeof C>); // Error, 3 is not void.
        ^ [1]

References:
   destructors.js:5:69
    5| declare var C: React$AbstractComponent<{foo?: number, bar: number}, void>;
                                                                           ^^^^ [2]


Error ---------------------------------------------------------------------------------------------- destructors.js:21:2

Cannot cast object literal to `React.ElementConfig` because property `bar` is missing in object literal [1] but exists
in object type [2]. [prop-missing]

   destructors.js:21:2
   21| ({baz: 3}: React$ElementConfig<typeof C>); // Error, bar missing
        ^^^^^^^^ [1]

References:
   destructors.js:5:40
    5| declare var C: React$AbstractComponent<{foo?: number, bar: number}, void>;
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ double_wrapped.js:22:29

Cannot call `wrapper` with `wrapper2(...)` bound to `base` because property `bar` is missing in object type [1] but
exists in props [2]. [prop-missing]

   double_wrapped.js:22:29
   22| const WrappedBoth = wrapper(wrapper2(MyComponent)); // Errors-- props incompatible with component
                                   ^^^^^^^^^^^^^^^^^^^^^

References:
   double_wrapped.js:4:43
    4| class MyComponent extends React.Component<{| foo: number |}> {
                                                 ^^^^^^^^^^^^^^^^^ [1]
   double_wrapped.js:23:12
   23| const _a = <WrappedBoth foo={42} bar={43} />; // Error, extra prop bar
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ double_wrapped.js:22:29

Cannot call `wrapper` with `wrapper2(...)` bound to `base` because property `foo` is missing in props [1] but exists in
object type [2]. [prop-missing]

   double_wrapped.js:22:29
   22| const WrappedBoth = wrapper(wrapper2(MyComponent)); // Errors-- props incompatible with component
                                   ^^^^^^^^^^^^^^^^^^^^^

References:
   double_wrapped.js:24:12
   24| const _b = <WrappedBoth />; // Error, missing prop foo
                  ^^^^^^^^^^^^^^^ [1]
   double_wrapped.js:4:43
    4| class MyComponent extends React.Component<{| foo: number |}> {
                                                 ^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------- error_positioning/error_positioning.js:31:28

`MockFn` [1] is not a React component. [not-a-component]

   error_positioning/error_positioning.js:31:28
   31| let RefetchContainer = HOC(Component); // Error, mock is not a Component
                                  ^^^^^^^^^

References:
   error_positioning/error_positioning.js:24:4
   24| ): MockFn<TArguments, TReturn>
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- function_lower.js:7:2

Cannot cast `Component` to AbstractComponent because property `foo` is missing in props [1] but exists in `Props` [2].
[prop-missing]

   function_lower.js:7:2
   7| (Component: React$AbstractComponent<{}, void>); // Error, missing foo
       ^^^^^^^^^

References:
   function_lower.js:7:37
   7| (Component: React$AbstractComponent<{}, void>); // Error, missing foo
                                          ^^ [1]
   function_lower.js:4:23
   4| function Component(x: Props): React$Node { return null; }
                            ^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:10:2

Cannot cast `Component` to AbstractComponent because undefined [1] is incompatible with number [2]. [incompatible-cast]

   function_lower.js:10:2
   10| (Component: React$AbstractComponent<Props, number>); // Error void ~> number
        ^^^^^^^^^ [1]

References:
   function_lower.js:10:44
   10| (Component: React$AbstractComponent<Props, number>); // Error void ~> number
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:18:2

Cannot cast `ComponentWithDefaultProps` to AbstractComponent because property `bar` is missing in props [1] but exists
in `Props2` [2]. [prop-missing]

   function_lower.js:18:2
   18| (ComponentWithDefaultProps: React$AbstractComponent<{}, void>); // Error, missing foo and bar
        ^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   function_lower.js:18:53
   18| (ComponentWithDefaultProps: React$AbstractComponent<{}, void>); // Error, missing foo and bar
                                                           ^^ [1]
   function_lower.js:14:39
   14| function ComponentWithDefaultProps(x: Props2) { return null; }
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- function_lower.js:20:2

Cannot cast `ComponentWithDefaultProps` to AbstractComponent because undefined [1] is incompatible with number [2].
[incompatible-cast]

   function_lower.js:20:2
   20| (ComponentWithDefaultProps: React$AbstractComponent<Config2, number>); // Error, void ~> number
        ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   function_lower.js:20:62
   20| (ComponentWithDefaultProps: React$AbstractComponent<Config2, number>); // Error, void ~> number
                                                                    ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ function_lower.js:25:10

Cannot return `NotAComponent` because: [incompatible-return]
 - Either property `name` is missing in object type [1] but exists in statics of `NotAComponent` [2].
 - Or class `NotAComponent` [2] is incompatible with `React.Portal` [3].
 - Or property `@@iterator` is missing in class `NotAComponent` [2] but exists in `$Iterable` [4].

   function_lower.js:25:10
   25|   return NotAComponent; // Error, not a component
                ^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:18:5
   18|   | React$Element<any>
           ^^^^^^^^^^^^^^^^^^ [1]
   function_lower.js:22:7
   22| class NotAComponent {};
             ^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:19:5
   19|   | React$Portal
           ^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:20:5
   20|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [4]


Error ------------------------------------------------------------------------------------------- function_lower.js:28:2

Cannot cast `NotAFunctionComponent` to AbstractComponent because: [incompatible-cast]
 - Either property `name` is missing in object type [1] but exists in statics of `NotAComponent` [2].
 - Or class `NotAComponent` [2] is incompatible with `React.Portal` [3].
 - Or property `@@iterator` is missing in class `NotAComponent` [2] but exists in `$Iterable` [4].

   function_lower.js:28:2
   28| (NotAFunctionComponent: React$AbstractComponent<Props, void>);
        ^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:18:5
   18|   | React$Element<any>
           ^^^^^^^^^^^^^^^^^^ [1]
   function_lower.js:22:7
   22| class NotAComponent {};
             ^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:19:5
   19|   | React$Portal
           ^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:20:5
   20|   | Iterable<?React$Node>;
           ^^^^^^^^^^^^^^^^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- get_set_props.js:8:17

Cannot call `x.displayName.toString` because property `toString` is missing in null or undefined [1]. [incompatible-use]

   get_set_props.js:8:17
     8|   x.displayName.toString(); // Error maybe null or undefined
                        ^^^^^^^^

References:
   <BUILTINS>/react.js:146:17
   146|   displayName?: ?string,
                        ^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- get_set_props.js:8:17

Cannot call `x.displayName.toString` because property `toString` is missing in undefined [1]. [incompatible-use]

   get_set_props.js:8:17
     8|   x.displayName.toString(); // Error maybe null or undefined
                        ^^^^^^^^

References:
   <BUILTINS>/react.js:146:17
   146|   displayName?: ?string,
                        ^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- get_set_props.js:8:17

Cannot call `x.displayName.toString` because property `toString` is missing in null [1]. [incompatible-use]

   get_set_props.js:8:17
   8|   x.displayName.toString(); // Error maybe null or undefined
                      ^^^^^^^^

References:
   get_set_props.js:6:21
   6|     x.displayName = null;
                          ^^^^ [1]


Error --------------------------------------------------------------------------------------------- get_set_props.js:9:5

Cannot get `x.definitelyNotHere` because property `definitelyNotHere` is missing in
`React.AbstractComponentStatics` [1]. [prop-missing]

   get_set_props.js:9:5
     9|   x.definitelyNotHere.toString(); // Error missing prop
            ^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:145:47
                                                      v
   145| declare type React$AbstractComponentStatics = {
   146|   displayName?: ?string,
   147|   // This is only on function components, but trying to access name when
   148|   // displayName is undefined is a common pattern.
   149|   name?: ?string,
   150|   propTypes?: {[string] : any, ...},
   151|   ...
   152| };
        ^ [1]


Error ------------------------------------------------------------------------------------------- get_set_props.js:11:19

Cannot assign `3` to `x.displayName` because number [1] is incompatible with string [2]. [incompatible-type]

   get_set_props.js:11:19
    11|   x.displayName = 3; // Error num ~> string
                          ^ [1]

References:
   <BUILTINS>/react.js:146:18
   146|   displayName?: ?string,
                         ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- no_annot_fun.js:3:35

Cannot get `props.LOL` because property `LOL` is missing in props [1]. [prop-missing]

   no_annot_fun.js:3:35
   3| function Component(props) { props.LOL ; return null} // Error, missing LOL
                                        ^^^

References:
   no_annot_fun.js:4:37
   4| (Component: React$AbstractComponent<{}, void>);
                                          ^^ [1]


Error --------------------------------------------------------------------------------------------------- strict.js:4:12

Cannot create `Component` element because props [1] is incompatible with empty [2]. [incompatible-type]

   strict.js:4:12
     4| const c = <Component f = {3}/>;
                   ^^^^^^^^^

References:
   strict.js:4:11
     4| const c = <Component f = {3}/>;
                  ^^^^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/react.js:187:29
   187|   | React$AbstractComponent<empty, mixed>;
                                    ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- strict.js:9:5

Cannot call `foo` with `ref` bound to `a` because `HTMLElement` [1] is incompatible with `React.Component` [2].
[incompatible-call]

   strict.js:9:5
     9| foo(ref);
            ^^^

References:
   <BUILTINS>/react-dom.js:675:13
   675|   instance: HTMLElement,
                    ^^^^^^^^^^^ [1]
   strict.js:7:26
     7| declare function foo(a: ?React$Component<any, any>): void;
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- strict.js:9:5

Cannot call `foo` with `ref` bound to `a` because mixed [1] is incompatible with `React.Component` [2].
[incompatible-call]

   strict.js:9:5
     9| foo(ref);
            ^^^

References:
   <BUILTINS>/react.js:187:36
   187|   | React$AbstractComponent<empty, mixed>;
                                           ^^^^^ [1]
   strict.js:7:26
     7| declare function foo(a: ?React$Component<any, any>): void;
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- test_prop.js:5:7

Property `notOnEitherSFCOrClass` is missing in `React.AbstractComponentStatics` [1]. [prop-missing]

   test_prop.js:5:7
     5|   if (x.notOnEitherSFCOrClass) {} // Error Not on any component
              ^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:145:47
                                                      v
   145| declare type React$AbstractComponentStatics = {
   146|   displayName?: ?string,
   147|   // This is only on function components, but trying to access name when
   148|   // displayName is undefined is a common pattern.
   149|   name?: ?string,
   150|   propTypes?: {[string] : any, ...},
   151|   ...
   152| };
        ^ [1]


Error -------------------------------------------------------------------------------------------- type_visitor.js:10:18

Cannot build a typed interface for this module. You should annotate the exports of this module with types. Cannot
determine the type of this call expression. Please provide an annotation, e.g., by adding a type cast around this
expression. [signature-verification-failure]

   10| module.exports = HOC(A); // Error, missing annotation only for Config
                        ^^^^^^



Found 44 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
