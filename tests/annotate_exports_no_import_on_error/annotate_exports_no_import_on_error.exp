
=== Codemod annotate-exports ===

>>> ./main-2.js
// @flow

import type {D} from "./lib-2";import { foo, bar } from "./lib-2";

module.exports._1 = foo(); // error: C is not exported
module.exports._2 = 0 < 1 ? foo() : bar(); // error: C is not exported, even though D is okay
module.exports._3 = (bar(): D); // okay

>>> Launching report...

Stats:
  Files changed:                            1
  Number of annotations added:              1
  Total size of annotations:                1
  Number of sig. ver. errors:               4
  Number of annotations required:           4
  Number of annotations skipped:            0

Errors:
  Missing annot./normalizer error:          0
  Validation Error:                         0
  Import Error:
    Loc source none:                        0
    Parsing heaps get ast error:            0
    Indeterminate module type:              0
    No matching export:                     3
  Serializer error:                         0
  Unsupported error kind:                   0

Warnings:
  Skipping arrow function:                  0
  Large type added:                         0
  Location unhandled:                       0
  Empty NoUpper:                            0
  Empty SomeKnownUpper:                     0


=== Autofix exports ===

>>> ./main-1.js
// @flow

import { foo } from "./lib-1";

module.exports = (foo(): C); // error: C is not exported

>>> ./main-2.js
// @flow

import type {D} from "./lib-2";import { foo, bar } from "./lib-2";

module.exports._1 = (foo(): C); // error: C is not exported
module.exports._2 = (0 < 1 ? foo() : bar(): C | D); // error: C is not exported, even though D is okay
module.exports._3 = (bar(): D); // okay


=== Diff between codemod-ed & autofix-ed ===
>>> ./main-1.js
5c5
< module.exports = foo(); // error: C is not exported
---
> module.exports = (foo(): C); // error: C is not exported

>>> ./main-2.js
5,6c5,6
< module.exports._1 = foo(); // error: C is not exported
< module.exports._2 = 0 < 1 ? foo() : bar(); // error: C is not exported, even though D is okay
---
> module.exports._1 = (foo(): C); // error: C is not exported
> module.exports._2 = (0 < 1 ? foo() : bar(): C | D); // error: C is not exported, even though D is okay

