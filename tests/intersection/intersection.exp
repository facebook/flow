Error: pred.js:17
 17:     || options.writableObjectMode; // error, undefined ~> boolean
            ^^^^^^^^^^^^^^^^^^^^^^^^^^ undefined. This type is incompatible with the expected return type of
 14: function hasObjectMode_bad(options: DuplexStreamOptions): boolean {
                                                               ^^^^^^^ boolean

Error: proper_blaming.js:9
  9: x.nope; // error here
       ^^^^ property `nope`. Property cannot be accessed on possibly null value
  9: x.nope; // error here
     ^ null

Error: test_obj.js:29
 29: var e: E = c; // error
                ^ intersection. This type is incompatible with
 29: var e: E = c; // error
            ^ E
  Member 1:
   33: type C = { [key: string]: number } & { [key: string]: number };
                ^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: lib/lib.js:33
  Error:
   29: var e: E = c; // error
                  ^ c
   29: var e: E = c; // error
              ^ E. This type is incompatible with
   33: type C = { [key: string]: number } & { [key: string]: number };
                ^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: lib/lib.js:33
    Indexable signature is incompatible:
       33: type C = { [key: string]: number } & { [key: string]: number };
                                     ^^^^^^ number. This type is incompatible with. See lib: lib/lib.js:33
       28: type E = { [key: string]: string };
                                     ^^^^^^ string
  Member 2:
   33: type C = { [key: string]: number } & { [key: string]: number };
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: lib/lib.js:33
  Error:
   29: var e: E = c; // error
                  ^ c
   29: var e: E = c; // error
              ^ E. This type is incompatible with
   33: type C = { [key: string]: number } & { [key: string]: number };
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: lib/lib.js:33
    Indexable signature is incompatible:
       33: type C = { [key: string]: number } & { [key: string]: number };
                                                                 ^^^^^^ number. This type is incompatible with. See lib: lib/lib.js:33
       28: type E = { [key: string]: string };
                                     ^^^^^^ string


Found 3 errors
