intersection2.js:38
 38:   a.yaM(); //NG
       ^^^^^^^ call of method `yaM`. Method cannot be called on any member of intersection type
 38:   a.yaM(); //NG
       ^ intersection
  Member 1:
   28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                                        ^ A
  Error:
   38:   a.yaM(); //NG
           ^^^ property `yaM`. Property not found in
   28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                                        ^ A
  Member 2:
   28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                             ^ I
  Error:
   38:   a.yaM(); //NG
           ^^^ property `yaM`. Property not found in
   28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                             ^ I

intersection2.js:39
 39:   a.constructor.yaStaticM(); //NG
       ^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `yaStaticM`. Method cannot be called on any member of intersection type
 39:   a.constructor.yaStaticM(); //NG
       ^ intersection
  Member 1:
   28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                                        ^ class type: A
  Error:
   39:   a.constructor.yaStaticM(); //NG
                       ^^^^^^^^^ property `yaStaticM`. Property not found in
   28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                                        ^ statics of A
  Member 2:
   28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                             ^ class type: I
  Error:
   39:   a.constructor.yaStaticM(); //NG
                       ^^^^^^^^^ property `yaStaticM`. Property not found in
   28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                             ^ statics of I

intersection2.js:48
 48: gn(JLess); //NG: False positive: Where's the "missing `yaStaticM` property" error? (Probably tied to the silent `J` dropping--wait for hard spec on that behavior)
     ^^^^^^^^^ function call
 28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                                           ^ property `yaM` of J. Property not found in
 48: gn(JLess); //NG: False positive: Where's the "missing `yaStaticM` property" error? (Probably tied to the silent `J` dropping--wait for hard spec on that behavior)
        ^^^^^ class type: JLess

intersection2.js:57
 57: fn(full);
     ^^^^^^^^ function call
 57: fn(full);
        ^^^^ Full. This type is incompatible with
 11: function fn(a: I & A): void {
                        ^ A

intersection2.js:58
 58: gn(Full);
     ^^^^^^^^ function call
 28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                                           ^ property `yaM` of J. Property not found in
 58: gn(Full);
        ^^^^ class type: Full

intersection2.js:58
 58: gn(Full);
     ^^^^^^^^ function call
 58: gn(Full);
        ^^^^ Full. This type is incompatible with
 28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                                      ^ A

intersection2.js:68
 68: gn(AlmostJ); //NG: False positive: Where's the "missing `yaStaticM` property" error? ...
     ^^^^^^^^^^^ function call
 28: function gn(Ap: Class<I> & Class<A> & J): void { // Forgot `Class<.>` on `J`
                                           ^ property `yaM` of J. Property not found in
 68: gn(AlmostJ); //NG: False positive: Where's the "missing `yaStaticM` property" error? ...
        ^^^^^^^ class type: AlmostJ

test_obj.js:29
 29: var e: E = c; // error
                ^ intersection. This type is incompatible with
 29: var e: E = c; // error
            ^ object type
  Member 1:
   33: type C = { [key: string]: number } & { [key: string]: number };
                ^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: lib/lib.js:33
  Error:
   28: type E = { [key: string]: string };
                                 ^^^^^^ string. This type is incompatible with
   33: type C = { [key: string]: number } & { [key: string]: number };
                                 ^^^^^^ number. See lib: lib/lib.js:33
  Member 2:
   33: type C = { [key: string]: number } & { [key: string]: number };
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: lib/lib.js:33
  Error:
   28: type E = { [key: string]: string };
                                 ^^^^^^ string. This type is incompatible with
   33: type C = { [key: string]: number } & { [key: string]: number };
                                                             ^^^^^^ number. See lib: lib/lib.js:33


Found 8 errors
