issue-198.js:1
  1: var p = new Promise(function(resolve, reject) {
             ^ call of method `then`
  5:         return num.toFixed();
                    ^^^^^^^^^^^^^ string. This type is incompatible with
union: type application of identifier `Promise` | type parameter `U` of call of method `then`. See lib: core.js:483
  Member 1:
  type application of identifier `Promise`. See lib: core.js:483
  Error:
    5:         return num.toFixed();
                      ^^^^^^^^^^^^^ string. This type is incompatible with
  Promise. See lib: core.js:483
  Member 2:
    1: var p = new Promise(function(resolve, reject) {
               ^ type parameter `U` of call of method `then`
  Error:
    9:         return str.toFixed();
                          ^^^^^^^ property `toFixed`. Property not found in
    9:         return str.toFixed();
                      ^^^ String

issue-324.js:8
  8: foostr = barstr;
              ^^^^^^ Bar. This type is incompatible with
  5: var foostr: Foo | string = new Foo();
                 ^^^^^^^^^^^^ union: Foo | string
  Member 1:
    5: var foostr: Foo | string = new Foo();
                   ^^^ Foo
  Error:
    8: foostr = barstr;
                ^^^^^^ Bar. This type is incompatible with
    5: var foostr: Foo | string = new Foo();
                   ^^^ Foo
  Member 2:
    5: var foostr: Foo | string = new Foo();
                         ^^^^^^ string
  Error:
    8: foostr = barstr;
                ^^^^^^ Bar. This type is incompatible with
    5: var foostr: Foo | string = new Foo();
                         ^^^^^^ string

union.js:2
  2: bar(0);
         ^ number. This type is incompatible with
  1: function bar(x: Document | string): void { }
                     ^^^^^^^^^^^^^^^^^ union: Document | string
  Member 1:
    1: function bar(x: Document | string): void { }
                       ^^^^^^^^ Document
  Error:
    2: bar(0);
           ^ number. This type is incompatible with
    1: function bar(x: Document | string): void { }
                       ^^^^^^^^ Document
  Member 2:
    1: function bar(x: Document | string): void { }
                                  ^^^^^^ string
  Error:
    2: bar(0);
           ^ number. This type is incompatible with
    1: function bar(x: Document | string): void { }
                                  ^^^^^^ string

union.js:8
  8:   var c:C = new E(); // error, since E could be D, and D is not a subtype of C
                 ^^^^^^^ D. This type is incompatible with
  8:   var c:C = new E(); // error, since E could be D, and D is not a subtype of C
             ^ C

union.js:9
  9:   function qux(e: E) { } // this annotation is an error: is it C, or is it D?
                       ^ C. This type is incompatible with
  9:   function qux(e: E) { } // this annotation is an error: is it C, or is it D?
                       ^ D

union.js:9
  9:   function qux(e: E) { } // this annotation is an error: is it C, or is it D?
                       ^ D. This type is incompatible with
  9:   function qux(e: E) { } // this annotation is an error: is it C, or is it D?
                       ^ C

yuge.js:23
 23:     ("": ErrorCode);  // also, error pos omits this line completely
          ^^ string. This type is incompatible with
 23:     ("": ErrorCode);  // also, error pos omits this line completely
              ^^^^^^^^^ number enum


Found 7 errors
