
=== Codemod annotate-exports ===

>>> ./a.js
// @flow

class C {}
// XYZXYZ
export default class {
  array: Array<any> = [];
  num: number = 1;
}

>>> ./b.js
// @flow

class C {
  m(): number {
    return 1;
  }
}
module.exports = C;

>>> ./c.js
// @flow

class A {
  f: ((x: string) => string) = (x: string) => x;
}

module.exports = {
  a: A,
  b: (x: string): string => x,
};

>>> Launching report...

Stats:
  Files changed:                            3
  Number of annotations added:              5
  Total size of annotations:                9
  Number of sig. ver. errors:               5
  Number of annotations required:           5
  Number of annotations skipped:            0

Errors:
  Missing annot./normalizer error:          0
  Validation Error:                         0
  Import Error:
    Loc source none:                        0
    Parsing heaps get ast error:            0
    Indeterminate module type:              0
    No matching export:                     0
  Serializer error:                         0
  Unsupported error kind:                   0

Warnings:
  Skipping arrow function:                  0
  Large type added:                         0
  Location unhandled:                       0
  Empty NoUpper:                            1
  Empty SomeKnownUpper:                     0


=== Autofix exports ===

>>> ./a.js
// @flow

class C {}
// XYZXYZ
export default class {
  array: Array<empty> = [];
  num: number = 1;
}

>>> ./b.js
// @flow

class C {
  m(): number {
    return 1;
  }
}
module.exports = C;

>>> ./c.js
// @flow

class A {
  f: ((x: string) => string) = (x: string) => x;
}

module.exports = {
  a: A,
  b: (x: string): string => x,
};


=== Diff between codemod-ed & autofix-ed ===
>>> ./a.js
6c6
<   array: Array<any> = [];
---
>   array: Array<empty> = [];

