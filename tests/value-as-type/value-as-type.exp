Error --------------------------------------------------------------------------------------------------- test1.js:16:27

Cannot use `HocChild` as a type. A name can be used as a type only if it refers to a type, interface, class, or enum
definition. To get the type of a non-class value, use `typeof`.

   16|   _handleChild = (child: ?HocChild) => {};
                                 ^^^^^^^^


Error ----------------------------------------------------------------------------------------------------- test2.js:4:5

Cannot use `n` as a type. A name can be used as a type only if it refers to a type, interface, class, or enum
definition. To get the type of a non-class value, use `typeof`.

   4| (0: n);
          ^


Error ---------------------------------------------------------------------------------------------------- test2.js:5:13

Cannot use `n` as a type. A name can be used as a type only if it refers to a type, interface, class, or enum
definition. To get the type of a non-class value, use `typeof`.

   5| ([0]: Array<n>);
                  ^


Error ---------------------------------------------------------------------------------------------------- test3.js:4:10

Cannot use `n` as a type. A name can be used as a type only if it refers to a type, interface, class, or enum
definition. To get the type of a non-class value, use `typeof`.

   4| type T = n;
               ^


Error ---------------------------------------------------------------------------------------------------- test3.js:5:19

Cannot use `n` as a type. A name can be used as a type only if it refers to a type, interface, class, or enum
definition. To get the type of a non-class value, use `typeof`.

   5| opaque type OT1 = n;
                        ^


Error ---------------------------------------------------------------------------------------------------- test3.js:6:18

Cannot use `n` as a type. A name can be used as a type only if it refers to a type, interface, class, or enum
definition. To get the type of a non-class value, use `typeof`.

   6| opaque type OT2: n = 0;
                       ^


Error ---------------------------------------------------------------------------------------------------- test3.js:7:21

Cannot use number as a type. A name can be used as a type only if it refers to a type, interface, class, or enum
definition. To get the type of a non-class value, use `typeof`.

   7| interface I extends n { }
                          ^


Error ---------------------------------------------------------------------------------------------------- test3.js:8:20

Cannot use number as a type. A name can be used as a type only if it refers to a type, interface, class, or enum
definition. To get the type of a non-class value, use `typeof`.

   8| class C implements n { }
                         ^


Error ---------------------------------------------------------------------------------------------------- test4.js:7:12

Cannot use function as a type. A name can be used as a type only if it refers to a type, interface, class, or enum
definition. To get the type of a non-class value, use `typeof`.

   7| type Foo = connect<number>;
                 ^^^^^^^



Found 9 errors
