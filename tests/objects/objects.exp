conversion.js:10
 10: (Object(undefined): Number); // error
      ^^^^^^^^^^^^^^^^^ function call. Function cannot be called on any member of intersection type
 10: (Object(undefined): Number); // error
      ^^^^^^^^^^^^^^^^^ intersection
  Member 1:
  function type. See lib: core.js:28
  Error:
   10: (Object(undefined): Number); // error
        ^^^^^^^^^^^^^^^^^ object type. This type is incompatible with
   10: (Object(undefined): Number); // error
                           ^^^^^^ Number
  Member 2:
  function type. See lib: core.js:29
  Error:
   10: (Object(undefined): Number); // error
               ^^^^^^^^^ undefined. This type is incompatible with
  boolean. See lib: core.js:29
  Member 3:
  function type. See lib: core.js:30
  Error:
   10: (Object(undefined): Number); // error
               ^^^^^^^^^ undefined. This type is incompatible with
  number. See lib: core.js:30
  Member 4:
  function type. See lib: core.js:31
  Error:
   10: (Object(undefined): Number); // error
               ^^^^^^^^^ undefined. This type is incompatible with
  string. See lib: core.js:31
  Member 5:
  polymorphic type: function type. See lib: core.js:32
  Error:
   10: (Object(undefined): Number); // error
               ^^^^^^^^^ undefined. This type is incompatible with
  object type. See lib: core.js:32

conversion.js:18
 18: var z = Object(123); // error (next line makes this not match any signatures)
             ^^^^^^^^^^^ function call. Function cannot be called on any member of intersection type
 18: var z = Object(123); // error (next line makes this not match any signatures)
             ^^^^^^^^^^^ intersection
  Member 1:
  function type. See lib: core.js:28
  Error:
   18: var z = Object(123); // error (next line makes this not match any signatures)
                      ^^^ number. This type is incompatible with
  undefined. See lib: core.js:28
  Member 2:
  function type. See lib: core.js:29
  Error:
   18: var z = Object(123); // error (next line makes this not match any signatures)
                      ^^^ number. This type is incompatible with
  boolean. See lib: core.js:29
  Member 3:
  function type. See lib: core.js:30
  Error:
   19: (z.charAt(0): string);
          ^^^^^^ property `charAt`. Property not found in
   19: (z.charAt(0): string);
        ^ Number
  Member 4:
  function type. See lib: core.js:31
  Error:
   18: var z = Object(123); // error (next line makes this not match any signatures)
                      ^^^ number. This type is incompatible with
  string. See lib: core.js:31
  Member 5:
  polymorphic type: function type. See lib: core.js:32
  Error:
   18: var z = Object(123); // error (next line makes this not match any signatures)
                      ^^^ number. This type is incompatible with
  object type. See lib: core.js:32

objects.js:4
  4: (x.foo : string);     // error, key doesn't exist
        ^^^ property `foo`. Property not found in
  4: (x.foo : string);     // error, key doesn't exist
      ^ object type

objects.js:5
  5: (x['foo'] : string);  // error, key doesn't exist
        ^^^^^ property `foo`. Property not found in
  5: (x['foo'] : string);  // error, key doesn't exist
      ^ object type

objects.js:7
  7: (x.bar: boolean);     // error, string !~> boolean
      ^^^^^ string. This type is incompatible with
  7: (x.bar: boolean);     // error, string !~> boolean
             ^^^^^^^ boolean

objects.js:8
  8: (x['123'] : boolean); // error, string !~> boolean
      ^^^^^^^^ string. This type is incompatible with
  8: (x['123'] : boolean); // error, string !~> boolean
                 ^^^^^^^ boolean

objects.js:9
  9: x['123'] = false;     // error, boolean !~> string
                ^^^^^ boolean. This type is incompatible with
  3: var x : {'123': string, bar: string} = {'123': 'val', bar: 'bar'};
                     ^^^^^^ string

objects.js:14
 14: y['foo'] = 123; // error, number !~> string
                ^^^ number. This type is incompatible with
 13: var y : {foo: string} = {foo: 'bar'};
                   ^^^^^^ string

objects.js:15
 15: y['bar'] = 'abc'; // error, property not found
       ^^^^^ property `bar`. Property not found in
 15: y['bar'] = 'abc'; // error, property not found
     ^ object type

objects.js:17
 17: (y['hasOwnProperty']: string); // error, prototype method is not a string
      ^^^^^^^^^^^^^^^^^^^ function type. This type is incompatible with
 17: (y['hasOwnProperty']: string); // error, prototype method is not a string
                           ^^^^^^ string

unaliased_assign.js:18
 18:   var obj: { x: string | number };
                              ^^^^^^ number. This type is incompatible with
 15: var glob: { x: string } = { x: "hey" };
                    ^^^^^^ string


Found 11 errors
