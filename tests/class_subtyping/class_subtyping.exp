test2.js:7
  7: var y: I.B = new C();
                  ^^^^^^^ constructor call
  7: var y: I.B = new C();
                  ^^^^^^^ C. This type is incompatible with
  7: var y: I.B = new C();
            ^^^ B

test3.js:2
  2: class B extends A<string, number, bool> {}
                                       ^^^^ boolean. This type is incompatible with
  6: var a: A<string, number, Array<bool>> = c; // the third type arg is incorrect
                              ^^^^^^^^^^^ array type

test3.js:6
  6: var a: A<string, number, Array<bool>> = c; // the third type arg is incorrect
                              ^^^^^^^^^^^ array type. This type is incompatible with
  2: class B extends A<string, number, bool> {}
                                       ^^^^ boolean

test4.js:7
  7: foo((new C: C<O>), { f_: 0 });
                   ^ property `f`. Property not found in
  7: foo((new C: C<O>), { f_: 0 });
                        ^^^^^^^^^ object literal

test4.js:13
 13: foo(new D, { f_: 0 });
     ^^^^^^^^^^^^^^^^^^^^^ function call
  9: class D extends C<O> {
                       ^ property `f`. Property not found in
 13: foo(new D, { f_: 0 });
                ^^^^^^^^^ object literal

test5.js:17
 17: function gn(): Class<A> & Class<I> {
                                     ^ property `m1` of I. Property not found in
 18:   return class K extends A {}
              ^^^^^^^^^^^^^^^^^^^^ class expr `K`

test5.js:17
 17: function gn(): Class<A> & Class<I> {
                                     ^ property `sm1` of statics of I. Property not found in
 18:   return class K extends A {}
              ^^^^^^^^^^^^^^^^^^^^ statics of class expr `K`


Found 7 errors
