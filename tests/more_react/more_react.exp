API.react.js:4
  4: app.setProps({y:42}); // error, y:number but foo expects string in App.react
         ^^^^^^^^ property `setProps`. Property not found in
  4: app.setProps({y:42}); // error, y:number but foo expects string in App.react
     ^^^ React$Element

API.react.js:5
  5: app.setState({z:42}); // error, z:number but foo expects string in App.react
         ^^^^^^^^ property `setState`. Property not found in
  5: app.setState({z:42}); // error, z:number but foo expects string in App.react
     ^^^ React$Element

App.react.js:36
 36:         {foo(z,x)} // error, since z: number
                  ^ number. This type is incompatible with the expected param type of
 10: function foo(p:string,q:string):string { return p+q; }
                    ^^^^^^ string

JSX.js:8
  8:   <App y={42}> // error, y: number but foo expects string in App.react
       ^^^^^^^^^^^^ props of React element `App`
  8:   <App y={42}> // error, y: number but foo expects string in App.react
               ^^ number. This type is incompatible with
 14:   getDefaultProps: function(): { y: string } {
                                         ^^^^^^ string. See: App.react.js:14

checkPropTypes.js:7
  7: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }); // error: missing arguments
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
  7: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }); // error: missing arguments
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ undefined (too few arguments, expected default/rest parameters). This type is incompatible with
168:     location: string,
                   ^^^^^^ string. See lib: <BUILTINS>/react.js:168

checkPropTypes.js:7
  7: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }); // error: missing arguments
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
  7: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }); // error: missing arguments
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ undefined (too few arguments, expected default/rest parameters). This type is incompatible with
169:     componentName: string,
                        ^^^^^^ string. See lib: <BUILTINS>/react.js:169

checkPropTypes.js:8
  8: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }, 'value'); // error: missing argument
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
  8: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }, 'value'); // error: missing argument
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ undefined (too few arguments, expected default/rest parameters). This type is incompatible with
169:     componentName: string,
                        ^^^^^^ string. See lib: <BUILTINS>/react.js:169

checkPropTypes.js:10
 10: checkPropTypes({ bar: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent'); // error: property not found
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
 10: checkPropTypes({ bar: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent'); // error: property not found
                    ^^^^^^^^^^^^^^^^^^^^^^^^^ property `bar`. Property not found in
166:     propTypes: $Subtype<{[_: $Keys<V>]: ReactPropsCheckType}>,
                                  ^^^^^^^^ object literal. See lib: <BUILTINS>/react.js:166

checkPropTypes.js:12
 12: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent', () => 123); // error: number ~> string
                                                                                               ^^^ number. This type is incompatible with the expected param type of
170:     getStack: ?(() => ?string)
                            ^^^^^^ string. See lib: <BUILTINS>/react.js:170

propTypes.js:15
 15: <D />; // errors: properties `name` and `title` not found
     ^^^^^ React element `D`
  9:   propTypes: {
                  ^ property `name`. Property not found in
 15: <D />; // errors: properties `name` and `title` not found
     ^^^^^ props of React element `D`

propTypes.js:15
 15: <D />; // errors: properties `name` and `title` not found
     ^^^^^ React element `D`
  9:   propTypes: {
                  ^ property `title`. Property not found in
 15: <D />; // errors: properties `name` and `title` not found
     ^^^^^ props of React element `D`


Found 11 errors
