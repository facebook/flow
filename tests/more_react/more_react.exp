Error: API.react.js:4
  4: app.setProps({y:42}); // error, y:number but foo expects string in App.react
         ^^^^^^^^ property `setProps`. Property not found in
                                                                   v-
158: declare type React$Element<+ElementType: React$ElementType> = {|
159:   +type: ElementType,
160:   +props: React$ElementProps<ElementType>,
...:
163: |};
     -^ object type. See lib: <BUILTINS>/react.js:158

Error: API.react.js:5
  5: app.setState({z:42}); // error, z:number but foo expects string in App.react
         ^^^^^^^^ property `setState`. Property not found in
                                                                   v-
158: declare type React$Element<+ElementType: React$ElementType> = {|
159:   +type: ElementType,
160:   +props: React$ElementProps<ElementType>,
...:
163: |};
     -^ object type. See lib: <BUILTINS>/react.js:158

Error: App.react.js:36
 36:         {foo(z,x)} // error, since z: number
                  ^ number. This type is incompatible with the expected param type of
 10: function foo(p:string,q:string):string { return p+q; }
                    ^^^^^^ string

Error: checkPropTypes.js:7
  7: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }); // error: missing arguments
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
  7: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }); // error: missing arguments
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ undefined (too few arguments, expected default/rest parameters). This type is incompatible with
194:     location: string,
                   ^^^^^^ string. See lib: <BUILTINS>/react.js:194

Error: checkPropTypes.js:7
  7: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }); // error: missing arguments
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
  7: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }); // error: missing arguments
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ undefined (too few arguments, expected default/rest parameters). This type is incompatible with
195:     componentName: string,
                        ^^^^^^ string. See lib: <BUILTINS>/react.js:195

Error: checkPropTypes.js:8
  8: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }, 'value'); // error: missing argument
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
  8: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }, 'value'); // error: missing argument
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ undefined (too few arguments, expected default/rest parameters). This type is incompatible with
195:     componentName: string,
                        ^^^^^^ string. See lib: <BUILTINS>/react.js:195

Error: checkPropTypes.js:10
 10: checkPropTypes({ bar: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent'); // error: property not found
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function call
 10: checkPropTypes({ bar: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent'); // error: property not found
                    ^^^^^^^^^^^^^^^^^^^^^^^^^ property `bar`. Property not found in
192:     propTypes: $Subtype<{[_: $Keys<V>]: ReactPropsCheckType}>,
                                  ^^^^^^^^ object literal. See lib: <BUILTINS>/react.js:192

Error: checkPropTypes.js:12
 12: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent', () => 123); // error: number ~> string
                                                                                         ^^^^^^^^^ function. This type is incompatible with the expected param type of
196:     getStack: ?(() => ?string)
                     ^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/react.js:196
  This parameter is incompatible:
     12: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent', () => 123); // error: number ~> string
                                                                                                   ^^^ number. This type is incompatible with
    196:     getStack: ?(() => ?string)
                                ^^^^^^ string. See lib: <BUILTINS>/react.js:196

Error: propTypes.js:15
 15: <D />; // errors: properties `name` and `title` not found
     ^^^^^ React element `D`
 15: <D />; // errors: properties `name` and `title` not found
     ^^^^^ props of React element `D`. This type is incompatible with
                  v
  9:   propTypes: {
 10:     name: React.PropTypes.string.isRequired,
 11:     ...C.propTypes,
 12:   }
       ^ propTypes of React component
  Property `name` is incompatible:
                      v
      9:   propTypes: {
     10:     name: React.PropTypes.string.isRequired,
     11:     ...C.propTypes,
     12:   }
           ^ property `name`. Property not found in
     15: <D />; // errors: properties `name` and `title` not found
         ^^^^^ props of React element `D`

Error: propTypes.js:15
 15: <D />; // errors: properties `name` and `title` not found
     ^^^^^ React element `D`
 15: <D />; // errors: properties `name` and `title` not found
     ^^^^^ props of React element `D`. This type is incompatible with
                  v
  9:   propTypes: {
 10:     name: React.PropTypes.string.isRequired,
 11:     ...C.propTypes,
 12:   }
       ^ propTypes of React component
  Property `title` is incompatible:
                      v
      9:   propTypes: {
     10:     name: React.PropTypes.string.isRequired,
     11:     ...C.propTypes,
     12:   }
           ^ property `title`. Property not found in
     15: <D />; // errors: properties `name` and `title` not found
         ^^^^^ props of React element `D`


Found 10 errors
