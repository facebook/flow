Error ------------------------------------------------------------------------------------------------ array_lib.js:5:34

Cannot call `foo` with `x` bound to `x` because number [1] is incompatible with string [2].

   array_lib.js:5:34
   5| var b = a.map(function (x) { foo(x); return "" + x; });
                                       ^

References:
   array_lib.js:4:10
   4| var a = [0];
               ^ [1]
   array_lib.js:2:16
   2| function foo(x:string) { }
                     ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ array_lib.js:8:17

Cannot assign `b[0]` to `d` because string [1] is incompatible with number [2].

   array_lib.js:8:17
   8| var d: number = b[0];
                      ^^^^

References:
   array_lib.js:5:45
   5| var b = a.map(function (x) { foo(x); return "" + x; });
                                                  ^^^^^^ [1]
   array_lib.js:8:8
   8| var d: number = b[0];
             ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- array_lib.js:10:23

Cannot assign `a.reverse()` to `e` because number [1] is incompatible with string [2] in array element.

   array_lib.js:10:23
   10| var e:Array<string> = a.reverse();
                             ^^^^^^^^^^^

References:
   array_lib.js:4:10
    4| var a = [0];
                ^ [1]
   array_lib.js:10:13
   10| var e:Array<string> = a.reverse();
                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- array_lib.js:21:24

Cannot assign `h.concat(...)` to `n` because:
 - string [1] is incompatible with number [2] in array element.
 - string [3] is incompatible with number [2] in array element.
 - string [4] is incompatible with number [2] in array element.

   array_lib.js:21:24
   21| var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                              ^^^^^^^^^^^^^^^^^^^^^^^

References:
   array_lib.js:21:33
   21| var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                       ^^^ [1]
   array_lib.js:21:14
   21| var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                    ^^^^^^ [2]
   array_lib.js:21:38
   21| var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                            ^^^ [3]
   array_lib.js:21:43
   21| var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                                 ^^^ [4]


Error ----------------------------------------------------------------------------------------------- array_lib.js:24:24

Cannot assign `Array(...)` to `p` because:
 - string [1] is incompatible with number [2] in array element.
 - string [3] is incompatible with number [2] in array element.

   array_lib.js:24:24
   24| var p: Array<number> = Array('a', 'b') // error, string ~> number
                              ^^^^^^^^^^^^^^^

References:
   array_lib.js:24:30
   24| var p: Array<number> = Array('a', 'b') // error, string ~> number
                                    ^^^ [1]
   array_lib.js:24:14
   24| var p: Array<number> = Array('a', 'b') // error, string ~> number
                    ^^^^^^ [2]
   array_lib.js:24:35
   24| var p: Array<number> = Array('a', 'b') // error, string ~> number
                                         ^^^ [3]


Error ----------------------------------------------------------------------------------------------- array_lib.js:51:29

Cannot perform arithmetic operation because string [1] is not a number.

   array_lib.js:51:29
   51|   [""].reduce((acc, str) => acc * str.length); // error, string ~> number
                                   ^^^

References:
   array_lib.js:51:4
   51|   [""].reduce((acc, str) => acc * str.length); // error, string ~> number
          ^^ [1]


Error ----------------------------------------------------------------------------------------------- array_lib.js:51:35

Cannot get `str.length` because property `length` is missing in `Number` [1].

   array_lib.js:51:35
   51|   [""].reduce((acc, str) => acc * str.length); // error, string ~> number
                                         ^^^^^^^^^^

References:
   array_lib.js:51:29
   51|   [""].reduce((acc, str) => acc * str.length); // error, string ~> number
                                   ^^^^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------- array_lib.js:52:34

Cannot perform arithmetic operation because string [1] is not a number.

   array_lib.js:52:34
   52|   [""].reduceRight((acc, str) => acc * str.length); // error, string ~> number
                                        ^^^

References:
   array_lib.js:52:4
   52|   [""].reduceRight((acc, str) => acc * str.length); // error, string ~> number
          ^^ [1]


Error ----------------------------------------------------------------------------------------------- array_lib.js:52:40

Cannot get `str.length` because property `length` is missing in `Number` [1].

   array_lib.js:52:40
   52|   [""].reduceRight((acc, str) => acc * str.length); // error, string ~> number
                                              ^^^^^^^^^^

References:
   array_lib.js:52:34
   52|   [""].reduceRight((acc, str) => acc * str.length); // error, string ~> number
                                        ^^^^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------- array_lib.js:68:48

Cannot assign `Array.of(...)` to `incompatibleTypeNotOkay` because:
 - number [1] is incompatible with string [2] in array element.
 - number [3] is incompatible with string [2] in array element.

   array_lib.js:68:48
   68|   var incompatibleTypeNotOkay: Array<string> = Array.of(1, 2);
                                                      ^^^^^^^^^^^^^^

References:
   array_lib.js:68:57
   68|   var incompatibleTypeNotOkay: Array<string> = Array.of(1, 2);
                                                               ^ [1]
   array_lib.js:68:38
   68|   var incompatibleTypeNotOkay: Array<string> = Array.of(1, 2);
                                            ^^^^^^ [2]
   array_lib.js:68:60
   68|   var incompatibleTypeNotOkay: Array<string> = Array.of(1, 2);
                                                                  ^ [3]


Error ----------------------------------------------------------------------------------------------- issue_7887.js:7:15

Cannot assign object literal to `a` because number [1] is incompatible with string [2] in array element of property
`prop`.

   issue_7887.js:7:15
                    v
   7| var a: Plop = {
   8|   prop: Array(5).fill(1) // error
   9| };
      ^

References:
   issue_7887.js:8:23
   8|   prop: Array(5).fill(1) // error
                            ^ [1]
   issue_7887.js:4:9
   4|   prop: string[]
              ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- length.js:7:1

Cannot assign `6` to `r.length` because property `length` is not writable.

   7| r.length = 6; //ng
      ^^^^^^^^


Error --------------------------------------------------------------------------------------------------- length.js:10:1

Cannot assign `7` to `t.length` because property `length` is not writable.

   10| t.length = 7; //ng
       ^^^^^^^^



Found 17 errors
