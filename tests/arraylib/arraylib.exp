array_lib.js:4
  4: var a = [0];
              ^ number. This type is incompatible with
 10: var e:Array<string> = a.reverse();
                 ^^^^^^ string

array_lib.js:5
  5: var b = a.map(function (x) { foo(x); return "" + x; });
                                      ^ number. This type is incompatible with the expected param type of
  2: function foo(x:string) { }
                    ^^^^^^ string

array_lib.js:8
  8: var d: number = b[0];
                     ^^^^ string. This type is incompatible with
  8: var d: number = b[0];
            ^^^^^^ number

array_lib.js:21
 21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                     ^^^ string. This type is incompatible with
 21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                  ^^^^^^ number

array_lib.js:21
 21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                          ^^^ string. This type is incompatible with
 21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                  ^^^^^^ number

array_lib.js:21
 21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                               ^^^ string. This type is incompatible with
 21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                  ^^^^^^ number

array_lib.js:46
 46:   [""].reduce((acc, str) => acc * str.length); // error, string ~> number
                                 ^^^ string. The operand of an arithmetic operation must be a number.

array_lib.js:46
 46:   [""].reduce((acc, str) => acc * str.length); // error, string ~> number
                                           ^^^^^^ property `length`. Property not found in
 46:   [""].reduce((acc, str) => acc * str.length); // error, string ~> number
                                       ^^^ Number

array_lib.js:47
 47:   [""].reduceRight((acc, str) => acc * str.length); // error, string ~> number
                                      ^^^ string. The operand of an arithmetic operation must be a number.

array_lib.js:47
 47:   [""].reduceRight((acc, str) => acc * str.length); // error, string ~> number
                                                ^^^^^^ property `length`. Property not found in
 47:   [""].reduceRight((acc, str) => acc * str.length); // error, string ~> number
                                            ^^^ Number

length.js:7
  7: r.length = 6; //ng
       ^^^^^^ property `length`. Covariant property `length` incompatible with contravariant use in
  7: r.length = 6; //ng
     ^^^^^^^^ assignment of property `length`

length.js:10
 10: t.length = 7; //ng
       ^^^^^^ property `length`. Covariant property `length` incompatible with contravariant use in
 10: t.length = 7; //ng
     ^^^^^^^^ assignment of property `length`


Found 12 errors
