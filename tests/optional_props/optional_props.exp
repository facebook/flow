Error ----------------------------------------------------------------------------------------------------- test.js:2:27

Cannot assign `x` to `y` because property `foo` is missing in object type [1] but exists in object type [2].
[prop-missing]

   test.js:2:27
   2| var y: { foo?: string } = x; // OK in TypeScript, not OK in Flow
                                ^

References:
   test.js:1:8
   1| var x: { } = { foo: 0 };
             ^^^ [1]
   test.js:2:8
   2| var y: { foo?: string } = x; // OK in TypeScript, not OK in Flow
             ^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ test.js:8:9

Cannot assign `0` to `o.foo` because number [1] is incompatible with string [2]. [incompatible-type]

   test.js:8:9
   8| o.foo = 0; // future widening is constrained
              ^ [1]

References:
   test.js:2:16
   2| var y: { foo?: string } = x; // OK in TypeScript, not OK in Flow
                     ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:12:11

Cannot call `bar` with object literal bound to `config` because string [1] is incompatible with number [2] in property
`foo`. [incompatible-call]

   test.js:12:11
   12| bar({foo: ""});
                 ^^ [1]

References:
   test.js:10:30
   10| function bar(config: { foo?: number }) {}
                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test2.js:3:9

Cannot assign `null` to `a.foo` because null [1] is incompatible with string [2]. [incompatible-type]

   test2.js:3:9
   3| a.foo = null; // But this is an error
              ^^^^ [1]

References:
   test2.js:1:16
   1| var a: { foo?: string } = {};
                     ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test2.js:10:34

Cannot assign object literal to `d` because null [1] is incompatible with string [2] in property `foo`.
[incompatible-type]

   test2.js:10:34
   10| var d: { foo?: string } = { foo: null }; // But this is an error
                                        ^^^^ [1]

References:
   test2.js:10:16
   10| var d: { foo?: string } = { foo: null }; // But this is an error
                      ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test3.js:54:16

Cannot assign `'hello'` to `this.x.b` because property `b` is missing in object literal [1]. [prop-missing]

   test3.js:54:16
   54|         this.x.b = 'hello';
                      ^

References:
   test3.js:53:18
   53|         this.x = { a: 123 };
                        ^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------- test3_exact_annot.js:5:38

Cannot assign `a` to `b` because property `b` is missing in object type [1] but exists in object type [2].
[prop-missing]

   test3_exact_annot.js:5:38
   5| const b: { a: number, b?: number } = a; // error: property `b` not found
                                           ^

References:
   test3_exact_annot.js:4:10
   4| const a: {| a: number |} = { a: 1 };
               ^^^^^^^^^^^^^^^ [1]
   test3_exact_annot.js:5:10
   5| const b: { a: number, b?: number } = a; // error: property `b` not found
               ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- test3_exact_annot.js:7:4

Cannot get `a.b` because property `b` is missing in object type [1]. [prop-missing]

   test3_exact_annot.js:7:4
   7| (a.b: number); // error: property `b` not found
         ^

References:
   test3_exact_annot.js:4:10
   4| const a: {| a: number |} = { a: 1 };
               ^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- test3_failure.js:7:14

Cannot assign `'hello'` to `this.o.x.b` because property `b` is missing in object literal [1]. [prop-missing]

   test3_failure.js:7:14
   7|     this.o.x.b = 'hello'; // this is a spurious error (see test3.js for details)
                   ^

References:
   test3_failure.js:6:16
   6|     this.o.x = { a: 123 };
                     ^^^^^^^^^^ [1]



Found 9 errors
