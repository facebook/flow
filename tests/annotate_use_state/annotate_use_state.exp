>>> test.js (#changes: 3)
import * as React from 'react';
import {useState} from 'react';

{
  const [val, setValue] = useState<{ a: number }>({}); // ANNOTATED
  val.a = 1;
}

{
  const [val, setValue] = React.useState<{ a: number }>({}); // ANNOTATED
  val.a = 1;
}

{
  const [val, setValue] = useState<{ a: number }>({}); // ANNOTATED
  const f = (x: {a: number}) => x.a;
  f(val);
}

{
  const [val, setValue] = useState({}); // NOT ANNOTATED
  const s: string = 'hi';
  val[s] = 1;
}

{
  const [val, setValue] = useState({}); // NOT ANNOTATED
}

type T = [string, string => string];
{
  const [val, setValue]: T = useState({}); // NOT ANNOTATED
}

>>> Launching report...

Stats:
  Files changed:                            1
  Number of annotations added:              3
  Total size of annotations:                6

Errors:
  Missing annot./normalizer error:          0
  Validation Error:                         0
  Import Error:
    Loc source none:                        0
    Parsing heaps get ast error:            0
    Indeterminate module type:              0
    No matching export:                     0
  Serializer error:                         0
  Unsupported error kind:                   0

Warnings:
  Skipping arrow function:                  0
  Large type added:                         0
  Location unhandled:                       0
  Empty NoUpper:                            0
  Empty SomeKnownUpper:                     0

