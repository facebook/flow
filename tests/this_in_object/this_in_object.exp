Error ------------------------------------------------------------------------------------------------------ test.js:5:9

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:5:9
    5|         this; // error, refer to method on line 4
               ^^^^

References:
   test.js:4:5
           v----
    4|     m() {
    5|         this; // error, refer to method on line 4
    6|
    7|         let b = { m() { this }}; // error, refer to method here
    8|
    9|         let c = class {
   10|             m() {
   11|                 this; // fine
   12|
   13|                 let d = { m() { this }}; // error, refer to method here
   14|             }
   15|         }
   16|
   17|         let e = () => { this }; // error, refer to method on line 4
   18|
   19|         function f() {
   20|             this; // fine
   21|
   22|             let g = { m() { this }}; // error, refer to method here
   23|         }
   24|
   25|         let h = [this]; // error, refer to method on line 4
   26|     },
           ^ [1]


Error ----------------------------------------------------------------------------------------------------- test.js:7:25

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:7:25
   7|         let b = { m() { this }}; // error, refer to method here
                              ^^^^

References:
   test.js:7:19
   7|         let b = { m() { this }}; // error, refer to method here
                        ^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:13:33

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:13:33
   13|                 let d = { m() { this }}; // error, refer to method here
                                       ^^^^

References:
   test.js:13:27
   13|                 let d = { m() { this }}; // error, refer to method here
                                 ^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:17:25

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:17:25
   17|         let e = () => { this }; // error, refer to method on line 4
                               ^^^^

References:
   test.js:4:5
           v----
    4|     m() {
    5|         this; // error, refer to method on line 4
    6|
    7|         let b = { m() { this }}; // error, refer to method here
    8|
    9|         let c = class {
   10|             m() {
   11|                 this; // fine
   12|
   13|                 let d = { m() { this }}; // error, refer to method here
   14|             }
   15|         }
   16|
   17|         let e = () => { this }; // error, refer to method on line 4
   18|
   19|         function f() {
   20|             this; // fine
   21|
   22|             let g = { m() { this }}; // error, refer to method here
   23|         }
   24|
   25|         let h = [this]; // error, refer to method on line 4
   26|     },
           ^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:22:29

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:22:29
   22|             let g = { m() { this }}; // error, refer to method here
                                   ^^^^

References:
   test.js:22:23
   22|             let g = { m() { this }}; // error, refer to method here
                             ^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:25:18

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:25:18
   25|         let h = [this]; // error, refer to method on line 4
                        ^^^^

References:
   test.js:4:5
           v----
    4|     m() {
    5|         this; // error, refer to method on line 4
    6|
    7|         let b = { m() { this }}; // error, refer to method here
    8|
    9|         let c = class {
   10|             m() {
   11|                 this; // fine
   12|
   13|                 let d = { m() { this }}; // error, refer to method here
   14|             }
   15|         }
   16|
   17|         let e = () => { this }; // error, refer to method on line 4
   18|
   19|         function f() {
   20|             this; // fine
   21|
   22|             let g = { m() { this }}; // error, refer to method here
   23|         }
   24|
   25|         let h = [this]; // error, refer to method on line 4
   26|     },
           ^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:31:25

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:31:25
   31|         let b = { m() { this }}; // error, refer to method here
                               ^^^^

References:
   test.js:31:19
   31|         let b = { m() { this }}; // error, refer to method here
                         ^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:37:33

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:37:33
   37|                 let d = { m() { this }}; // error, refer to method here
                                       ^^^^

References:
   test.js:37:27
   37|                 let d = { m() { this }}; // error, refer to method here
                                 ^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:46:29

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:46:29
   46|             let g = { m() { this }}; // error, refer to method here
                                   ^^^^

References:
   test.js:46:23
   46|             let g = { m() { this }}; // error, refer to method here
                             ^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:55:25

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:55:25
   55|         let b = { m() { this }}; // error, refer to method here
                               ^^^^

References:
   test.js:55:19
   55|         let b = { m() { this }}; // error, refer to method here
                         ^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:61:33

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:61:33
   61|                 let d = { m() { this }}; // error, refer to method here
                                       ^^^^

References:
   test.js:61:27
   61|                 let d = { m() { this }}; // error, refer to method here
                                 ^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:70:29

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:70:29
   70|             let g = { m() { this }}; // error, refer to method here
                                   ^^^^

References:
   test.js:70:23
   70|             let g = { m() { this }}; // error, refer to method here
                             ^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:79:19

Cannot reference `this` from within method `m` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:79:19
   79|     let x = { f : this }; // error, point to m
                         ^^^^

References:
   test.js:78:3
         v----
   78|   m() {
   79|     let x = { f : this }; // error, point to m
   80|     let y = ({ f() { this }}) // error, point to f
   81|     let z = ({ f() { let z = { f: this } }}) // error, point to f
   82|   }
         ^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:80:22

Cannot reference `this` from within method `f` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:80:22
   80|     let y = ({ f() { this }}) // error, point to f
                            ^^^^

References:
   test.js:80:16
   80|     let y = ({ f() { this }}) // error, point to f
                      ^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:81:35

Cannot reference `this` from within method `f` [1]. For safety, Flow restricts access to `this` inside object methods
since these methods may be unbound and rebound. Consider replacing the reference to `this` with the name of the object,
or rewriting the object as a class. [object-this-reference]

   test.js:81:35
   81|     let z = ({ f() { let z = { f: this } }}) // error, point to f
                                         ^^^^

References:
   test.js:81:16
   81|     let z = ({ f() { let z = { f: this } }}) // error, point to f
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]



Found 15 errors
