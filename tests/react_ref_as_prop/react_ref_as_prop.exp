Error ----------------------------------------------------------------------------------- implicit_instantiation.js:14:2

Cannot cast object literal to `React.ElementConfig` because property `foo` is missing in object literal [1] but exists
in object type [2]. [prop-missing]

   implicit_instantiation.js:14:2
   14| ({}) as React.ElementConfig<typeof IdMappedFnWithoutRefProp>; // error: missing foo prop
        ^^ [1]

References:
   implicit_instantiation.js:14:9
   14| ({}) as React.ElementConfig<typeof IdMappedFnWithoutRefProp>; // error: missing foo prop
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:15:2

Cannot cast object literal to `React.ElementConfig` because property `foo` is missing in object literal [1] but exists
in object type [2]. [prop-missing]

   implicit_instantiation.js:15:2
   15| ({}) as React.ElementConfig<typeof IdMappedFnWithOptionalRefProp>; // error: missing foo prop
        ^^ [1]

References:
   implicit_instantiation.js:15:9
   15| ({}) as React.ElementConfig<typeof IdMappedFnWithOptionalRefProp>; // error: missing foo prop
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:16:2

Cannot cast object literal to `React.ElementConfig` because property `foo` is missing in object literal [1] but exists
in object type [2]. [prop-missing]

   implicit_instantiation.js:16:2
   16| ({}) as React.ElementConfig<typeof IdMappedFnWithRequiredRefProp>; // error: missing foo prop
        ^^ [1]

References:
   implicit_instantiation.js:16:9
   16| ({}) as React.ElementConfig<typeof IdMappedFnWithRequiredRefProp>; // error: missing foo prop
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:18:1

Cannot cast `null` to `React.ElementRef` because null [1] is incompatible with undefined [2]. [incompatible-cast]

   implicit_instantiation.js:18:1
   18| null as React.ElementRef<typeof IdMappedFnWithoutRefProp>; // error: null ~> void
       ^^^^ [1]

References:
   implicit_instantiation.js:18:9
   18| null as React.ElementRef<typeof IdMappedFnWithoutRefProp>; // error: null ~> void
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:20:1

Cannot cast `null` to `React.ElementRef` because null [1] is incompatible with `HTMLElement` [2]. [incompatible-cast]

   implicit_instantiation.js:20:1
   20| null as React.ElementRef<typeof IdMappedFnWithOptionalRefProp>; // error: null ~> HTMLElement
       ^^^^ [1]

References:
   implicit_instantiation.js:20:9
   20| null as React.ElementRef<typeof IdMappedFnWithOptionalRefProp>; // error: null ~> HTMLElement
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:22:1

Cannot cast `null` to `React.ElementRef` because null [1] is incompatible with `HTMLElement` [2]. [incompatible-cast]

   implicit_instantiation.js:22:1
   22| null as React.ElementRef<typeof IdMappedFnWithRequiredRefProp>; // error: null ~> HTMLElement
       ^^^^ [1]

References:
   implicit_instantiation.js:22:9
   22| null as React.ElementRef<typeof IdMappedFnWithRequiredRefProp>; // error: null ~> HTMLElement
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:33:2

Cannot cast object literal to `React.ElementConfig` because property `foo` is missing in object literal [1] but exists
in props of component CompWithoutRefProp [2]. [prop-missing]

   implicit_instantiation.js:33:2
   33| ({}) as React.ElementConfig<typeof IdMappedCompWithoutRefProp>; // error: missing foo prop
        ^^ [1]

References:
   implicit_instantiation.js:33:9
   33| ({}) as React.ElementConfig<typeof IdMappedCompWithoutRefProp>; // error: missing foo prop
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:34:2

Cannot cast object literal to `React.ElementConfig` because property `foo` is missing in object literal [1] but exists
in props of component CompWithOptionalRefProp [2]. [prop-missing]

   implicit_instantiation.js:34:2
   34| ({}) as React.ElementConfig<typeof IdMappedCompWithOptionalRefProp>; // error: missing foo prop
        ^^ [1]

References:
   implicit_instantiation.js:34:9
   34| ({}) as React.ElementConfig<typeof IdMappedCompWithOptionalRefProp>; // error: missing foo prop
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:35:2

Cannot cast object literal to `React.ElementConfig` because property `foo` is missing in object literal [1] but exists
in props of component CompWithRequiredRefProp [2]. [prop-missing]

   implicit_instantiation.js:35:2
   35| ({}) as React.ElementConfig<typeof IdMappedCompWithRequiredRefProp>; // error: missing foo prop
        ^^ [1]

References:
   implicit_instantiation.js:35:9
   35| ({}) as React.ElementConfig<typeof IdMappedCompWithRequiredRefProp>; // error: missing foo prop
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:37:1

Cannot cast `null` to `React.ElementRef` because null [1] is incompatible with instance of component
CompWithoutRefProp [2]. [incompatible-cast]

   implicit_instantiation.js:37:1
   37| null as React.ElementRef<typeof IdMappedCompWithoutRefProp>; // error: null ~> void
       ^^^^ [1]

References:
   implicit_instantiation.js:37:9
   37| null as React.ElementRef<typeof IdMappedCompWithoutRefProp>; // error: null ~> void
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:39:1

Cannot cast `null` to `React.ElementRef` because null [1] is incompatible with `HTMLElement` [2]. [incompatible-cast]

   implicit_instantiation.js:39:1
   39| null as React.ElementRef<typeof IdMappedCompWithOptionalRefProp>; // error: null ~> HTMLElement
       ^^^^ [1]

References:
   implicit_instantiation.js:39:9
   39| null as React.ElementRef<typeof IdMappedCompWithOptionalRefProp>; // error: null ~> HTMLElement
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- implicit_instantiation.js:41:1

Cannot cast `null` to `React.ElementRef` because null [1] is incompatible with `HTMLElement` [2]. [incompatible-cast]

   implicit_instantiation.js:41:1
   41| null as React.ElementRef<typeof IdMappedCompWithRequiredRefProp>; // error: null ~> HTMLElement
       ^^^^ [1]

References:
   implicit_instantiation.js:41:9
   41| null as React.ElementRef<typeof IdMappedCompWithRequiredRefProp>; // error: null ~> HTMLElement
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- jsx_checking.js:6:2

Cannot create `FnWithRequiredRefProp` element because property `ref` is missing in props [1] but exists in object
type [2]. [prop-missing]

   jsx_checking.js:6:2
   6| <FnWithRequiredRefProp foo="bar" />; // error: missing ref prop
       ^^^^^^^^^^^^^^^^^^^^^

References:
   jsx_checking.js:6:1
   6| <FnWithRequiredRefProp foo="bar" />; // error: missing ref prop
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   fn_components.js:3:54
   3| declare export function FnWithRequiredRefProp(props: {foo: string, ref: React.RefSetter<HTMLElement>}): React.Node;
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- jsx_checking.js:7:24

Cannot create `FnWithoutRefProp` element because number [1] is incompatible with string [2] in property `foo`.
[incompatible-type]

   jsx_checking.js:7:24
   7| <FnWithoutRefProp foo={1} />; // error: 1 ~> string, normal checking still works
                             ^ [1]

References:
   fn_components.js:1:55
   1| declare export function FnWithoutRefProp(props: {foo: string}): React.Node;
                                                            ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- jsx_checking.js:8:2

Cannot create `FnWithoutRefProp` element because property `ref` is missing in object type [1] but exists in props [2].
[prop-missing]

   jsx_checking.js:8:2
   8| <FnWithoutRefProp foo="bar" ref={(_: ?HTMLElement) => {}} />; // error: extra ref prop
       ^^^^^^^^^^^^^^^^

References:
   fn_components.js:1:49
   1| declare export function FnWithoutRefProp(props: {foo: string}): React.Node;
                                                      ^^^^^^^^^^^^^ [1]
   jsx_checking.js:8:1
   8| <FnWithoutRefProp foo="bar" ref={(_: ?HTMLElement) => {}} />; // error: extra ref prop
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- jsx_checking.js:10:39

Cannot create `FnWithOptionalRefProp` element because in property `ref`: [incompatible-type]
 - Either string [1] is incompatible with `HTMLElement` [2] in the first parameter.
 - Or function [3] is incompatible with object type [4]. Functions without statics are not compatible with objects.

   jsx_checking.js:10:39
    10| <FnWithOptionalRefProp foo="bar" ref={(_: ?string) => {}} />; // error: string ~> HTMLElement, ref checking still works
                                              ^^^^^^^^^^^^^^^^^^ [3]

References:
   jsx_checking.js:10:44
    10| <FnWithOptionalRefProp foo="bar" ref={(_: ?string) => {}} />; // error: string ~> HTMLElement, ref checking still works
                                                   ^^^^^^ [1]
   fn_components.js:2:90
     2| declare export function FnWithOptionalRefProp(props: {foo: string, ref?: React.RefSetter<HTMLElement>}): React.Node;
                                                                                                 ^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:192:5
   192|   | { -current: T | null, ... }
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- jsx_checking.js:12:39

Cannot create `FnWithRequiredRefProp` element because in property `ref`: [incompatible-type]
 - Either string [1] is incompatible with `HTMLElement` [2] in the first parameter.
 - Or function [3] is incompatible with object type [4]. Functions without statics are not compatible with objects.

   jsx_checking.js:12:39
    12| <FnWithRequiredRefProp foo="bar" ref={(_: ?string) => {}} />; // error: string ~> HTMLElement, ref checking still works
                                              ^^^^^^^^^^^^^^^^^^ [3]

References:
   jsx_checking.js:12:44
    12| <FnWithRequiredRefProp foo="bar" ref={(_: ?string) => {}} />; // error: string ~> HTMLElement, ref checking still works
                                                   ^^^^^^ [1]
   fn_components.js:3:89
     3| declare export function FnWithRequiredRefProp(props: {foo: string, ref: React.RefSetter<HTMLElement>}): React.Node;
                                                                                                ^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:192:5
   192|   | { -current: T | null, ... }
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- jsx_checking.js:17:26

Cannot create `CompWithoutRefProp` element because number [1] is incompatible with string [2] in property `foo`.
[incompatible-type]

   jsx_checking.js:17:26
   17| <CompWithoutRefProp foo={1} />; // error: 1 ~> string, normal checking still works
                                ^ [1]

References:
   component_syntax_components.js:1:50
    1| declare export component CompWithoutRefProp(foo: string);
                                                        ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- jsx_checking.js:18:2

Cannot create `CompWithoutRefProp` element because property `ref` is missing in props of component
CompWithoutRefProp [1] but exists in props [2]. [prop-missing]

   jsx_checking.js:18:2
   18| <CompWithoutRefProp foo="bar" ref={(_: ?HTMLElement) => {}} />; // error: extra ref prop
        ^^^^^^^^^^^^^^^^^^

References:
   component_syntax_components.js:1:44
    1| declare export component CompWithoutRefProp(foo: string);
                                                  ^^^^^^^^^^^^^ [1]
   jsx_checking.js:18:1
   18| <CompWithoutRefProp foo="bar" ref={(_: ?HTMLElement) => {}} />; // error: extra ref prop
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- jsx_checking.js:20:41

Cannot create `CompWithOptionalRefProp` element because in property `ref`: [incompatible-type]
 - Either string [1] is incompatible with `HTMLElement` [2] in the first parameter.
 - Or function [3] is incompatible with object type [4]. Functions without statics are not compatible with objects.

   jsx_checking.js:20:41
    20| <CompWithOptionalRefProp foo="bar" ref={(_: ?string) => {}} />; // error: string ~> HTMLElement, ref checking still works
                                                ^^^^^^^^^^^^^^^^^^ [3]

References:
   jsx_checking.js:20:46
    20| <CompWithOptionalRefProp foo="bar" ref={(_: ?string) => {}} />; // error: string ~> HTMLElement, ref checking still works
                                                     ^^^^^^ [1]
   component_syntax_components.js:2:85
     2| declare export component CompWithOptionalRefProp(foo: string, ref?: React.RefSetter<HTMLElement>);
                                                                                            ^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:192:5
   192|   | { -current: T | null, ... }
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- jsx_checking.js:22:41

Cannot create `CompWithRequiredRefProp` element because in property `ref`: [incompatible-type]
 - Either string [1] is incompatible with `HTMLElement` [2] in the first parameter.
 - Or function [3] is incompatible with object type [4]. Functions without statics are not compatible with objects.

   jsx_checking.js:22:41
    22| <CompWithRequiredRefProp foo="bar" ref={(_: ?string) => {}} />; // error: string ~> HTMLElement, ref checking still works
                                                ^^^^^^^^^^^^^^^^^^ [3]

References:
   jsx_checking.js:22:46
    22| <CompWithRequiredRefProp foo="bar" ref={(_: ?string) => {}} />; // error: string ~> HTMLElement, ref checking still works
                                                     ^^^^^^ [1]
   component_syntax_components.js:3:84
     3| declare export component CompWithRequiredRefProp(foo: string, ref: React.RefSetter<HTMLElement>);
                                                                                           ^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:192:5
   192|   | { -current: T | null, ... }
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error ------------------------------------------------------------------------------------------------ subtyping.js:14:1

Cannot cast `FnWithRequiredRefProp` to component because property `ref` is missing in props [1] but exists in object
type [2]. [prop-missing]

   subtyping.js:14:1
   14| FnWithRequiredRefProp as component(foo: string); // error: missing ref prop
       ^^^^^^^^^^^^^^^^^^^^^

References:
   subtyping.js:14:26
   14| FnWithRequiredRefProp as component(foo: string); // error: missing ref prop
                                ^^^^^^^^^^^^^^^^^^^^^^ [1]
   fn_components.js:3:54
    3| declare export function FnWithRequiredRefProp(props: {foo: string, ref: React.RefSetter<HTMLElement>}): React.Node;
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ subtyping.js:24:1

Cannot cast `CompWithOptionalRefProp` to component because `HTMLElement` [1] is incompatible with instance of
component [2]. [incompatible-cast]

   subtyping.js:24:1
   24| CompWithOptionalRefProp as component(foo: string); // error: missing ref prop
       ^^^^^^^^^^^^^^^^^^^^^^^

References:
   component_syntax_components.js:2:85
    2| declare export component CompWithOptionalRefProp(foo: string, ref?: React.RefSetter<HTMLElement>);
                                                                                           ^^^^^^^^^^^ [1]
   subtyping.js:24:28
   24| CompWithOptionalRefProp as component(foo: string); // error: missing ref prop
                                  ^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ subtyping.js:28:1

Cannot cast `CompWithRequiredRefProp` to component because `HTMLElement` [1] is incompatible with instance of
component [2]. [incompatible-cast]

   subtyping.js:28:1
   28| CompWithRequiredRefProp as component(foo: string); // error: missing ref prop
       ^^^^^^^^^^^^^^^^^^^^^^^

References:
   component_syntax_components.js:3:84
    3| declare export component CompWithRequiredRefProp(foo: string, ref: React.RefSetter<HTMLElement>);
                                                                                          ^^^^^^^^^^^ [1]
   subtyping.js:28:28
   28| CompWithRequiredRefProp as component(foo: string); // error: missing ref prop
                                  ^^^^^^^^^^^^^^^^^^^^^^ [2]



Found 24 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
