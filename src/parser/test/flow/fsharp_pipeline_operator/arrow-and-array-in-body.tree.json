{
  "errors":[
    {
      "loc":{"source":null,"start":{"line":1,"column":7},"end":{"line":1,"column":9}},
      "message":"The F# pipeline operator plugin must be enabled in order to use the pipeline operator (`|>`). Pipeline operator is an active early-stage feature proposal which may change and is not enabled by default. To enable support in the parser, use the `esproposal_fsharp_pipeline_operator` option."
    },
    {
      "loc":{"source":null,"start":{"line":1,"column":23},"end":{"line":1,"column":25}},
      "message":"The F# pipeline operator plugin must be enabled in order to use the pipeline operator (`|>`). Pipeline operator is an active early-stage feature proposal which may change and is not enabled by default. To enable support in the parser, use the `esproposal_fsharp_pipeline_operator` option."
    }
  ],
  "type":"Program",
  "loc":{"source":null,"start":{"line":1,"column":0},"end":{"line":1,"column":36}},
  "range":[0,36],
  "body":[
    {
      "type":"ExpressionStatement",
      "loc":{"source":null,"start":{"line":1,"column":0},"end":{"line":1,"column":36}},
      "range":[0,36],
      "expression":{
        "type":"ArrowFunctionExpression",
        "loc":{"source":null,"start":{"line":1,"column":0},"end":{"line":1,"column":36}},
        "range":[0,36],
        "id":null,
        "params":[
          {
            "type":"Identifier",
            "loc":{"source":null,"start":{"line":1,"column":0},"end":{"line":1,"column":1}},
            "range":[0,1],
            "name":"x",
            "typeAnnotation":null,
            "optional":false
          }
        ],
        "body":{
          "type":"BinaryExpression",
          "loc":{"source":null,"start":{"line":1,"column":5},"end":{"line":1,"column":36}},
          "range":[5,36],
          "operator":"|>",
          "left":{
            "type":"BinaryExpression",
            "loc":{"source":null,"start":{"line":1,"column":5},"end":{"line":1,"column":22}},
            "range":[5,22],
            "operator":"|>",
            "left":{
              "type":"Identifier",
              "loc":{"source":null,"start":{"line":1,"column":5},"end":{"line":1,"column":6}},
              "range":[5,6],
              "name":"x",
              "typeAnnotation":null,
              "optional":false
            },
            "right":{
              "type":"ArrayExpression",
              "loc":{"source":null,"start":{"line":1,"column":10},"end":{"line":1,"column":22}},
              "range":[10,22],
              "elements":[
                {
                  "type":"ArrowFunctionExpression",
                  "loc":{"source":null,"start":{"line":1,"column":11},"end":{"line":1,"column":21}},
                  "range":[11,21],
                  "id":null,
                  "params":[
                    {
                      "type":"Identifier",
                      "loc":{"source":null,"start":{"line":1,"column":11},"end":{"line":1,"column":12}},
                      "range":[11,12],
                      "name":"y",
                      "typeAnnotation":null,
                      "optional":false
                    }
                  ],
                  "body":{
                    "type":"BinaryExpression",
                    "loc":{"source":null,"start":{"line":1,"column":16},"end":{"line":1,"column":21}},
                    "range":[16,21],
                    "operator":"+",
                    "left":{
                      "type":"Identifier",
                      "loc":{"source":null,"start":{"line":1,"column":16},"end":{"line":1,"column":17}},
                      "range":[16,17],
                      "name":"y",
                      "typeAnnotation":null,
                      "optional":false
                    },
                    "right":{
                      "type":"Literal",
                      "loc":{"source":null,"start":{"line":1,"column":20},"end":{"line":1,"column":21}},
                      "range":[20,21],
                      "value":1,
                      "raw":"1"
                    }
                  },
                  "async":false,
                  "generator":false,
                  "predicate":null,
                  "expression":true,
                  "returnType":null,
                  "typeParameters":null
                }
              ]
            }
          },
          "right":{
            "type":"ArrowFunctionExpression",
            "loc":{"source":null,"start":{"line":1,"column":26},"end":{"line":1,"column":36}},
            "range":[26,36],
            "id":null,
            "params":[
              {
                "type":"Identifier",
                "loc":{"source":null,"start":{"line":1,"column":26},"end":{"line":1,"column":27}},
                "range":[26,27],
                "name":"z",
                "typeAnnotation":null,
                "optional":false
              }
            ],
            "body":{
              "type":"BinaryExpression",
              "loc":{"source":null,"start":{"line":1,"column":31},"end":{"line":1,"column":36}},
              "range":[31,36],
              "operator":"*",
              "left":{
                "type":"Identifier",
                "loc":{"source":null,"start":{"line":1,"column":31},"end":{"line":1,"column":32}},
                "range":[31,32],
                "name":"z",
                "typeAnnotation":null,
                "optional":false
              },
              "right":{
                "type":"Literal",
                "loc":{"source":null,"start":{"line":1,"column":35},"end":{"line":1,"column":36}},
                "range":[35,36],
                "value":2,
                "raw":"2"
              }
            },
            "async":false,
            "generator":false,
            "predicate":null,
            "expression":true,
            "returnType":null,
            "typeParameters":null
          }
        },
        "async":false,
        "generator":false,
        "predicate":null,
        "expression":true,
        "returnType":null,
        "typeParameters":null
      },
      "directive":null
    }
  ],
  "comments":[]
}
