"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[538],{28453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>r});var t=n(96540);const l={},i=t.createContext(l);function s(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(i.Provider,{value:o},e.children)}},50538:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>d});var t=n(72710),l=n(74848),i=n(28453);const s={author:"Gabe Levi",hide_table_of_contents:!0},r=void 0,a={authorsImageUrls:[void 0]},d=[{value:"<code>@noflow</code>",id:"noflow",level:3},{value:"Declaration files",id:"declaration-files",level:3}];function c(e){const o={a:"a",code:"code",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(o.p,{children:["Flow v0.19.0 was deployed today! It has a ton of changes, which the\n",(0,l.jsx)(o.a,{href:"https://github.com/facebook/flow/blob/master/Changelog.md#v0190",children:"Changelog"}),"\nsummarizes. The Changelog can be a little concise, though, so here are some\nlonger explanations for some of the changes. Hope this helps!"]}),"\n",(0,l.jsx)(o.h3,{id:"noflow",children:(0,l.jsx)(o.code,{children:"@noflow"})}),"\n",(0,l.jsxs)(o.p,{children:["Flow is opt-in by default (you add ",(0,l.jsx)(o.code,{children:"@flow"})," to a file). However we noticed that\nsometimes people would add Flow annotations to files that were missing ",(0,l.jsx)(o.code,{children:"@flow"}),".\nOften, these people didn't notice that the file was being ignored by Flow. So\nwe decided to stop allowing Flow syntax in non-Flow files. This is easily fixed\nby adding either ",(0,l.jsx)(o.code,{children:"@flow"})," or ",(0,l.jsx)(o.code,{children:"@noflow"})," to your file. The former will make the\nfile a Flow file. The latter will tell Flow to completely ignore the file."]}),"\n",(0,l.jsx)(o.h3,{id:"declaration-files",children:"Declaration files"}),"\n",(0,l.jsxs)(o.p,{children:["Files that end with ",(0,l.jsx)(o.code,{children:".flow"})," are now treated specially. They are the preferred\nprovider of modules. That is if both ",(0,l.jsx)(o.code,{children:"foo.js"})," and ",(0,l.jsx)(o.code,{children:"foo.js.flow"})," exist, then\nwhen you write ",(0,l.jsx)(o.code,{children:"import Foo from './foo'"}),", Flow will use the type exported from\n",(0,l.jsx)(o.code,{children:"foo.js.flow"})," rather than ",(0,l.jsx)(o.code,{children:"foo.js"}),"."]}),"\n",(0,l.jsxs)(o.p,{children:["We imagine two main ways people will use ",(0,l.jsx)(o.code,{children:".flow"})," files."]})]})}function h(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,l.jsx)(o,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},72710:e=>{e.exports=JSON.parse('{"permalink":"/blog/2015/12/01/Version-0.19.0","source":"@site/blog/2015-12-01-Version-0.19.0.md","title":"Version-0.19.0","description":"Flow v0.19.0 was deployed today! It has a ton of changes, which the","date":"2015-12-01T00:00:00.000Z","tags":[],"hasTruncateMarker":true,"authors":[{"name":"Gabe Levi","key":null,"page":null}],"frontMatter":{"author":"Gabe Levi","hide_table_of_contents":true},"unlisted":false,"prevItem":{"title":"Version 0.21.0","permalink":"/blog/2016/02/02/Version-0.21.0"},"nextItem":{"title":"Typing Generators with Flow","permalink":"/blog/2015/11/09/Generators"}}')}}]);