"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[6856],{28453:(e,t,o)=>{o.d(t,{R:()=>n,x:()=>i});var s=o(96540);const r={},a=s.createContext(r);function n(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),s.createElement(a.Provider,{value:t},e.children)}},62874:e=>{e.exports=JSON.parse('{"permalink":"/blog/2017/08/25/Private-Object-Properties-Using-Flows-Opaque-Type-Aliases","source":"@site/blog/2017-08-25-Private-Object-Properties-Using-Flows-Opaque-Type-Aliases.md","title":"Private Object Properties Using Flow\u2019s Opaque Type Aliases","description":"In the last few weeks, a proposal for private class fields in Javascript reached","date":"2017-08-25T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Jordan Brown","key":null,"page":null}],"frontMatter":{"title":"Private Object Properties Using Flow\u2019s Opaque Type Aliases","short-title":"Private Props w/ Opaque Types","author":"Jordan Brown","medium-link":"https://medium.com/flow-type/private-object-properties-using-flows-opaque-type-aliases-e0100e9b0282"},"unlisted":false,"prevItem":{"title":"Typing Higher-Order Components in Recompose With Flow","permalink":"/blog/2017/09/03/Flow-Support-in-Recompose"},"nextItem":{"title":"Even Better Support for React in Flow","permalink":"/blog/2017/08/16/Even-Better-Support-for-React-in-Flow"}}')},76856:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var s=o(62874),r=o(74848),a=o(28453);const n={title:"Private Object Properties Using Flow\u2019s Opaque Type Aliases","short-title":"Private Props w/ Opaque Types",author:"Jordan Brown","medium-link":"https://medium.com/flow-type/private-object-properties-using-flows-opaque-type-aliases-e0100e9b0282"},i=void 0,p={authorsImageUrls:[void 0]},l=[];function c(e){const t={a:"a",p:"p",...(0,a.R)(),...e.components};return(0,r.jsxs)(t.p,{children:["In the last few weeks, a proposal for ",(0,r.jsx)(t.a,{href:"https://github.com/tc39/proposal-class-fields",children:"private class fields in Javascript"})," reached\nstage 3. This is going to be a great way to hide implementation details away\nfrom users of your classes. However, locking yourself in to an OOP style of\nprogramming is not always ideal if you prefer a more functional style. Let\u2019s\ntalk about how you can use Flow\u2019s ",(0,r.jsx)(t.a,{href:"https://flow.org/en/docs/types/opaque-types/",children:"opaque type aliases"})," to get private properties\non any object type."]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);