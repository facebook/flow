"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[1400],{21400:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"config/options","title":".flowconfig [options]","description":"The [options] section in a .flowconfig file can contain several key-value","source":"@site/docs/config/options.md","sourceDirName":"config","slug":"/config/options","permalink":"/en/docs/config/options","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/flow/edit/main/website/docs/config/options.md","tags":[],"version":"current","frontMatter":{"title":".flowconfig [options]","slug":"/config/options"},"sidebar":"docsSidebar","previous":{"title":".flowconfig [version]","permalink":"/en/docs/config/version"},"next":{"title":".flowconfig [include]","permalink":"/en/docs/config/include"}}');var o=n(74848),l=n(28453),r=n(86543);const t={title:".flowconfig [options]",slug:"/config/options"},d=void 0,c={},a=[{value:"Available options",id:"toc-available-options",level:2},{value:"all",id:"toc-all",level:3},{value:"autoimports <SinceVersion></SinceVersion>",id:"toc-autoimports",level:3},{value:"babel_loose_array_spread",id:"toc-babel-loose-array-spread",level:3},{value:"emoji",id:"toc-emoji",level:3},{value:"enums",id:"toc-enums",level:3},{value:"exact_by_default",id:"toc-exact-by-default",level:3},{value:"experimental.const_params",id:"toc-experimental-const-params",level:3},{value:"include_warnings",id:"toc-include-warnings",level:3},{value:"lazy_mode",id:"toc-lazy-mode",level:3},{value:"max_header_tokens",id:"toc-max-header-tokens",level:3},{value:"module.file_ext",id:"toc-module-file-ext",level:3},{value:"module.ignore_non_literal_requires",id:"toc-module-ignore-non-literal-requires",level:3},{value:"module.name_mapper",id:"toc-module-name-mapper",level:3},{value:"module.name_mapper.extension",id:"toc-module-name-mapper-extension",level:3},{value:"module.system",id:"toc-module-system",level:3},{value:"module.system.node.main_field",id:"toc-module-system-node-main-field",level:3},{value:"module.system.node.resolve_dirname",id:"toc-module-system-node-resolve-dirname",level:3},{value:"module.use_strict",id:"toc-module-use-strict",level:3},{value:"munge_underscores",id:"toc-munge-underscores",level:3},{value:"no_flowlib",id:"toc-no-flowlib",level:3},{value:"react.runtime <SinceVersion></SinceVersion>",id:"toc-react-runtime",level:3},{value:"server.max_workers",id:"toc-server-max-workers",level:3},{value:"sharedmemory.hash_table_pow",id:"toc-sharedmemory-hash-table-pow",level:3},{value:"sharedmemory.heap_size",id:"toc-sharedmemory-heap-size",level:3},{value:"relay_integration",id:"toc-relay-integration",level:3},{value:"relay_integration.excludes",id:"toc-relay-integration-excludes",level:3},{value:"suppress_type <UntilVersion></UntilVersion>",id:"toc-suppress-type",level:3},{value:"traces",id:"toc-traces",level:3},{value:"use_mixed_in_catch_variables <SinceVersion></SinceVersion>",id:"toc-use-mixed-in-catch-variables",level:3},{value:"Deprecated options",id:"deprecated-options",level:2},{value:"esproposal.class_instance_fields <UntilVersion></UntilVersion>",id:"toc-esproposal-class-instance-fields",level:3},{value:"esproposal.class_static_fields <UntilVersion></UntilVersion>",id:"toc-esproposal-class-static-fields",level:3},{value:"esproposal.decorators <UntilVersion></UntilVersion>",id:"toc-esproposal-decorators",level:3},{value:"esproposal.export_star_as <UntilVersion></UntilVersion>",id:"toc-esproposal-export-star-as",level:3},{value:"esproposal.optional_chaining <UntilVersion></UntilVersion>",id:"toc-esproposal-optional-chaining",level:3},{value:"esproposal.nullish_coalescing <UntilVersion></UntilVersion>",id:"toc-esproposal-nullish-coalescing",level:3},{value:"inference_mode <SinceVersion></SinceVersion> <UntilVersion></UntilVersion>",id:"toc-inference-mode",level:3},{value:"log.file",id:"toc-log-file",level:3},{value:"sharedmemory.dirs",id:"toc-sharedmemory-dirs",level:3},{value:"sharedmemory.minimum_available",id:"toc-sharedmemory-minimum-available",level:3},{value:"strip_root <UntilVersion></UntilVersion>",id:"toc-strip-root",level:3},{value:"suppress_comment <UntilVersion></UntilVersion>",id:"toc-suppress-comment",level:3},{value:"temp_dir",id:"toc-temp-dir",level:3},{value:"types_first <SinceVersion></SinceVersion> <UntilVersion></UntilVersion>",id:"toc-types-first",level:3},{value:"well_formed_exports <SinceVersion></SinceVersion> <UntilVersion></UntilVersion>",id:"toc-well-formed-exports",level:3},{value:"well_formed_exports.includes <SinceVersion></SinceVersion> <UntilVersion></UntilVersion>",id:"toc-well-formed-exports-includes",level:3}];function h(e){const s={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(s.p,{children:["The ",(0,o.jsx)(s.code,{children:"[options]"})," section in a ",(0,o.jsx)(s.code,{children:".flowconfig"})," file can contain several key-value\npairs of the form:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"[options]\nkeyA=valueA\nkeyB=valueB\n"})}),"\n",(0,o.jsx)(s.p,{children:"Any options that are omitted will use their default values. Some options\ncan be overridden with command line flags."}),"\n",(0,o.jsx)(s.h2,{id:"toc-available-options",children:"Available options"}),"\n",(0,o.jsx)(s.h3,{id:"toc-all",children:"all"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"true"})," to check all files, not just those with ",(0,o.jsx)(s.code,{children:"@flow"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value for ",(0,o.jsx)(s.code,{children:"all"})," is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-autoimports",children:["autoimports ",(0,o.jsx)(r.V,{version:"0.143.0"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["When enabled, IDE autocomplete suggests the exports of other files, and the necessary ",(0,o.jsx)(s.code,{children:"import"}),' statements are automatically inserted. A "quick fix" code action is also provided on undefined variables that suggests matching imports.']}),"\n",(0,o.jsxs)(s.p,{children:["The default value for ",(0,o.jsx)(s.code,{children:"autoimports"})," is ",(0,o.jsx)(s.code,{children:"true"})," as of Flow v0.155.0."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-babel-loose-array-spread",children:"babel_loose_array_spread"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"true"})," to check that array spread syntax is only used with arrays, not arbitrary iterables (such as ",(0,o.jsx)(s.code,{children:"Map"})," or ",(0,o.jsx)(s.code,{children:"Set"}),"). This is useful if you transform your code with Babel in ",(0,o.jsx)(s.a,{href:"https://babeljs.io/docs/en/babel-plugin-transform-spread#loose",children:"loose mode"})," which makes this non-spec-compliant assumption at runtime."]}),"\n",(0,o.jsx)(s.p,{children:"For example:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:"const set = new Set();\nconst values = [...set]; // Valid ES2015, but Set is not compatible with $ReadOnlyArray in Babel loose mode\n"})}),"\n",(0,o.jsxs)(s.p,{children:["The default value for ",(0,o.jsx)(s.code,{children:"babel_loose_array_spread"})," is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-emoji",children:"emoji"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"true"})," to add emoji to the status messages that Flow\noutputs when it's busy checking your project."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value for ",(0,o.jsx)(s.code,{children:"emoji"})," is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-enums",children:"enums"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"true"})," to enable ",(0,o.jsx)(s.a,{href:"../../enums",children:"Flow Enums"}),".\n",(0,o.jsx)(s.a,{href:"../../enums/enabling-enums/",children:"Additional steps"})," are required beyond just enabling the ",(0,o.jsx)(s.code,{children:".flowconfig"})," option."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value for ",(0,o.jsx)(s.code,{children:"enums"})," is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-exact-by-default",children:"exact_by_default"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["When set to ",(0,o.jsx)(s.code,{children:"true"})," (the default as of version 0.202), Flow interprets object types as exact by default:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-flow",metastring:"[]",children:"type O1 = {foo: number} // exact\ntype O2 = {| foo: number |} // exact\ntype O3 = {foo: number, ...} // inexact\n"})}),"\n",(0,o.jsxs)(s.p,{children:["When this flag is ",(0,o.jsx)(s.code,{children:"false"}),", Flow has the following behavior:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-flow",metastring:"[]",children:"type O1 = {foo: number} // inexact\ntype O2 = {| foo: number |} // exact\ntype O3 = {foo: number, ...} // inexact\n"})}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["From inception to Flow version 0.199, the default value of the flag was ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsxs)(s.li,{children:["In versions 0.200 and 0.201, the flag was required to be explicitly set to either ",(0,o.jsx)(s.code,{children:"true"})," or ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsxs)(s.li,{children:["From version 0.202, the default value is ",(0,o.jsx)(s.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(s.p,{children:["You can read more about this change in our blog post about making ",(0,o.jsx)(s.a,{href:"https://medium.com/flow-type/exact-object-types-by-default-by-default-cc559af6f69",children:"exact by object types by default, by default"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-experimental-const-params",children:"experimental.const_params"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Setting this to ",(0,o.jsx)(s.code,{children:"true"})," makes Flow treat all function parameters as const\nbindings. Reassigning a param is an error which lets Flow be less conservative\nwith refinements."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-include-warnings",children:"include_warnings"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Setting this to ",(0,o.jsx)(s.code,{children:"true"})," makes Flow commands include warnings in the error output.\nWarnings are hidden by default in the CLI to avoid console spew. (An IDE is a\nmuch better interface to show warnings.)"]}),"\n",(0,o.jsxs)(s.p,{children:["The default value is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-lazy-mode",children:"lazy_mode"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["For more on lazy modes, see the ",(0,o.jsx)(s.a,{href:"../../lang/lazy-modes/",children:"lazy modes docs"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["Setting ",(0,o.jsx)(s.code,{children:"lazy_mode"})," in the ",(0,o.jsx)(s.code,{children:".flowconfig"})," will cause new Flow servers for that\nroot to use lazy mode (or no lazy mode if set to ",(0,o.jsx)(s.code,{children:"false"}),"). This option can\nbe overridden from the CLI using the ",(0,o.jsx)(s.code,{children:"--lazy-mode"})," flag."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-max-header-tokens",children:"max_header_tokens"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"integer"})]}),"\n",(0,o.jsxs)(s.p,{children:["Flow tries to avoid parsing non-flow files. This means Flow needs to\nstart lexing a file to see if it has ",(0,o.jsx)(s.code,{children:"@flow"})," or ",(0,o.jsx)(s.code,{children:"@noflow"})," in it. This option\nlets you configure how much of the file Flow lexes before it decides there is\nno relevant docblock."]}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["Neither ",(0,o.jsx)(s.code,{children:"@flow"})," nor ",(0,o.jsx)(s.code,{children:"@noflow"})," - Parse this file with Flow syntax disallowed and do not typecheck it."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"@flow"})," - Parse this file with Flow syntax allowed and typecheck it."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"@noflow"})," - Parse this file with Flow syntax allowed and do not typecheck it. This is meant as an escape hatch to suppress Flow in a file without having to delete all the Flow-specific syntax."]}),"\n"]}),"\n",(0,o.jsxs)(s.p,{children:["The default value of ",(0,o.jsx)(s.code,{children:"max_header_tokens"})," is 10."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-module-file-ext",children:"module.file_ext"}),"\n",(0,o.jsxs)(s.p,{children:["By default, Flow will look for files with the extensions ",(0,o.jsx)(s.code,{children:".js"}),", ",(0,o.jsx)(s.code,{children:".jsx"}),", ",(0,o.jsx)(s.code,{children:".mjs"}),",\n",(0,o.jsx)(s.code,{children:".cjs"})," and ",(0,o.jsx)(s.code,{children:".json"}),". You can override this behavior with this option."]}),"\n",(0,o.jsx)(s.p,{children:"For example, if you do:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"[options]\nmodule.file_ext=.foo\nmodule.file_ext=.bar\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Then Flow will instead look for the file extensions ",(0,o.jsx)(s.code,{children:".foo"})," and ",(0,o.jsx)(s.code,{children:".bar"}),"."]}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Note:"})," you can specify ",(0,o.jsx)(s.code,{children:"module.file_ext"})," multiple times"]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"toc-module-ignore-non-literal-requires",children:"module.ignore_non_literal_requires"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"true"})," and Flow will no longer complain when you use ",(0,o.jsx)(s.code,{children:"require()"}),"\nwith something other than a string literal."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-module-name-mapper",children:"module.name_mapper"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"regex -> string"})]}),"\n",(0,o.jsxs)(s.p,{children:["Specify a regular expression to match against module names, and a replacement\npattern, separated by a ",(0,o.jsx)(s.code,{children:"->"}),"."]}),"\n",(0,o.jsx)(s.p,{children:"For example:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"module.name_mapper='^image![a-zA-Z0-9$_]+$' -> 'ImageStub'\n"})}),"\n",(0,o.jsxs)(s.p,{children:["This makes Flow treat ",(0,o.jsx)(s.code,{children:"require('image!foo.jpg')"})," as if it were\n",(0,o.jsx)(s.code,{children:"require('ImageStub')"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["These are ",(0,o.jsx)(s.a,{href:"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Str.html#TYPEregexp",children:"OCaml regular expressions"}),".\nUse ",(0,o.jsx)(s.code,{children:"\\("})," and ",(0,o.jsx)(s.code,{children:"\\)"})," (slashes required!) to create a capturing group, which you\ncan refer to in the replacement pattern as ",(0,o.jsx)(s.code,{children:"\\1"})," (up to ",(0,o.jsx)(s.code,{children:"\\9"}),")."]}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Note:"})," you can specify ",(0,o.jsx)(s.code,{children:"module.name_mapper"})," multiple times"]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"toc-module-name-mapper-extension",children:"module.name_mapper.extension"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"string -> string"})]}),"\n",(0,o.jsxs)(s.p,{children:["Specify a file extension to match, and a replacement module name, separated by\na ",(0,o.jsx)(s.code,{children:"->"}),"."]}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Note:"})," This is just shorthand for\n",(0,o.jsx)(s.code,{children:"module.name_mapper='^\\(.*\\)\\.EXTENSION$' -> 'TEMPLATE'"}),")"]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"For example:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"module.name_mapper.extension='css' -> '<PROJECT_ROOT>/CSSFlowStub.js.flow'\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Makes Flow treat ",(0,o.jsx)(s.code,{children:"require('foo.css')"})," as if it were\n",(0,o.jsx)(s.code,{children:"require(PROJECT_ROOT + '/CSSFlowStub')"}),"."]}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Note:"})," You can specify ",(0,o.jsx)(s.code,{children:"module.name_mapper.extension"})," multiple times for\ndifferent extensions."]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"toc-module-system",children:"module.system"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"node | haste"})]}),"\n",(0,o.jsxs)(s.p,{children:["The module system to use to resolve ",(0,o.jsx)(s.code,{children:"import"})," and ",(0,o.jsx)(s.code,{children:"require"}),".\nHaste mode is used by Meta."]}),"\n",(0,o.jsxs)(s.p,{children:["The default is ",(0,o.jsx)(s.code,{children:"node"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-module-system-node-main-field",children:"module.system.node.main_field"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"string"})]}),"\n",(0,o.jsxs)(s.p,{children:["Flow reads ",(0,o.jsx)(s.code,{children:"package.json"})," files for the ",(0,o.jsx)(s.code,{children:'"name"'})," and ",(0,o.jsx)(s.code,{children:'"main"'})," fields to figure\nout the name of the module and which file should be used to provide that\nmodule."]}),"\n",(0,o.jsxs)(s.p,{children:["So if Flow sees this in the ",(0,o.jsx)(s.code,{children:".flowconfig"}),":"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"[options]\nmodule.system.node.main_field=foo\nmodule.system.node.main_field=bar\nmodule.system.node.main_field=baz\n"})}),"\n",(0,o.jsxs)(s.p,{children:["and then it comes across a ",(0,o.jsx)(s.code,{children:"package.json"})," with"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:'{\n  "name": "kittens",\n  "main": "main.js",\n  "bar": "bar.js",\n  "baz": "baz.js"\n}\n'})}),"\n",(0,o.jsxs)(s.p,{children:["Flow will use ",(0,o.jsx)(s.code,{children:"bar.js"})," to provide the ",(0,o.jsx)(s.code,{children:'"kittens"'})," module."]}),"\n",(0,o.jsxs)(s.p,{children:["If this option is unspecified, Flow will always use the ",(0,o.jsx)(s.code,{children:'"main"'})," field."]}),"\n",(0,o.jsxs)(s.p,{children:["See ",(0,o.jsx)(s.a,{href:"https://github.com/facebook/flow/issues/5725",children:"this GitHub issue for the original motivation"})]}),"\n",(0,o.jsx)(s.h3,{id:"toc-module-system-node-resolve-dirname",children:"module.system.node.resolve_dirname"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"string"})]}),"\n",(0,o.jsxs)(s.p,{children:["By default, Flow will look in directories named ",(0,o.jsx)(s.code,{children:"node_modules"})," for node\nmodules. You can configure this behavior with this option."]}),"\n",(0,o.jsx)(s.p,{children:"For example, if you do:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"[options]\nmodule.system.node.resolve_dirname=node_modules\nmodule.system.node.resolve_dirname=custom_node_modules\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Then Flow will look in directories named ",(0,o.jsx)(s.code,{children:"node_modules"})," or\n",(0,o.jsx)(s.code,{children:"custom_node_modules"}),"."]}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Note:"})," you can specify ",(0,o.jsx)(s.code,{children:"module.system.node.resolve_dirname"})," multiple times"]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"toc-module-use-strict",children:"module.use_strict"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"true"})," if you use a transpiler that adds ",(0,o.jsx)(s.code,{children:'"use strict";'})," to the top\nof every module."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-munge-underscores",children:"munge_underscores"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"true"})," to have Flow treat underscore-prefixed class properties and\nmethods as private. This should be used in conjunction with ",(0,o.jsxs)(s.a,{href:"https://github.com/facebook/jstransform/blob/master/visitors/es6-class-visitors.js",children:[(0,o.jsx)(s.code,{children:"jstransform"}),"'s\nES6 class transform"]}),",\nwhich enforces the same privacy at runtime."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-no-flowlib",children:"no_flowlib"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Flow has builtin library definitions. Setting this to ",(0,o.jsx)(s.code,{children:"true"})," will tell Flow to\nignore the builtin library definitions."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-react-runtime",children:["react.runtime ",(0,o.jsx)(r.V,{version:"0.123.0"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"automatic | classic"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"automatic"})," if you are using React's automatic runtime in ",(0,o.jsx)(s.code,{children:"@babel/plugin-transform-react-jsx"}),".\nOtherwise, use ",(0,o.jsx)(s.code,{children:"classic"}),". ",(0,o.jsx)(s.a,{href:"https://babeljs.io/docs/en/babel-plugin-transform-react-jsx",children:"See the babel documentation"}),"\nfor details about the transform."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value is ",(0,o.jsx)(s.code,{children:"classic"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-server-max-workers",children:"server.max_workers"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"integer"})]}),"\n",(0,o.jsx)(s.p,{children:"The maximum number of workers the Flow server can start. By default, the server\nwill use all available cores."}),"\n",(0,o.jsx)(s.h3,{id:"toc-sharedmemory-hash-table-pow",children:"sharedmemory.hash_table_pow"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"unsigned integer"})]}),"\n",(0,o.jsx)(s.p,{children:"The 3 largest parts of the shared memory are a dependency table, a hash table,\nand a heap. While the heap grows and shrinks, the two tables are allocated in\nfull. This option lets you change the size of the hash table."}),"\n",(0,o.jsx)(s.p,{children:"Setting this option to X means the table will support up to 2^X elements,\nwhich is 16*2^X bytes."}),"\n",(0,o.jsx)(s.p,{children:"By default, this is set to 19 (Table size is 2^19, which is 8 megabytes)"}),"\n",(0,o.jsx)(s.h3,{id:"toc-sharedmemory-heap-size",children:"sharedmemory.heap_size"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"unsigned integer"})]}),"\n",(0,o.jsx)(s.p,{children:'This option configures the maximum possible size for the shared heap. You should\nmost likely not need to configure this, as it doesn\'t really affect how much\nRSS Flow uses. However, if you are working on a massive codebase you might see\nthe following error after init: "Heap init size is too close to max heap size;\nGC will never get triggered!" In this case, you may need to increase the size\nof the heap.'}),"\n",(0,o.jsx)(s.p,{children:"By default, this is set to 26843545600 (25 * 2^30 bytes, which is 25GiB)"}),"\n",(0,o.jsx)(s.h3,{id:"toc-relay-integration",children:"relay_integration"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["This option enables Flow's ",(0,o.jsx)(s.a,{href:"https://relay.dev",children:"Relay"})," integration. With the\nintegration enabled Flow will infer the types of ",(0,o.jsx)(s.code,{children:"graphql"})," tagged template\nliterals as being the types that the Relay compiler emitted for that\nfragment/mutaiton/query/etc. This allows users to omit type parameters from\ncommon Relay APIs like ",(0,o.jsx)(s.code,{children:"useFragment"})," and ",(0,o.jsx)(s.code,{children:"usePreloadedQuery"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-relay-integration-excludes",children:"relay_integration.excludes"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"string"})]}),"\n",(0,o.jsx)(s.p,{children:"This option allows you to exclude some directories in the project from using\nFlow's Relay integration. For example"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"relay_integration=true\nrelay_integration.excludes=<PROJECT_ROOT>/dirA\nrelay_integration.excludes=<PROJECT_ROOT>/dirB\n"})}),"\n",(0,o.jsxs)(s.h3,{id:"toc-suppress-type",children:["suppress_type ",(0,o.jsx)(r.v,{version:"0.279"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"string"})]}),"\n",(0,o.jsxs)(s.p,{children:["This option lets you alias ",(0,o.jsx)(s.code,{children:"any"})," with a given string. This is useful for\nexplaining why you're using ",(0,o.jsx)(s.code,{children:"any"}),". For example, let's say you sometimes want\nto sometimes use ",(0,o.jsx)(s.code,{children:"any"})," to suppress an error and sometimes to mark a TODO.\nYour code might look like"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"const myString: any = 1 + 1;\nconst myBoolean: any = 1 + 1;\n"})}),"\n",(0,o.jsx)(s.p,{children:"If you add the following to your configuration:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"[options]\nsuppress_type=$FlowFixMe\nsuppress_type=$FlowTODO\n"})}),"\n",(0,o.jsx)(s.p,{children:"You can update your code to the more readable:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"const myString: $FlowFixMe = 1 + 1;\nconst myBoolean: $FlowTODO = 1 + 1;\n"})}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Note:"})," You can specify ",(0,o.jsx)(s.code,{children:"suppress_type"})," multiple times."]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"You can achieve the same effect by adding the following to your global library definition:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"type $FlowTODO = any;\n"})}),"\n",(0,o.jsx)(s.h3,{id:"toc-traces",children:"traces"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"integer"})]}),"\n",(0,o.jsx)(s.p,{children:"Enables traces on all error output (showing additional details about the flow\nof types through the system), to the depth specified. This can be very\nexpensive, so is disabled by default."}),"\n",(0,o.jsxs)(s.h3,{id:"toc-use-mixed-in-catch-variables",children:["use_mixed_in_catch_variables ",(0,o.jsx)(r.V,{version:"0.201"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Changes the default type of ",(0,o.jsx)(s.code,{children:"catch"})," variables from ",(0,o.jsx)(s.a,{href:"../../types/any",children:(0,o.jsx)(s.code,{children:"any"})})," to ",(0,o.jsx)(s.a,{href:"../../types/mixed",children:(0,o.jsx)(s.code,{children:"mixed"})}),". E.g."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-flow",metastring:"[]",children:"try {\n} catch (e) {\n}\n"})}),"\n",(0,o.jsxs)(s.p,{children:["in the above example, if the option is ",(0,o.jsx)(s.code,{children:"true"}),", ",(0,o.jsx)(s.code,{children:"catch"})," will be typed as ",(0,o.jsx)(s.code,{children:"mixed"})," as it lacks an explicit type annotation."]}),"\n",(0,o.jsx)(s.h2,{id:"deprecated-options",children:"Deprecated options"}),"\n",(0,o.jsx)(s.p,{children:"The following options no longer exist in the latest version of Flow:"}),"\n",(0,o.jsxs)(s.h3,{id:"toc-esproposal-class-instance-fields",children:["esproposal.class_instance_fields ",(0,o.jsx)(r.v,{version:"0.148"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"enable | ignore | warn"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"warn"})," to indicate that Flow should give a warning on use of\ninstance ",(0,o.jsx)(s.a,{href:"https://github.com/tc39/proposal-class-public-fields",children:"class fields"}),"\nper the pending spec."]}),"\n",(0,o.jsxs)(s.p,{children:["You may also set this to ",(0,o.jsx)(s.code,{children:"ignore"})," to indicate that Flow should simply ignore\nthe syntax (i.e. Flow will not use this syntax to indicate the presence of a\nproperty on instances of the class)."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value of this option is ",(0,o.jsx)(s.code,{children:"enable"}),", which allows use of this proposed\nsyntax."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-esproposal-class-static-fields",children:["esproposal.class_static_fields ",(0,o.jsx)(r.v,{version:"0.148"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"enable | ignore | warn"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"warn"})," to indicate that Flow should give a warning on use of static\n",(0,o.jsx)(s.a,{href:"https://github.com/tc39/proposal-class-public-fields",children:"class fields"}),"\nper the pending spec."]}),"\n",(0,o.jsxs)(s.p,{children:["You may also set this to ",(0,o.jsx)(s.code,{children:"ignore"})," to indicate that Flow should simply ignore\nthe syntax (i.e. Flow will not use this syntax to indicate the presence of a\nstatic property on the class)."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value of this option is ",(0,o.jsx)(s.code,{children:"enable"}),", which allows use of this proposed\nsyntax."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-esproposal-decorators",children:["esproposal.decorators ",(0,o.jsx)(r.v,{version:"0.148"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"ignore | warn"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"ignore"})," to indicate that Flow should ignore decorators."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value of this option is ",(0,o.jsx)(s.code,{children:"warn"}),", which gives a warning on use since\nthis proposal is still very early-stage."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-esproposal-export-star-as",children:["esproposal.export_star_as ",(0,o.jsx)(r.v,{version:"0.148"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"enable | ignore | warn"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"enable"})," to indicate that Flow should support the ",(0,o.jsx)(s.code,{children:"export * as"}),"\nsyntax from ",(0,o.jsx)(s.a,{href:"https://github.com/leebyron/ecmascript-more-export-from",children:"leebyron's proposal"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["You may also set this to ",(0,o.jsx)(s.code,{children:"ignore"})," to indicate that Flow should simply ignore\nthe syntax. The default value of this option is ",(0,o.jsx)(s.code,{children:"warn"}),", which gives a warning\non use since this proposal is still very early-stage."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-esproposal-optional-chaining",children:["esproposal.optional_chaining ",(0,o.jsx)(r.v,{version:"0.148"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"enable | ignore | warn"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"enable"})," to indicate that Flow should support the use of\n",(0,o.jsx)(s.a,{href:"https://github.com/tc39/proposal-optional-chaining",children:"optional chaining"}),"\nper the pending spec."]}),"\n",(0,o.jsxs)(s.p,{children:["You may also set this to ",(0,o.jsx)(s.code,{children:"ignore"})," to indicate that Flow should simply ignore\nthe syntax."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value of this option is ",(0,o.jsx)(s.code,{children:"warn"}),", which gives a warning on\nuse since this proposal is still very early-stage."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-esproposal-nullish-coalescing",children:["esproposal.nullish_coalescing ",(0,o.jsx)(r.v,{version:"0.148"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"enable | ignore | warn"})]}),"\n",(0,o.jsxs)(s.p,{children:["Set this to ",(0,o.jsx)(s.code,{children:"enable"})," to indicate that Flow should support the use of\n",(0,o.jsx)(s.a,{href:"https://github.com/tc39/proposal-nullish-coalescing",children:"nullish coalescing"}),"\nper the pending spec."]}),"\n",(0,o.jsxs)(s.p,{children:["You may also set this to ",(0,o.jsx)(s.code,{children:"ignore"})," to indicate that Flow should simply ignore\nthe syntax."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value of this option is ",(0,o.jsx)(s.code,{children:"warn"}),", which gives a warning on\nuse since this proposal is still very early-stage."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-inference-mode",children:["inference_mode ",(0,o.jsx)(r.V,{version:"0.184.0"})," ",(0,o.jsx)(r.v,{version:"0.202.0"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"classic | constrain-writes"})]}),"\n",(0,o.jsxs)(s.p,{children:["Setting this to ",(0,o.jsx)(s.code,{children:"constrain-writes"})," will enable the constrained-writes inference mode."]}),"\n",(0,o.jsxs)(s.p,{children:["For more info, see the ",(0,o.jsx)(s.a,{href:"../../lang/variables",children:"variable declaration docs"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value is ",(0,o.jsx)(s.code,{children:"classic"})]}),"\n",(0,o.jsx)(s.h3,{id:"toc-log-file",children:"log.file"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"string"})]}),"\n",(0,o.jsxs)(s.p,{children:["The path to the log file (defaults to ",(0,o.jsx)(s.code,{children:"/tmp/flow/<escaped root path>.log"}),")."]}),"\n",(0,o.jsx)(s.h3,{id:"toc-sharedmemory-dirs",children:"sharedmemory.dirs"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"string"})]}),"\n",(0,o.jsx)(s.p,{children:"This affects Linux only."}),"\n",(0,o.jsxs)(s.p,{children:["Flow's shared memory lives in a memory mapped file. On more modern versions of\nLinux (3.17+), there is a system call ",(0,o.jsx)(s.code,{children:"memfd_create"})," which allows Flow to create\nthe file anonymously and only in memory. However, in older kernels, Flow needs\nto create a file on the file system. Ideally this file lives on a memory-backed\ntmpfs. This option lets you decide where that file is created."]}),"\n",(0,o.jsxs)(s.p,{children:["By default this option is set to ",(0,o.jsx)(s.code,{children:"/dev/shm"})," and ",(0,o.jsx)(s.code,{children:"/tmp"})]}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Note:"})," You can specify ",(0,o.jsx)(s.code,{children:"sharedmemory.dirs"})," multiple times."]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"toc-sharedmemory-minimum-available",children:"sharedmemory.minimum_available"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"unsigned integer"})]}),"\n",(0,o.jsx)(s.p,{children:"This affects Linux only."}),"\n",(0,o.jsxs)(s.p,{children:["As explained in the ",(0,o.jsx)(s.a,{href:"#toc-sharedmemory-dirs-string",children:(0,o.jsx)(s.code,{children:"sharedmemory.dirs"})})," option's description, Flow needs to\ncreate a file on a filesystem for older kernels. ",(0,o.jsx)(s.code,{children:"sharedmemory.dirs"})," specifies\na list of locations where the shared memory file can be created. For each\nlocation, Flow will check to make sure the filesystem has enough space for the\nshared memory file. If Flow will likely run out of space, it skips that location\nand tries the next. This option lets you configure the minimum amount of space\nneeded on a filesystem for shared memory."]}),"\n",(0,o.jsx)(s.p,{children:"By default it is 536870912 (2^29 bytes, which is half a gigabyte)."}),"\n",(0,o.jsxs)(s.h3,{id:"toc-strip-root",children:["strip_root ",(0,o.jsx)(r.v,{version:"0.48"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["Obsolete. Set this to ",(0,o.jsx)(s.code,{children:"true"})," to always strip the root directory from file paths\nin error messages when using ",(0,o.jsx)(s.code,{children:"--json"}),", ",(0,o.jsx)(s.code,{children:"--from emacs"}),", and ",(0,o.jsx)(s.code,{children:"--from vim"}),".\nDo not use this option. Instead, pass the command line flag ",(0,o.jsx)(s.code,{children:"--strip-root"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["By default this is ",(0,o.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-suppress-comment",children:["suppress_comment ",(0,o.jsx)(r.v,{version:"0.126"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"regex"})]}),"\n",(0,o.jsx)(s.p,{children:"Defines a magical comment that suppresses any Flow errors on the following\nline. For example:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"suppress_comment= \\\\(.\\\\|\\n\\\\)*\\\\$FlowFixMe\n"})}),"\n",(0,o.jsx)(s.p,{children:"will match a comment like this:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"// $FlowFixMe: suppressing this error until we can refactor\nvar x : string = 123;\n"})}),"\n",(0,o.jsx)(s.p,{children:'and suppress the error. If there is no error on the next line (the suppression\nis unnecessary), an "Unused suppression" warning will be shown instead.'}),"\n",(0,o.jsxs)(s.p,{children:["If no suppression comments are specified in your config, Flow will apply one\ndefault: ",(0,o.jsx)(s.code,{children:"// $FlowFixMe"}),"."]}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Note:"})," You can specify ",(0,o.jsx)(s.code,{children:"suppress_comment"})," multiple times. If you do define\nany ",(0,o.jsx)(s.code,{children:"suppress_comment"}),"s, the built-in ",(0,o.jsx)(s.code,{children:"$FlowFixMe"})," suppression will be erased\nin favor of the regexps you specify. If you wish to use ",(0,o.jsx)(s.code,{children:"$FlowFixMe"})," with\nsome additional custom suppression comments, you must manually specify\n",(0,o.jsx)(s.code,{children:"\\\\(.\\\\|\\n\\\\)*\\\\$FlowFixMe"})," in your custom list of suppressions."]}),"\n"]}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Note:"})," In version v0.127.0, the option to specify the suppression comment\nsyntax was removed. ",(0,o.jsx)(s.code,{children:"$FlowFixMe"}),", ",(0,o.jsx)(s.code,{children:"$FlowIssue"}),", ",(0,o.jsx)(s.code,{children:"$FlowExpectedError"}),",\nand ",(0,o.jsx)(s.code,{children:"$FlowIgnore"})," became the only standard suppressions."]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"toc-temp-dir",children:"temp_dir"}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"string"})]}),"\n",(0,o.jsxs)(s.p,{children:["Tell Flow which directory to use as a temp directory. Can be overridden with the\ncommand line flag ",(0,o.jsx)(s.code,{children:"--temp-dir"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value is ",(0,o.jsx)(s.code,{children:"/tmp/flow"}),"."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-types-first",children:["types_first ",(0,o.jsx)(r.V,{version:"0.125.0"})," ",(0,o.jsx)(r.v,{version:"0.142"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsxs)(s.p,{children:["For more on types-first mode, see the ",(0,o.jsx)(s.a,{href:"../../lang/types-first/",children:"types-first docs"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["Flow builds intermediate artifacts to represent signatures of modules as they are\nchecked. If this option is set to ",(0,o.jsx)(s.code,{children:"false"}),", then these artifacts are built using\ninferred type information. If this option is set to ",(0,o.jsx)(s.code,{children:"true"}),", then they are built\nusing type annotations at module boundaries."]}),"\n",(0,o.jsxs)(s.p,{children:["The default value for ",(0,o.jsx)(s.code,{children:"types_first"})," is ",(0,o.jsx)(s.code,{children:"true"})," (as of version 0.134)."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-well-formed-exports",children:["well_formed_exports ",(0,o.jsx)(r.V,{version:"0.125.0"})," ",(0,o.jsx)(r.v,{version:"0.142"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"boolean"})]}),"\n",(0,o.jsx)(s.p,{children:"Enforce the following restrictions on file exports:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["Statements manipulating ",(0,o.jsx)(s.code,{children:"module.exports"})," and the ",(0,o.jsx)(s.code,{children:"exports"})," alias may only appear\nas top-level statements."]}),"\n",(0,o.jsxs)(s.li,{children:["Parts of the source that are visible from a file's exports need to be annotated\nunless their type can be trivially inferred (e.g. the exported expression is a\nnumeric literal). This is a requirement for types-first mode to function properly.\nFailure to properly annotate exports raise ",(0,o.jsx)(s.code,{children:"signature-verification-failure"}),"s."]}),"\n"]}),"\n",(0,o.jsxs)(s.p,{children:["This option is set to ",(0,o.jsx)(s.code,{children:"true"})," by default, since it is implied by ",(0,o.jsx)(s.a,{href:"#toc-types-first-boolean",children:(0,o.jsx)(s.code,{children:"types_first"})}),",\nbut the option is useful on its own when upgrading a project from classic mode to\ntypes-first mode."]}),"\n",(0,o.jsxs)(s.h3,{id:"toc-well-formed-exports-includes",children:["well_formed_exports.includes ",(0,o.jsx)(r.V,{version:"0.128.0"})," ",(0,o.jsx)(r.v,{version:"0.142"})]}),"\n",(0,o.jsxs)(s.p,{children:["Type: ",(0,o.jsx)(s.code,{children:"string"})]}),"\n",(0,o.jsxs)(s.p,{children:["Limit the scope of the ",(0,o.jsx)(s.code,{children:"well_formed_exports"})," requirement to a specific directory\nof this project. For example"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"well_formed_exports=true\nwell_formed_exports.includes=<PROJECT_ROOT>/dirA\nwell_formed_exports.includes=<PROJECT_ROOT>/dirB\n"})}),"\n",(0,o.jsxs)(s.p,{children:["will only report export related errors in files under ",(0,o.jsx)(s.code,{children:"dirA"})," and ",(0,o.jsx)(s.code,{children:"dirB"}),". This option\nrequires ",(0,o.jsx)(s.code,{children:"well_formed_exports"})," to be set to ",(0,o.jsx)(s.code,{children:"true"}),"."]}),"\n",(0,o.jsx)(s.p,{children:"The purpose of this option is to help prepare a codebase for Flow types-first mode."}),"\n",(0,o.jsxs)(s.p,{children:["Between versions v0.125.0 and v0.127.0, this option was named ",(0,o.jsx)(s.code,{children:"well_formed_exports.whitelist"}),"."]})]})}function p(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>t});var i=n(96540);const o={},l=i.createContext(o);function r(e){const s=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(l.Provider,{value:s},e.children)}},86543:(e,s,n)=>{n.d(s,{V:()=>o,v:()=>l});n(96540);var i=n(74848);function o(e){let{version:s}=e;return(0,i.jsxs)("span",{class:"version added",title:`Added in ${s}`,children:["\u2265",s]})}function l(e){let{version:s}=e;return(0,i.jsxs)("span",{class:"version removed",title:`Removed after ${s}`,children:["\u2264",s]})}}}]);