"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[26],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(96540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}},80026:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var o=t(93155),i=t(74848),s=t(28453);const r={title:"Announcing User Defined Type Guards in Flow","short-title":"Announcing User Defined Type Guards in Flow",author:"Panagiotis Vekris","medium-link":"https://medium.com/flow-type/announcing-user-defined-type-guards-in-flow-b979bb2e78cf"},a=void 0,u={authorsImageUrls:[void 0]},c=[];function l(e){const n={p:"p",...(0,s.R)(),...e.components};return(0,i.jsx)(n.p,{children:"Flow now lets you define a function that encodes a type predicate over its parameter."})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},93155:e=>{e.exports=JSON.parse('{"permalink":"/blog/2024/03/05/Announcing-User-Defined-Type-Guards-in-Flow","source":"@site/blog/2024-03-05-Announcing-User-Defined-Type-Guards-in-Flow.md","title":"Announcing User Defined Type Guards in Flow","description":"Flow now lets you define a function that encodes a type predicate over its parameter.","date":"2024-03-05T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Panagiotis Vekris","key":null,"page":null}],"frontMatter":{"title":"Announcing User Defined Type Guards in Flow","short-title":"Announcing User Defined Type Guards in Flow","author":"Panagiotis Vekris","medium-link":"https://medium.com/flow-type/announcing-user-defined-type-guards-in-flow-b979bb2e78cf"},"unlisted":false,"prevItem":{"title":"Announcing Conditional Types","permalink":"/blog/2024/03/05/Announcing-Conditional-Types"},"nextItem":{"title":"New type casting syntax for Flow: \'as\'","permalink":"/blog/2024/02/06/New-type-casting-syntax-for-Flow-as"}}')}}]);