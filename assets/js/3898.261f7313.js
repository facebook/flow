"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[3898],{28453:(e,o,t)=>{t.d(o,{R:()=>l,x:()=>i});var s=t(96540);const n={},r=s.createContext(n);function l(e){const o=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(r.Provider,{value:o},e.children)}},73898:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"tools/flow-remove-types","title":"flow-remove-types","description":"flow-remove-types is a small","source":"@site/docs/tools/flow-remove-types.md","sourceDirName":"tools","slug":"/tools/flow-remove-types","permalink":"/en/docs/tools/flow-remove-types","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/flow/edit/main/website/docs/tools/flow-remove-types.md","tags":[],"version":"current","frontMatter":{"title":"flow-remove-types","slug":"/tools/flow-remove-types"},"sidebar":"docsSidebar","previous":{"title":"ESLint","permalink":"/en/docs/tools/eslint"},"next":{"title":"Editors","permalink":"/en/docs/editors"}}');var n=t(74848),r=t(28453);const l={title:"flow-remove-types",slug:"/tools/flow-remove-types"},i=void 0,c={},a=[];function d(e){const o={a:"a",blockquote:"blockquote",code:"code",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.a,{href:"https://github.com/facebook/flow/tree/master/packages/flow-remove-types",children:(0,n.jsx)(o.code,{children:"flow-remove-types"})})," is a small\nCLI tool for stripping Flow type annotations from files. It's a lighter-weight\nalternative to Babel for projects that don't need everything Babel provides."]}),"\n",(0,n.jsxs)(o.p,{children:["First install ",(0,n.jsx)(o.code,{children:"flow-remove-types"})," with either\n",(0,n.jsx)(o.a,{href:"https://yarnpkg.com/",children:"Yarn"})," or ",(0,n.jsx)(o.a,{href:"https://www.npmjs.com/",children:"npm"}),"."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-sh",children:"yarn add --dev flow-remove-types\n# or\nnpm install --save-dev flow-remove-types\n"})}),"\n",(0,n.jsxs)(o.p,{children:["If you then put all your source files in a ",(0,n.jsx)(o.code,{children:"src"})," directory you can compile them\nto another directory by running:"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-sh",children:"yarn run flow-remove-types src/ -d lib/\n"})}),"\n",(0,n.jsxs)(o.p,{children:["You can add this to your ",(0,n.jsx)(o.code,{children:"package.json"})," scripts easily."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-json",children:'{\n  "name": "my-project",\n  "main": "lib/index.js",\n  "scripts": {\n    "build": "flow-remove-types src/ -d lib/",\n    "prepublish": "yarn run build"\n  }\n}\n'})}),"\n",(0,n.jsxs)(o.blockquote,{children:["\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.strong,{children:"Note:"})," You'll probably want to add a ",(0,n.jsx)(o.code,{children:"prepublish"})," script that runs this\ntransform as well, so that it runs before you publish your code to the npm\nregistry."]}),"\n"]})]})}function p(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);