"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[2920],{28453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>l});var a=n(96540);const i={},o=a.createContext(i);function s(t){const e=a.useContext(o);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),a.createElement(o.Provider,{value:e},t.children)}},92920:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var a=n(98034),i=n(74848),o=n(28453);const s={title:"Announcing Partial & Required Flow utility types + catch annotations","short-title":"Announcing Partial & Required Flow utility types",author:"George Zahariev","medium-link":"https://medium.com/flow-type/announcing-partial-required-flow-utility-types-catch-annotations-3a32f0bf2a20"},l=void 0,r={authorsImageUrls:[void 0]},u=[];function c(t){const e={code:"code",p:"p",...(0,o.R)(),...t.components};return(0,i.jsxs)(e.p,{children:["Starting in Flow version 0.201, make an object type\u2019s fields all optional using ",(0,i.jsx)(e.code,{children:"Partial<ObjType>"})," (use instead of the unsafe ",(0,i.jsx)(e.code,{children:"$Shape"}),"),\nand make an object type\u2019s optional fields required with ",(0,i.jsx)(e.code,{children:"Required<ObjType>"}),"."]})}function d(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(c,{...t})}):c(t)}},98034:t=>{t.exports=JSON.parse('{"permalink":"/blog/2023/03/15/Announcing-Partial-and-Required-Flow-utility-types-and-catch-annotations","source":"@site/blog/2023-03-15-Announcing-Partial-and-Required-Flow-utility-types-and-catch-annotations.md","title":"Announcing Partial & Required Flow utility types + catch annotations","description":"Starting in Flow version 0.201, make an object type\u2019s fields all optional using Partial (use instead of the unsafe $Shape),","date":"2023-03-15T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"George Zahariev","key":null,"page":null}],"frontMatter":{"title":"Announcing Partial & Required Flow utility types + catch annotations","short-title":"Announcing Partial & Required Flow utility types","author":"George Zahariev","medium-link":"https://medium.com/flow-type/announcing-partial-required-flow-utility-types-catch-annotations-3a32f0bf2a20"},"unlisted":false,"prevItem":{"title":"Flow can now detect unused Promises","permalink":"/blog/2023/04/10/Unused-Promise"},"nextItem":{"title":"Exact object types by default, by default","permalink":"/blog/2023/02/16/Exact-object-types-by-default-by-default"}}')}}]);