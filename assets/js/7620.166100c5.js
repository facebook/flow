"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[7620],{27620:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"types/empty","title":"Empty","description":"The empty type has no values. It is the subtype of all other types (i.e. the bottom type).","source":"@site/docs/types/empty.md","sourceDirName":"types","slug":"/types/empty","permalink":"/en/docs/types/empty","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/flow/edit/main/website/docs/types/empty.md","tags":[],"version":"current","frontMatter":{"title":"Empty","slug":"/types/empty"},"sidebar":"docsSidebar","previous":{"title":"Mixed","permalink":"/en/docs/types/mixed"},"next":{"title":"Any","permalink":"/en/docs/types/any"}}');var o=n(74848),r=n(28453);const i={title:"Empty",slug:"/types/empty"},c=void 0,a={},l=[];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"empty"})," type has no values. It is the ",(0,o.jsx)(t.a,{href:"../../lang/type-hierarchy",children:"subtype of all other types"})," (i.e. the ",(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Bottom_type",children:"bottom type"}),").\nIn this way it is the opposite of ",(0,o.jsx)(t.a,{href:"../mixed",children:(0,o.jsx)(t.code,{children:"mixed"})}),", which is the supertype of all types."]}),"\n",(0,o.jsxs)(t.p,{children:["It is not common to annotate your code using ",(0,o.jsx)(t.code,{children:"empty"}),". However, there are a couple of situations that it might be useful:"]}),"\n",(0,o.jsxs)(t.p,{children:["If you have a function that always throws, you can annotate the return as ",(0,o.jsx)(t.code,{children:"empty"}),", as the function never returns:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-flow",metastring:"[]",children:"function throwIt(msg: string): empty {\n  throw new Error(msg);\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["You can use a cast to ",(0,o.jsx)(t.code,{children:"empty"})," to assert that you have refined away all members of a union:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-flow",metastring:"[]",children:"function f(x: 'a' | 'b'): number {\n  switch (x) {\n    case 'a':\n      return 1;\n    case 'b':\n      return 2;\n    default:\n      return (x: empty);\n  }\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["If you had not checked for all members of the union (for example, changed ",(0,o.jsx)(t.code,{children:"x"})," to be of type ",(0,o.jsx)(t.code,{children:"'a' | 'b' | 'c'"}),"),\nthen ",(0,o.jsx)(t.code,{children:"x"})," would no longer be ",(0,o.jsx)(t.code,{children:"empty"})," in the ",(0,o.jsx)(t.code,{children:"default"}),", and Flow would error."]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["Note: If you want exhaustively checked enums by default, without having to cast to ",(0,o.jsx)(t.code,{children:"empty"}),",\nyou could enable and use ",(0,o.jsx)(t.a,{href:"../../enums",children:"Flow Enums"})," in your project."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Since ",(0,o.jsx)(t.code,{children:"empty"})," is the subtype of all types, all operations are permitted on something that has the ",(0,o.jsx)(t.code,{children:"empty"})," type.\nHowever since no values can be ",(0,o.jsx)(t.code,{children:"empty"}),', this is "safe", unlike with ',(0,o.jsx)(t.a,{href:"../any",children:(0,o.jsx)(t.code,{children:"any"})}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-flow",metastring:"[]",children:'const str = "hello";\n\nif (typeof str === "string") {\n  (str: string); // Yes it\'s a string\n} else {\n  // Works! Since we will never enter this branch\n  (str: empty);\n  const n: number = str + 1;\n}\n'})}),"\n",(0,o.jsxs)(t.p,{children:['We put "safe" in quotes above, as due type safety holes in your code or bugs within Flow itself,\nit is possible to get values which are ',(0,o.jsx)(t.code,{children:"empty"})," typed."]}),"\n",(0,o.jsxs)(t.p,{children:["You can use the ",(0,o.jsx)(t.a,{href:"../../cli/coverage/",children:"coverage"})," command to identify code typed as ",(0,o.jsx)(t.code,{children:"empty"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(96540);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);