"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[3680],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var o=n(96540);const a={},s=o.createContext(a);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:t},e.children)}},30538:e=>{e.exports=JSON.parse('{"permalink":"/blog/2024/04/03/New-Flow-Language-Features-for-React","source":"@site/blog/2024-04-03-New-Flow-Language-Features-for-React.md","title":"New Flow Language Features for React","description":"Flow is excited to announce Component Syntax, adding first-class support for React primitives such as components and hooks to the Flow language. These features bring improved ergonomics, expressiveness, and static enforcement for many of the Rules of React.","date":"2024-04-03T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Alex Taylor & Jordan Brown","key":null,"page":null}],"frontMatter":{"title":"New Flow Language Features for React","short-title":"New Flow Language Features for React","author":"Alex Taylor & Jordan Brown","medium-link":"https://medium.com/flow-type/announcing-component-syntax-b6c5285660d0"},"unlisted":false,"nextItem":{"title":"Announcing Conditional Types","permalink":"/blog/2024/03/05/Announcing-Conditional-Types"}}')},93680:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var o=n(30538),a=n(74848),s=n(28453);const r={title:"New Flow Language Features for React","short-title":"New Flow Language Features for React",author:"Alex Taylor & Jordan Brown","medium-link":"https://medium.com/flow-type/announcing-component-syntax-b6c5285660d0"},c=void 0,i={authorsImageUrls:[void 0]},u=[];function l(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,a.jsx)(t.p,{children:"Flow is excited to announce Component Syntax, adding first-class support for React primitives such as components and hooks to the Flow language. These features bring improved ergonomics, expressiveness, and static enforcement for many of the Rules of React."})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);