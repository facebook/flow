"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[8441],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const c={},s=i.createContext(c);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},58441:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"lang/type-hierarchy","title":"Type Hierarchy","description":"Types in Flow form a hierarchy based on subtyping:","source":"@site/docs/lang/type-hierarchy.md","sourceDirName":"lang","slug":"/lang/type-hierarchy","permalink":"/en/docs/lang/type-hierarchy","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/flow/edit/main/website/docs/lang/type-hierarchy.md","tags":[],"version":"current","frontMatter":{"title":"Type Hierarchy","slug":"/lang/type-hierarchy"},"sidebar":"docsSidebar","previous":{"title":"Subsets & Subtypes","permalink":"/en/docs/lang/subtypes"},"next":{"title":"Type Variance","permalink":"/en/docs/lang/variance"}}');var c=t(74848),s=t(28453);const a={title:"Type Hierarchy",slug:"/lang/type-hierarchy"},o=void 0,r={},p=[];function y(e){const n={a:"a",code:"code",mermaid:"mermaid",p:"p",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:["Types in Flow form a hierarchy based on ",(0,c.jsx)(n.a,{href:"../subtypes",children:"subtyping"}),":"]}),"\n",(0,c.jsx)(n.mermaid,{value:'graph BT\n\nmixed -.- any\n\nsymbol --\x3e mixed\nnull --\x3e mixed\nmaybe["Maybe:\n  ?string"]\nmaybe --\x3e mixed\nnull --\x3e maybe\nvoid --\x3e maybe\nvoid --\x3e mixed\nstring --\x3e maybe\nstring --\x3e mixed\n\nunion["Union:\n  number | bigint"]\nnumber --\x3e union\nnumber --\x3e mixed\nunion --\x3e mixed\nbigint --\x3e mixed\nbigint --\x3e union\n\nboolean --\x3e mixed\ntrue --\x3e boolean\nfalse --\x3e boolean\n\nempty-interface["interface {}"] --\x3e mixed\nsome-interface["interface {prop: string}"] --\x3e empty-interface\nsomeclass["class A {prop: string}"] --\x3e some-interface\ninexact-empty-obj["Inexact empty object:\n  {...}"]\ninexact-empty-obj --\x3e empty-interface\ninexact-some-obj["Inexact object:\n  {prop: string, ...}"] --\x3e inexact-empty-obj\ninexact-some-obj --\x3e some-interface\nexact-some-obj["Exact object:\n  {prop: string}"] --\x3e inexact-some-obj\nexact-empty-obj["Exact empty object:\n  {}"]\nexact-empty-obj --\x3e inexact-empty-obj\nroarray-mixed["$ReadOnlyArray&lt;mixed>"] --\x3e empty-interface\ninexact-empty-tuple["Inexact empty tuple:\n  [...]"]\nsome-tuple["Tuple:\n  [string, number]"]\ninexact-empty-tuple --\x3e roarray-mixed\nsome-tuple --\x3e inexact-empty-tuple\nsome-array["Array&lt;string>"] --\x3e roarray-mixed\n\nany-func["Function:\n  (...$ReadOnlyArray&lt;empty>) => mixed"]\nany-func --\x3e empty-interface\nsome-func["(number) => boolean"] --\x3e any-func\nsome-func2["(string) => string"] --\x3e any-func\n\ninter["Intersection:\n  (number => boolean) & (string => string)"]\ninter --\x3e some-func\ninter --\x3e some-func2\n\nempty --\x3e inter\nempty --\x3e null\nempty --\x3e void\nempty --\x3e true\nempty --\x3e false\nempty --\x3e exact-some-obj\nempty --\x3e exact-empty-obj\nempty --\x3e some-tuple\nempty --\x3e some-array\nempty --\x3e string\nempty --\x3e number\nempty --\x3e bigint\nempty --\x3e someclass\nempty --\x3e symbol\nany-bottom["any"] -.- empty\n\nclick mixed "../../types/mixed"\nclick any "../../types/any"\nclick any-bottom "../../types/any"\nclick empty "../../types/empty"\nclick boolean "../../types/primitives/#toc-booleans"\nclick number "../../types/primitives/#toc-numbers"\nclick string "../../types/primitives/#toc-strings"\nclick symbol "../../types/primitives/#toc-symbols"\nclick bigint "../../types/primitives/#toc-bigints"\nclick null "../../types/primitives/#toc-null-and-void"\nclick void "../../types/primitives/#toc-null-and-void"\nclick true "../../types/literals"\nclick false "../../types/literals"\nclick union "../../types/unions"\nclick inter "../../types/intersections"\nclick maybe "../../types/maybe"\nclick some-array "../../types/arrays"\nclick roarray-mixed "../../types/arrays/#toc-readonlyarray"\nclick inexact-empty-tuple "../../types/tuples/#inexact-tuples"\nclick some-tuple "../../types/tuples"\nclick someclass "../../types/classes"\nclick empty-interface "../../types/interfaces"\nclick some-interface "../../types/interfaces"\nclick exact-some-obj "../../types/objects"\nclick exact-empty-obj "../../types/objects"\nclick inexact-some-obj "../../types/objects/#exact-and-inexact-object-types"\nclick inexact-empty-obj "../../types/objects/#exact-and-inexact-object-types"\nclick any-func "../../types/functions"\nclick some-func "../../types/functions"\nclick some-func2 "../../types/functions"\n\nclassDef default fill:#eee, stroke:#000, stroke-width:1px'}),"\n",(0,c.jsx)(n.p,{children:"Click on a node to go to the documentation for that type."}),"\n",(0,c.jsxs)(n.p,{children:["Types appearing higher in this graph are more general, while those appearing lower are more specific.\nAn arrow pointing from type ",(0,c.jsx)(n.code,{children:"A"})," to type ",(0,c.jsx)(n.code,{children:"B"})," means that ",(0,c.jsx)(n.code,{children:"A"})," is a subtype of ",(0,c.jsx)(n.code,{children:"B"}),".\nFor example, the type ",(0,c.jsx)(n.code,{children:"string"})," is a subtype of ",(0,c.jsx)(n.code,{children:"?string"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:["How can ",(0,c.jsx)(n.code,{children:"any"})," be at both the top and the bottom? Because ",(0,c.jsx)(n.a,{href:"../../types/any/",children:"it is unsafe"}),". This is denoted with a dotted line."]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(y,{...e})}):y(e)}}}]);