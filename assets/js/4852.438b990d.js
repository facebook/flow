"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[4852],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var o=n(96540);const r={},a=o.createContext(r);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:t},e.children)}},43755:e=>{e.exports=JSON.parse('{"permalink":"/blog/2015/11/09/Generators","source":"@site/blog/2015-11-09-Generators.md","title":"Typing Generators with Flow","description":"Flow 0.14.0 included support for generator functions. Generator functions provide a unique ability to JavaScript programs: the ability to suspend and resume execution. This kind of control paves the way for async/await, an upcoming feature already supported by Flow.","date":"2015-11-09T00:00:00.000Z","tags":[],"hasTruncateMarker":true,"authors":[{"name":"Sam Goldman","key":null,"page":null}],"frontMatter":{"title":"Typing Generators with Flow","short-title":"Generators","author":"Sam Goldman","hide_table_of_contents":true},"unlisted":false,"prevItem":{"title":"Version-0.19.0","permalink":"/blog/2015/12/01/Version-0.19.0"},"nextItem":{"title":"Version-0.17.0","permalink":"/blog/2015/10/07/Version-0.17.0"}}')},54852:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var o=n(43755),r=n(74848),a=n(28453);const s={title:"Typing Generators with Flow","short-title":"Generators",author:"Sam Goldman",hide_table_of_contents:!0},i=void 0,u={authorsImageUrls:[void 0]},c=[];function l(e){const t={a:"a",p:"p",...(0,a.R)(),...e.components};return(0,r.jsxs)(t.p,{children:["Flow 0.14.0 included support for generator functions. Generator functions provide a unique ability to JavaScript programs: the ability to suspend and resume execution. This kind of control paves the way for async/await, an ",(0,r.jsx)(t.a,{href:"https://github.com/tc39/ecmascript-asyncawait",children:"upcoming feature"})," already supported by Flow."]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);