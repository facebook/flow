- title: Quick Start
  items:
  - id: getting-started
    title: Getting started with Flow
  - id: five-simple-examples
    title: Five simple examples
- title: User Guide
  items:
  - id: new-project
    title: Starting a new Flow project
  - id: existing
    title: Running Flow on existing code
  - id: type-annotations
    title: Adding Type Annotations
  - id: third-party
    title: Checking third-party code
  - id: running
    title: Running Flow code
  - id: troubleshooting
    title: Troubleshooting
  - id: cli
    title: Using the CLI
  - id: advanced-configuration
    title: Advanced Configuration
- title: Quick Reference
  id: quick-reference
  headers:
  - ref: primitives
    title: Primitives
  - ref: any
    title: The <code>any</code> type
  - ref: mixed
    title: The <code>mixed</code> type
  - ref: arrays
    title: Arrays
  - ref: objects
    title: Objects
  - ref: functions
    title: Functions
  - ref: classes
    title: Classes
  - ref: type-aliases
    title: Type Aliases
  - ref: generics
    title: Generics
- title: Syntax
  id: syntax
  headers:
  - ref: stripping-flow-syntax
    title: Stripping Flow syntax
  - ref: comment-syntax
    title: Comment syntax
  - ref: variable-declarations
    title: Variable declarations
  - ref: function-declarations
    title: Function declarations
  - ref: class-declarations
    title: Class declarations
  - ref: type-aliases
    title: Type aliases
  - ref: object-types
    title: Object types
  - ref: function-types
    title: Function types
  - ref: array-types
    title: Array types
  - ref: interface-declarations
    title: Interface declarations
  - ref: importing-and-exporting-types
    title: Importing and exporting types
  - ref: destructured-bindings
    title: Destructured bindings
  - ref: typecasts
    title: Typecasts
- title: Language Reference
  items:
  - id: builtins
    title: Built-in Types
  - id: arrays
    title: Arrays and Tuples
  - id: classes
    title: Classes
  - id: objects
    title: Objects
  - id: functions
    title: Functions
  - id: nullable-types
    title: Maybe Types
  - id: destructuring
    title: Destructuring
  - id: type-aliases
    title: Type Aliases
  - id: union-intersection-types
    title: Union and Intersection Types
  - id: typeof
    title: Typeof types
  - id: dynamic-type-tests
    title: Dynamic Type Tests
  - id: disjoint-unions
    title: Disjoint Unions
  - id: modules
    title: Modules
  - id: declarations
    title: Declarations
  - id: react
    title: React
  - id: enums
    title: Enums
