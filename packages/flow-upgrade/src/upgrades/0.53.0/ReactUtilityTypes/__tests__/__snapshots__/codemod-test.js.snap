// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HiddenInSuperClassTypeArgs.js 1`] = `
"

class Buz {}
class Foo extends Bar<React$Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React$Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 2`] = `
"import * as React from 'react';

class Buz {}
class Foo extends Bar<React.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 3`] = `
"import React, {PropTypes} from 'react';

class Buz {}
class Foo extends Bar<React.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 4`] = `
"import * as CustomName from 'react';

class Buz {}
class Foo extends Bar<CustomName.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<CustomName.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 5`] = `
"import * as React from 'react';

class Buz {}
class Foo extends Bar<React.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 6`] = `
"import * as CustomName from 'react';

class Buz {}
class Foo extends Bar<CustomName.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<CustomName.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 7`] = `
"const React = require('react');

class Buz {}
class Foo extends Bar<React.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 8`] = `
"const React = require('React');

class Buz {}
class Foo extends Bar<React.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 9`] = `
"const CustomName = require('react');

class Buz {}
class Foo extends Bar<CustomName.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<CustomName.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 10`] = `
"const {PropTypes} = require('react');

class Buz {}
class Foo extends Bar<React$Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React$Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 11`] = `
"const React = require('react');
const {PropTypes} = require('react');

class Buz {}
class Foo extends Bar<React.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 12`] = `
"const {PropTypes} = require('react');
const React = require('react');

class Buz {}
class Foo extends Bar<React.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 13`] = `
"const React = require('react');
const {Element} = React;

class Buz {}
class Foo extends Bar<React.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React.Element<any>> {}
"
`;

exports[`HiddenInSuperClassTypeArgs.js 14`] = `
"const React = require('react');
import type {Element} from 'react';

class Buz {}
class Foo extends Bar<React.Element<any>> {}

const expression1 = () =>
  class {}

const expression2 = () =>
  class extends Bar<React.Element<any>> {}
"
`;

exports[`ReactClass.js 1`] = `
"

function create(): React$ComponentType<any> {}
"
`;

exports[`ReactClass.js 2`] = `
"import * as React from 'react';

function create(): React.ComponentType<any> {}
"
`;

exports[`ReactClass.js 3`] = `
"import React, {PropTypes} from 'react';

function create(): React.ComponentType<any> {}
"
`;

exports[`ReactClass.js 4`] = `
"import * as CustomName from 'react';

function create(): CustomName.ComponentType<any> {}
"
`;

exports[`ReactClass.js 5`] = `
"import * as React from 'react';

function create(): React.ComponentType<any> {}
"
`;

exports[`ReactClass.js 6`] = `
"import * as CustomName from 'react';

function create(): CustomName.ComponentType<any> {}
"
`;

exports[`ReactClass.js 7`] = `
"const React = require('react');

function create(): React.ComponentType<any> {}
"
`;

exports[`ReactClass.js 8`] = `
"const React = require('React');

function create(): React.ComponentType<any> {}
"
`;

exports[`ReactClass.js 9`] = `
"const CustomName = require('react');

function create(): CustomName.ComponentType<any> {}
"
`;

exports[`ReactClass.js 10`] = `
"const {PropTypes} = require('react');

function create(): React$ComponentType<any> {}
"
`;

exports[`ReactClass.js 11`] = `
"const React = require('react');
const {PropTypes} = require('react');

function create(): React.ComponentType<any> {}
"
`;

exports[`ReactClass.js 12`] = `
"const {PropTypes} = require('react');
const React = require('react');

function create(): React.ComponentType<any> {}
"
`;

exports[`ReactClass.js 13`] = `
"const React = require('react');
const {Element} = React;

function create(): React.ComponentType<any> {}
"
`;

exports[`ReactClass.js 14`] = `
"const React = require('react');
import type {Element} from 'react';

function create(): React.ComponentType<any> {}
"
`;

exports[`ReactComponent.js 1`] = `
"

(any: React$Component<Props, State>);
(any: React$Component<Props, State>);
(any: Component<DefaultProps, Props, State>);
(any: React.Component<DefaultProps, Props, State>);

// Should leave these alone.
(any: React$Component<Props>);
(any: React$Component<Props, State>);
"
`;

exports[`ReactComponent.js 2`] = `
"import * as React from 'react';

(any: React.Component<Props, State>);
(any: React.Component<Props, State>);
(any: Component<Props, State>);
(any: React.Component<Props, State>);

// Should leave these alone.
(any: React.Component<Props>);
(any: React.Component<Props, State>);
"
`;

exports[`ReactComponent.js 3`] = `
"import React, {PropTypes} from 'react';

(any: React.Component<Props, State>);
(any: React.Component<Props, State>);
(any: Component<Props, State>);
(any: React.Component<Props, State>);

// Should leave these alone.
(any: React.Component<Props>);
(any: React.Component<Props, State>);
"
`;

exports[`ReactComponent.js 4`] = `
"import * as CustomName from 'react';

(any: CustomName.Component<Props, State>);
(any: CustomName.Component<Props, State>);
(any: Component<Props, State>);
(any: CustomName.Component<Props, State>);

// Should leave these alone.
(any: CustomName.Component<Props>);
(any: CustomName.Component<Props, State>);
"
`;

exports[`ReactComponent.js 5`] = `
"import * as React from 'react';

(any: React.Component<Props, State>);
(any: React.Component<Props, State>);
(any: Component<Props, State>);
(any: React.Component<Props, State>);

// Should leave these alone.
(any: React.Component<Props>);
(any: React.Component<Props, State>);
"
`;

exports[`ReactComponent.js 6`] = `
"import * as CustomName from 'react';

(any: CustomName.Component<Props, State>);
(any: CustomName.Component<Props, State>);
(any: Component<Props, State>);
(any: CustomName.Component<Props, State>);

// Should leave these alone.
(any: CustomName.Component<Props>);
(any: CustomName.Component<Props, State>);
"
`;

exports[`ReactComponent.js 7`] = `
"const React = require('react');

(any: React.Component<Props, State>);
(any: React.Component<Props, State>);
(any: Component<Props, State>);
(any: React.Component<Props, State>);

// Should leave these alone.
(any: React.Component<Props>);
(any: React.Component<Props, State>);
"
`;

exports[`ReactComponent.js 8`] = `
"const React = require('React');

(any: React.Component<Props, State>);
(any: React.Component<Props, State>);
(any: Component<Props, State>);
(any: React.Component<Props, State>);

// Should leave these alone.
(any: React.Component<Props>);
(any: React.Component<Props, State>);
"
`;

exports[`ReactComponent.js 9`] = `
"const CustomName = require('react');

(any: CustomName.Component<Props, State>);
(any: CustomName.Component<Props, State>);
(any: Component<Props, State>);
(any: CustomName.Component<Props, State>);

// Should leave these alone.
(any: CustomName.Component<Props>);
(any: CustomName.Component<Props, State>);
"
`;

exports[`ReactComponent.js 10`] = `
"const {PropTypes} = require('react');

(any: React$Component<Props, State>);
(any: React$Component<Props, State>);
(any: Component<Props, State>);
(any: React$Component<Props, State>);

// Should leave these alone.
(any: React$Component<Props>);
(any: React$Component<Props, State>);
"
`;

exports[`ReactComponent.js 11`] = `
"const React = require('react');
const {PropTypes} = require('react');

(any: React.Component<Props, State>);
(any: React.Component<Props, State>);
(any: Component<Props, State>);
(any: React.Component<Props, State>);

// Should leave these alone.
(any: React.Component<Props>);
(any: React.Component<Props, State>);
"
`;

exports[`ReactComponent.js 12`] = `
"const {PropTypes} = require('react');
const React = require('react');

(any: React.Component<Props, State>);
(any: React.Component<Props, State>);
(any: Component<Props, State>);
(any: React.Component<Props, State>);

// Should leave these alone.
(any: React.Component<Props>);
(any: React.Component<Props, State>);
"
`;

exports[`ReactComponent.js 13`] = `
"const React = require('react');
const {Element} = React;

(any: React.Component<Props, State>);
(any: React.Component<Props, State>);
(any: Component<Props, State>);
(any: React.Component<Props, State>);

// Should leave these alone.
(any: React.Component<Props>);
(any: React.Component<Props, State>);
"
`;

exports[`ReactComponent.js 14`] = `
"const React = require('react');
import type {Element} from 'react';

(any: React.Component<Props, State>);
(any: React.Component<Props, State>);
(any: Component<Props, State>);
(any: React.Component<Props, State>);

// Should leave these alone.
(any: React.Component<Props>);
(any: React.Component<Props, State>);
"
`;

exports[`ReactComponentRenderReturn.js 1`] = `
"

class A extends React.Component {
  render(): React.Element<any> {}
}

class B extends React.Component {
  render(): React.Element<mixed> {}
}

class C extends React.Component {
  render(): React.Element<*> {}
}

class D extends React.Component {
  render(): React.Element<> {}
}

class E extends React.Component {
  render(): ?React.Element<any> {}
}

class F extends React.Component {
  render(): ?React.Element<mixed> {}
}

class G extends React.Component {
  render(): ?React.Element<*> {}
}

class H extends React.Component {
  render(): ?React$Element<any> {}
}

class I extends React.Component {
  render(): ?React$Element<React$ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): ?React$Element<any> {}
}

class K extends React.Component {
  render(): ?React.Element<Config> {}
}

class L extends React.Component {
  render(): ?React.Element<> {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 2`] = `
"import * as React from 'react';

class A extends React.Component {
  render(): React.Node {}
}

class B extends React.Component {
  render(): React.Element<React.ComponentType<mixed>> {}
}

class C extends React.Component {
  render(): React.Node {}
}

class D extends React.Component {
  render(): React.Node {}
}

class E extends React.Component {
  render(): React.Node {}
}

class F extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class G extends React.Component {
  render(): React.Node {}
}

class H extends React.Component {
  render(): React.Node {}
}

class I extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): React.Node {}
}

class K extends React.Component {
  render(): ?React.Element<React.ComponentType<Config>> {}
}

class L extends React.Component {
  render(): React.Node {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 3`] = `
"import React, {PropTypes} from 'react';

class A extends React.Component {
  render(): React.Node {}
}

class B extends React.Component {
  render(): React.Element<React.ComponentType<mixed>> {}
}

class C extends React.Component {
  render(): React.Node {}
}

class D extends React.Component {
  render(): React.Node {}
}

class E extends React.Component {
  render(): React.Node {}
}

class F extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class G extends React.Component {
  render(): React.Node {}
}

class H extends React.Component {
  render(): React.Node {}
}

class I extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): React.Node {}
}

class K extends React.Component {
  render(): ?React.Element<React.ComponentType<Config>> {}
}

class L extends React.Component {
  render(): React.Node {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 4`] = `
"import * as CustomName from 'react';

class A extends React.Component {
  render(): React.Element<any> {}
}

class B extends React.Component {
  render(): React.Element<mixed> {}
}

class C extends React.Component {
  render(): React.Element<*> {}
}

class D extends React.Component {
  render(): React.Element<> {}
}

class E extends React.Component {
  render(): ?React.Element<any> {}
}

class F extends React.Component {
  render(): ?React.Element<mixed> {}
}

class G extends React.Component {
  render(): ?React.Element<*> {}
}

class H extends React.Component {
  render(): CustomName.Node {}
}

class I extends React.Component {
  render(): ?CustomName.Element<CustomName.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): CustomName.Node {}
}

class K extends React.Component {
  render(): ?React.Element<Config> {}
}

class L extends React.Component {
  render(): ?React.Element<> {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 5`] = `
"import * as React from 'react';

class A extends React.Component {
  render(): React.Node {}
}

class B extends React.Component {
  render(): React.Element<React.ComponentType<mixed>> {}
}

class C extends React.Component {
  render(): React.Node {}
}

class D extends React.Component {
  render(): React.Node {}
}

class E extends React.Component {
  render(): React.Node {}
}

class F extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class G extends React.Component {
  render(): React.Node {}
}

class H extends React.Component {
  render(): React.Node {}
}

class I extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): React.Node {}
}

class K extends React.Component {
  render(): ?React.Element<React.ComponentType<Config>> {}
}

class L extends React.Component {
  render(): React.Node {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 6`] = `
"import * as CustomName from 'react';

class A extends React.Component {
  render(): React.Element<any> {}
}

class B extends React.Component {
  render(): React.Element<mixed> {}
}

class C extends React.Component {
  render(): React.Element<*> {}
}

class D extends React.Component {
  render(): React.Element<> {}
}

class E extends React.Component {
  render(): ?React.Element<any> {}
}

class F extends React.Component {
  render(): ?React.Element<mixed> {}
}

class G extends React.Component {
  render(): ?React.Element<*> {}
}

class H extends React.Component {
  render(): CustomName.Node {}
}

class I extends React.Component {
  render(): ?CustomName.Element<CustomName.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): CustomName.Node {}
}

class K extends React.Component {
  render(): ?React.Element<Config> {}
}

class L extends React.Component {
  render(): ?React.Element<> {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 7`] = `
"const React = require('react');

class A extends React.Component {
  render(): React.Node {}
}

class B extends React.Component {
  render(): React.Element<React.ComponentType<mixed>> {}
}

class C extends React.Component {
  render(): React.Node {}
}

class D extends React.Component {
  render(): React.Node {}
}

class E extends React.Component {
  render(): React.Node {}
}

class F extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class G extends React.Component {
  render(): React.Node {}
}

class H extends React.Component {
  render(): React.Node {}
}

class I extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): React.Node {}
}

class K extends React.Component {
  render(): ?React.Element<React.ComponentType<Config>> {}
}

class L extends React.Component {
  render(): React.Node {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 8`] = `
"const React = require('React');

class A extends React.Component {
  render(): React.Node {}
}

class B extends React.Component {
  render(): React.Element<React.ComponentType<mixed>> {}
}

class C extends React.Component {
  render(): React.Node {}
}

class D extends React.Component {
  render(): React.Node {}
}

class E extends React.Component {
  render(): React.Node {}
}

class F extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class G extends React.Component {
  render(): React.Node {}
}

class H extends React.Component {
  render(): React.Node {}
}

class I extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): React.Node {}
}

class K extends React.Component {
  render(): ?React.Element<React.ComponentType<Config>> {}
}

class L extends React.Component {
  render(): React.Node {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 9`] = `
"const CustomName = require('react');

class A extends React.Component {
  render(): React.Element<any> {}
}

class B extends React.Component {
  render(): React.Element<mixed> {}
}

class C extends React.Component {
  render(): React.Element<*> {}
}

class D extends React.Component {
  render(): React.Element<> {}
}

class E extends React.Component {
  render(): ?React.Element<any> {}
}

class F extends React.Component {
  render(): ?React.Element<mixed> {}
}

class G extends React.Component {
  render(): ?React.Element<*> {}
}

class H extends React.Component {
  render(): CustomName.Node {}
}

class I extends React.Component {
  render(): ?CustomName.Element<CustomName.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): CustomName.Node {}
}

class K extends React.Component {
  render(): ?React.Element<Config> {}
}

class L extends React.Component {
  render(): ?React.Element<> {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 10`] = `
"const {PropTypes} = require('react');

class A extends React.Component {
  render(): React.Element<any> {}
}

class B extends React.Component {
  render(): React.Element<mixed> {}
}

class C extends React.Component {
  render(): React.Element<*> {}
}

class D extends React.Component {
  render(): React.Element<> {}
}

class E extends React.Component {
  render(): ?React.Element<any> {}
}

class F extends React.Component {
  render(): ?React.Element<mixed> {}
}

class G extends React.Component {
  render(): ?React.Element<*> {}
}

class H extends React.Component {
  render(): ?React$Element<any> {}
}

class I extends React.Component {
  render(): ?React$Element<React$ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): ?React$Element<any> {}
}

class K extends React.Component {
  render(): ?React.Element<Config> {}
}

class L extends React.Component {
  render(): ?React.Element<> {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 11`] = `
"const React = require('react');
const {PropTypes} = require('react');

class A extends React.Component {
  render(): React.Node {}
}

class B extends React.Component {
  render(): React.Element<React.ComponentType<mixed>> {}
}

class C extends React.Component {
  render(): React.Node {}
}

class D extends React.Component {
  render(): React.Node {}
}

class E extends React.Component {
  render(): React.Node {}
}

class F extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class G extends React.Component {
  render(): React.Node {}
}

class H extends React.Component {
  render(): React.Node {}
}

class I extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): React.Node {}
}

class K extends React.Component {
  render(): ?React.Element<React.ComponentType<Config>> {}
}

class L extends React.Component {
  render(): React.Node {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 12`] = `
"const {PropTypes} = require('react');
const React = require('react');

class A extends React.Component {
  render(): React.Node {}
}

class B extends React.Component {
  render(): React.Element<React.ComponentType<mixed>> {}
}

class C extends React.Component {
  render(): React.Node {}
}

class D extends React.Component {
  render(): React.Node {}
}

class E extends React.Component {
  render(): React.Node {}
}

class F extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class G extends React.Component {
  render(): React.Node {}
}

class H extends React.Component {
  render(): React.Node {}
}

class I extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): React.Node {}
}

class K extends React.Component {
  render(): ?React.Element<React.ComponentType<Config>> {}
}

class L extends React.Component {
  render(): React.Node {}
}

class M extends React.Component {
  render(): Element<any> {}
}

class N extends React.Component {
  render(): ?Element<any> {}
}
"
`;

exports[`ReactComponentRenderReturn.js 13`] = `
"const React = require('react');
const {Element} = React;

class A extends React.Component {
  render(): React.Node {}
}

class B extends React.Component {
  render(): React.Element<React.ComponentType<mixed>> {}
}

class C extends React.Component {
  render(): React.Node {}
}

class D extends React.Component {
  render(): React.Node {}
}

class E extends React.Component {
  render(): React.Node {}
}

class F extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class G extends React.Component {
  render(): React.Node {}
}

class H extends React.Component {
  render(): React.Node {}
}

class I extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): React.Node {}
}

class K extends React.Component {
  render(): ?React.Element<React.ComponentType<Config>> {}
}

class L extends React.Component {
  render(): React.Node {}
}

class M extends React.Component {
  render(): React.Node {}
}

class N extends React.Component {
  render(): React.Node {}
}
"
`;

exports[`ReactComponentRenderReturn.js 14`] = `
"const React = require('react');
import type {Element} from 'react';

class A extends React.Component {
  render(): React.Node {}
}

class B extends React.Component {
  render(): React.Element<React.ComponentType<mixed>> {}
}

class C extends React.Component {
  render(): React.Node {}
}

class D extends React.Component {
  render(): React.Node {}
}

class E extends React.Component {
  render(): React.Node {}
}

class F extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class G extends React.Component {
  render(): React.Node {}
}

class H extends React.Component {
  render(): React.Node {}
}

class I extends React.Component {
  render(): ?React.Element<React.ComponentType<mixed>> {}
}

class J extends React.Component {
  render(): React.Node {}
}

class K extends React.Component {
  render(): ?React.Element<React.ComponentType<Config>> {}
}

class L extends React.Component {
  render(): React.Node {}
}

class M extends React.Component {
  render(): React.Node {}
}

class N extends React.Component {
  render(): React.Node {}
}
"
`;

exports[`ReactElement.js 1`] = `
"

(any: React$Element<React$ComponentType<Config>>);
(any: React$Element<React$ComponentType<Props>>);
(any: React$Element<any>);
(any: React$Element<React$ComponentType<mixed>>);
(any: React$Element<any>);
(any: React$Element<any>);
(any: React$Element<any>);

(any: React$Element<React$ComponentType<Config>>);
(any: React$Element<React$ComponentType<Props>>);
(any: React$Element<any>);
(any: React$Element<React$ComponentType<mixed>>);
(any: React$Element<any>);
(any: React$Element<any>);
(any: React$Element<any>);

(any: React.Element<Config>);
(any: React.Element<Props>);
(any: React.Element<any>);
(any: React.Element<mixed>);
(any: React.Element<*>);
(any: React.Element<>);
(any: React.Element);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 2`] = `
"import * as React from 'react';

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 3`] = `
"import React, {PropTypes} from 'react';

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 4`] = `
"import * as CustomName from 'react';

(any: CustomName.Element<CustomName.ComponentType<Config>>);
(any: CustomName.Element<CustomName.ComponentType<Props>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<CustomName.ComponentType<mixed>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);

(any: CustomName.Element<CustomName.ComponentType<Config>>);
(any: CustomName.Element<CustomName.ComponentType<Props>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<CustomName.ComponentType<mixed>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);

(any: React.Element<Config>);
(any: React.Element<Props>);
(any: React.Element<any>);
(any: React.Element<mixed>);
(any: React.Element<*>);
(any: React.Element<>);
(any: React.Element);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 5`] = `
"import * as React from 'react';

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 6`] = `
"import * as CustomName from 'react';

(any: CustomName.Element<CustomName.ComponentType<Config>>);
(any: CustomName.Element<CustomName.ComponentType<Props>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<CustomName.ComponentType<mixed>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);

(any: CustomName.Element<CustomName.ComponentType<Config>>);
(any: CustomName.Element<CustomName.ComponentType<Props>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<CustomName.ComponentType<mixed>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);

(any: React.Element<Config>);
(any: React.Element<Props>);
(any: React.Element<any>);
(any: React.Element<mixed>);
(any: React.Element<*>);
(any: React.Element<>);
(any: React.Element);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 7`] = `
"const React = require('react');

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 8`] = `
"const React = require('React');

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 9`] = `
"const CustomName = require('react');

(any: CustomName.Element<CustomName.ComponentType<Config>>);
(any: CustomName.Element<CustomName.ComponentType<Props>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<CustomName.ComponentType<mixed>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);

(any: CustomName.Element<CustomName.ComponentType<Config>>);
(any: CustomName.Element<CustomName.ComponentType<Props>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<CustomName.ComponentType<mixed>>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);
(any: CustomName.Element<any>);

(any: React.Element<Config>);
(any: React.Element<Props>);
(any: React.Element<any>);
(any: React.Element<mixed>);
(any: React.Element<*>);
(any: React.Element<>);
(any: React.Element);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 10`] = `
"const {PropTypes} = require('react');

(any: React$Element<React$ComponentType<Config>>);
(any: React$Element<React$ComponentType<Props>>);
(any: React$Element<any>);
(any: React$Element<React$ComponentType<mixed>>);
(any: React$Element<any>);
(any: React$Element<any>);
(any: React$Element<any>);

(any: React$Element<React$ComponentType<Config>>);
(any: React$Element<React$ComponentType<Props>>);
(any: React$Element<any>);
(any: React$Element<React$ComponentType<mixed>>);
(any: React$Element<any>);
(any: React$Element<any>);
(any: React$Element<any>);

(any: React.Element<Config>);
(any: React.Element<Props>);
(any: React.Element<any>);
(any: React.Element<mixed>);
(any: React.Element<*>);
(any: React.Element<>);
(any: React.Element);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 11`] = `
"const React = require('react');
const {PropTypes} = require('react');

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 12`] = `
"const {PropTypes} = require('react');
const React = require('react');

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: Element<Config>);
(any: Element<Props>);
(any: Element<any>);
(any: Element<mixed>);
(any: Element<*>);
(any: Element<>);
(any: Element);
"
`;

exports[`ReactElement.js 13`] = `
"const React = require('react');
const {Element} = React;

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);
"
`;

exports[`ReactElement.js 14`] = `
"const React = require('react');
import type {Element} from 'react';

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);

(any: React.Element<React.ComponentType<Config>>);
(any: React.Element<React.ComponentType<Props>>);
(any: React.Element<any>);
(any: React.Element<React.ComponentType<mixed>>);
(any: React.Element<any>);
(any: React.Element<any>);
(any: React.Element<any>);
"
`;

exports[`ReactNodeWithTypeArgs.js 1`] = `
"

class X {
  render(): ?React$Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 2`] = `
"import * as React from 'react';

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 3`] = `
"import React, {PropTypes} from 'react';

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 4`] = `
"import * as CustomName from 'react';

class X {
  render(): ?CustomName.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 5`] = `
"import * as React from 'react';

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 6`] = `
"import * as CustomName from 'react';

class X {
  render(): ?CustomName.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 7`] = `
"const React = require('react');

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 8`] = `
"const React = require('React');

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 9`] = `
"const CustomName = require('react');

class X {
  render(): ?CustomName.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 10`] = `
"const {PropTypes} = require('react');

class X {
  render(): ?React$Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 11`] = `
"const React = require('react');
const {PropTypes} = require('react');

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 12`] = `
"const {PropTypes} = require('react');
const React = require('react');

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 13`] = `
"const React = require('react');
const {Element} = React;

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithTypeArgs.js 14`] = `
"const React = require('react');
import type {Element} from 'react';

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 1`] = `
"

class X {
  render(): ?React$Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 2`] = `
"import * as React from 'react';

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 3`] = `
"import React, {PropTypes} from 'react';

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 4`] = `
"import * as CustomName from 'react';

class X {
  render(): ?CustomName.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 5`] = `
"import * as React from 'react';

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 6`] = `
"import * as CustomName from 'react';

class X {
  render(): ?CustomName.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 7`] = `
"const React = require('react');

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 8`] = `
"const React = require('React');

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 9`] = `
"const CustomName = require('react');

class X {
  render(): ?CustomName.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 10`] = `
"const {PropTypes} = require('react');

class X {
  render(): ?React$Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 11`] = `
"const React = require('react');
const {PropTypes} = require('react');

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 12`] = `
"const {PropTypes} = require('react');
const React = require('react');

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 13`] = `
"const React = require('react');
const {Element} = React;

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`ReactNodeWithoutTypeArgs.js 14`] = `
"const React = require('react');
import type {Element} from 'react';

class X {
  render(): ?React.Node {
    return null;
  }
}
"
`;

exports[`SyntheticEvent.js 1`] = `
"

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 2`] = `
"import * as React from 'react';

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 3`] = `
"import React, {PropTypes} from 'react';

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 4`] = `
"import * as CustomName from 'react';

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 5`] = `
"import * as React from 'react';

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 6`] = `
"import * as CustomName from 'react';

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 7`] = `
"const React = require('react');

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 8`] = `
"const React = require('React');

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 9`] = `
"const CustomName = require('react');

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 10`] = `
"const {PropTypes} = require('react');

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 11`] = `
"const React = require('react');
const {PropTypes} = require('react');

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 12`] = `
"const {PropTypes} = require('react');
const React = require('react');

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 13`] = `
"const React = require('react');
const {Element} = React;

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;

exports[`SyntheticEvent.js 14`] = `
"const React = require('react');
import type {Element} from 'react';

class MyComponent {
  onEvent = (event: SyntheticEvent<>) => console.log('yo');
  onAnimationEvent = (event: SyntheticAnimationEvent<>) => console.log('yo');
  onClipboardEvent = (event: SyntheticClipboardEvent<>) => console.log('yo');
  onCompositionEvent = (event: SyntheticCompositionEvent<>) => console.log('yo');
  onInputEvent = (event: SyntheticInputEvent<>) => console.log('yo');
  onUIEvent = (event: SyntheticUIEvent<>) => console.log('yo');
  onFocusEvent = (event: SyntheticFocusEvent<>) => console.log('yo');
  onKeyboardEvent = (event: SyntheticKeyboardEvent<>) => console.log('yo');
  onMouseEvent = (event: SyntheticMouseEvent<>) => console.log('yo');
  onDragEvent = (event: SyntheticDragEvent<>) => console.log('yo');
  onWheelEvent = (event: SyntheticWheelEvent<>) => console.log('yo');
  onTouchEvent = (event: SyntheticTouchEvent<>) => console.log('yo');
  onTransitionEvent = (event: SyntheticTransitionEvent<>) => console.log('yo');
  onNopeEvent = (event: SyntheticNopeEvent) => console.log('nope');
}
"
`;
