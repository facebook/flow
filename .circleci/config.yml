aliases:
  - &opam_env
    TERM: dumb
    OPAMYES: true

  - &docker_opam
    docker:
      - image: ocaml/opam:debian-8_ocaml-4.05.0
        environment:
          <<: *opam_env
    working_directory: ~/flow

  - &docker_node
    docker:
      - image: circleci/node:8
    working_directory: ~/flow

  - &opam_deps
    name: Install deps from opam
    command: |
      eval $(opam config env)
      opam pin add -n flowtype-ci . | cat
      opam depext flowtype-ci | cat
      opam install --deps-only flowtype-ci | cat

  - &restore_opam_cache
    keys:
      - opam-cache-{{ arch }}-opam_1_2_2-ocaml_4_05_0-{{ checksum "opam" }}
      - opam-cache-{{ arch }}-opam_1_2_2-ocaml_4_05_0
      - opam-cache-{{ arch }}-opam_1_2_2

  - &save_opam_cache
    key: opam-cache-{{ arch }}-opam_1_2_2-ocaml_4_05_0-{{ checksum "opam" }}
    paths:
      - ~/.opam

  - &run_on_tags
    filters:
      tags:
        only: /.*/

version: 2
jobs:
  checkout:
    <<: *docker_node
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: .

  build_linux:
    <<: *docker_opam
    steps:
      - attach_workspace:
          at: ~/flow
      - run:
          # TODO: move this to a custom docker image
          name: Install deps
          command: sudo apt-get update && sudo apt-get install zip
      - restore_cache: *restore_opam_cache
      - run:
          name: Update opam repo
          command: |
            opam remote list -s | grep upstream >/dev/null || \
              opam remote add upstream https://opam.ocaml.org | cat
            opam update | cat
      - run: *opam_deps
      - run:
          name: Install extra deps from opam
          command: opam install js_of_ocaml.3.1.0 | cat
      - save_cache: *save_opam_cache
      - run:
          name: Build flow
          command: opam config exec -- make
      - run:
          name: Build libflowparser
          command: opam config exec -- make -C src/parser dist/libflowparser.zip
      - run:
          name: Build flow.js
          command: opam config exec -- make js
      - run:
          name: Build flow_parser.js
          command: opam config exec -- make -C src/parser js
      - run:
          name: Create artifacts
          command: |
            mkdir -p bin/linux && cp bin/flow bin/linux/flow
            opam config exec -- make dist/flow.zip
            cp dist/flow.zip dist/flow-linux64.zip
            cp src/parser/dist/libflowparser.zip dist/libflowparser-linux64.zip
            cp src/parser/flow_parser.js dist/flow_parser.js
      - persist_to_workspace:
          root: .
          paths:
            - bin/linux/flow
            - bin/flow.js
            - dist/flow-linux64.zip
            - dist/libflowparser-linux64.zip
            - dist/flow_parser.js
      - store_artifacts:
          path: dist/flow-linux64.zip
          destination: flow-linux64.zip
      - store_artifacts:
          path: dist/libflowparser-linux64.zip
          destination: libflowparser-linux64.zip
      - store_artifacts:
          path: bin/flow.js
          destination: flow.js
      - store_artifacts:
          path: dist/flow_parser.js
          destination: flow_parser.js

  build_macos:
    macos:
      xcode: "9.0"
    environment:
      <<: *opam_env
    working_directory: ~/flow
    steps:
      - attach_workspace:
          at: ~/flow
      - restore_cache:
          keys:
            - brew-cache-{{ arch }}-v2
      - run:
          name: Install opam
          command: command -v opam || brew install opam aspcud
      - save_cache:
          key: brew-cache-{{ arch }}-v2
          paths:
            - /usr/local/bin/opam
            - /usr/local/bin/aspcud
      - restore_cache: *restore_opam_cache
      - run:
          name: Install ocaml
          command: opam init --comp 4.05.0 -yn | cat
      - save_cache:
          key: opam-cache-{{ arch }}-opam_1_2_2-ocaml_4_05_0
          paths:
            - ~/.opam
      - run:
          name: Update opam repo
          command: opam update | cat
      - run: *opam_deps
      - save_cache: *save_opam_cache
      - run:
          name: Build flow
          command: opam config exec -- make
      - run:
          name: Build libflowparser
          command: opam config exec -- make -C src/parser dist/libflowparser.zip
      - run:
          name: Create artifacts
          command: |
            mkdir -p bin/macos && cp bin/flow bin/macos/flow
            opam config exec -- make dist/flow.zip
            cp dist/flow.zip dist/flow-osx.zip
            cp src/parser/dist/libflowparser.zip dist/libflowparser-osx.zip
      - persist_to_workspace:
          root: .
          paths:
            - bin/macos/flow
            - dist/flow-osx.zip
            - dist/libflowparser-osx.zip
      - store_artifacts:
          path: dist/flow-osx.zip
          destination: flow-osx.zip
      - store_artifacts:
          path: src/parser/dist/libflowparser.zip
          destination: libflowparser-osx.zip

  runtests_linux:
    <<: *docker_node
    steps:
      - attach_workspace:
          at: ~/flow
      - run:
          name: Run tests
          command: ./runtests.sh bin/linux/flow | cat

  runtests_macos:
    macos:
      xcode: "9.0"
    working_directory: ~/flow
    steps:
      - attach_workspace:
          at: ~/flow
      - run:
          name: Run tests
          command: ./runtests.sh bin/macos/flow | cat

  tool_test_linux:
    <<: *docker_node
    steps:
      - attach_workspace:
          at: ~/flow
      - run:
          name: Install tool deps from yarn
          command: (cd packages/flow-dev-tools && yarn install | cat) # Force no tty mode
      - run:
          name: Run tool tests
          command: ./tool test -p 4 --bin bin/linux/flow | cat # Limit parallelism

  tool_test_macos:
    macos:
      xcode: "9.0"
    working_directory: ~/flow
    steps:
      - attach_workspace:
          at: ~/flow
      - run:
          name: Install tool deps from yarn
          command: (cd packages/flow-dev-tools && yarn install | cat) # Force no tty mode
      - run:
          name: Run tool tests
          command: ./tool test --bin bin/macos/flow | cat

  github_linux:
    docker:
      - image: appropriate/curl:latest
    working_directory: /flow
    steps:
    - attach_workspace:
        at: /flow
    - run:
        name: Upload Linux binary
        command: .circleci/github_upload.sh dist/flow-linux64.zip "flow-linux64-$CIRCLE_TAG.zip"
    - run:
        name: Upload Linux libflowparser
        command: .circleci/github_upload.sh dist/libflowparser-linux64.zip "libflowparser-linux64-$CIRCLE_TAG.zip"

  github_macos:
    docker:
      - image: appropriate/curl:latest
    working_directory: /flow
    steps:
    - attach_workspace:
        at: /flow
    - run:
        name: Upload Mac binary
        command: .circleci/github_upload.sh dist/flow-osx.zip "flow-osx-$CIRCLE_TAG.zip"
    - run:
        name: Upload Mac libflowparser
        command: .circleci/github_upload.sh dist/libflowparser-osx.zip "libflowparser-osx-$CIRCLE_TAG.zip"

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout:
          <<: *run_on_tags
      - build_linux:
          <<: *run_on_tags
          requires:
            - checkout
      - build_macos:
          <<: *run_on_tags
          requires:
            - checkout
      - runtests_linux:
          <<: *run_on_tags
          requires:
            - build_linux
      - runtests_macos:
          <<: *run_on_tags
          requires:
            - build_macos
      - tool_test_linux:
          <<: *run_on_tags
          requires:
            - build_linux
      - tool_test_macos:
          <<: *run_on_tags
          requires:
            - build_macos
      - github_linux:
          requires:
            - runtests_linux
            - tool_test_linux
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - github_macos:
          requires:
            - runtests_macos
            - tool_test_macos
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
