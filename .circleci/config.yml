version: 2.1

aliases:
  - &opam_env
    TERM: dumb
    OPAMYES: true

  - &run_on_release_tags
    filters:
      tags:
        only: /^v.*/
      branches:
        ignore: /.*/

orbs:
  win: circleci/windows@2.4.0

  opam_windows:
    commands:
      install:
        steps:
          - run:
              name: Install dependencies
              command: .\scripts\windows\install_deps.ps1
          - run:
              name: Install opam
              command: .\scripts\windows\install_opam.ps1

executors:
  linux-opam:
    docker:
      - image: flowtype/flow-ci:linux-x86_64
        environment:
          <<: *opam_env
    working_directory: ~/flow
  linux-arm64:
    docker:
      - image: flowtype/flow-ci:linux-arm64
        environment:
          <<: *opam_env
    resource_class: arm.medium
    working_directory: ~/flow
  linux-node:
    docker:
      - image: circleci/node:12
    working_directory: ~/flow
  mac:
    macos:
      xcode: "13.4"
    environment:
      <<: *opam_env
    working_directory: ~/flow
  mac-arm64:
    macos:
      xcode: "14.2.0"
    environment:
      <<: *opam_env
    working_directory: ~/flow
  curl:
    docker:
      - image: appropriate/curl:latest
    working_directory: /flow
  flow-website:
    docker:
      - image: ghcr.io/facebook/flow-website:latest
    working_directory: ~/flow

commands:
  install-opam-mac:
    parameters:
      arch:
        type: string
    steps:
      - run:
          name: Install opam
          command: |
            if ! [ -x "$(command -v opam)" ]; then
              TMP=${TMPDIR:-/tmp}
              curl -sL -o "$TMP/opam" "https://github.com/ocaml/opam/releases/download/2.0.10/opam-2.0.10-<<parameters.arch>>-macos"
              install -m 755 "$TMP/opam" "/usr/local/bin/opam"
              rm -f "$TMP/opam"
            fi

  make-opam-cachebreaker:
    steps:
      - run:
          name: Create cache breaker
          command: |
            .circleci/make_opam_cachebreaker.sh > .circleci/opamcachebreaker

  restore-opam-cache:
    steps:
      - restore_cache:
          keys:
          - v1-opam-cache-{{ arch }}-{{ checksum ".circleci/opamcachebreaker" }}

  save-opam-cache:
    steps:
      - run:
          name: Preparing opam cache
          command: touch ~/.opam/from_cache
      - save_cache:
          key: v1-opam-cache-{{ arch }}-{{ checksum ".circleci/opamcachebreaker" }}
          paths:
            - ~/.opam
            - _opam

  create-opam-switch:
    steps:
      - run:
          name: Install deps from opam
          command: make deps

jobs:
  checkout:
    executor: linux-node
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: .

  build_js:
    executor: linux-opam
    steps:
      - attach_workspace:
          at: ~/flow
      - make-opam-cachebreaker
      - restore-opam-cache
      - run:
          name: Init opam
          command: .circleci/opam_init.sh
      - create-opam-switch
      - run:
          name: Install extra deps from opam
          command: make deps-js
      - save-opam-cache
      - run:
          name: Build flow.js
          command: opam exec -- make js
      - run:
          name: Build flow_parser.js
          command: opam exec -- make -C src/parser js
      - run:
          name: Create artifacts
          command: |
            mkdir -p dist
            cp src/parser/flow_parser.js dist/flow_parser.js
            cp src/parser/flow_parser.js packages/flow-parser/flow_parser.js
      - persist_to_workspace:
          root: .
          paths:
            - bin/flow.js
            - dist/flow_parser.js
            - packages/flow-parser/flow_parser.js
      - store_artifacts:
          path: bin/flow.js
          destination: flow.js
      - store_artifacts:
          path: dist/flow_parser.js
          destination: flow_parser.js

  build_linux:
    executor: linux-opam
    steps:
      - attach_workspace:
          at: ~/flow
      - make-opam-cachebreaker
      - restore-opam-cache
      - run:
          name: Init opam
          command: .circleci/opam_init.sh
      - create-opam-switch
      - run:
          name: Install extra deps from opam
          command: make deps-js
      - save-opam-cache
      - run:
          name: Build flow
          command: |
            opam exec -- make bin/flow dist/flow.zip
            mkdir -p bin/linux && cp bin/flow bin/linux/flow
      - run:
          name: Build libflowparser
          command: opam exec -- make -C src/parser dist/libflowparser.zip
      - run:
          name: Create artifacts
          command: |
            cp dist/flow.zip dist/flow-linux64.zip
            cp src/parser/dist/libflowparser.zip dist/libflowparser-linux64.zip
      - persist_to_workspace:
          root: .
          paths:
            - bin/linux/flow
            - dist/flow-linux64.zip
            - dist/libflowparser-linux64.zip
      - store_artifacts:
          path: dist/flow-linux64.zip
          destination: flow-linux64.zip
      - store_artifacts:
          path: dist/libflowparser-linux64.zip
          destination: libflowparser-linux64.zip

  build_linux_arm64:
    executor: linux-arm64
    steps:
      - attach_workspace:
          at: ~/flow
      - make-opam-cachebreaker
      - restore-opam-cache
      - run:
          name: Init opam
          command: .circleci/opam_init.sh
      - run:
          name: Install opam deps
          command: make deps
      - save-opam-cache
      - run:
          name: Build flow
          command: |
            opam exec -- make bin/flow dist/flow.zip
            mkdir -p bin/linux-arm64 && cp bin/flow bin/linux-arm64/flow
      - run:
          name: Build libflowparser
          command: opam exec -- make -C src/parser dist/libflowparser.zip
      - run:
          name: Create artifacts
          command: |
            cp dist/flow.zip dist/flow-linux-arm64.zip
            cp src/parser/dist/libflowparser.zip dist/libflowparser-linux-arm64.zip
      - persist_to_workspace:
          root: .
          paths:
            - bin/linux-arm64/flow
            - dist/flow-linux-arm64.zip
            - dist/libflowparser-linux-arm64.zip
      - store_artifacts:
          path: dist/flow-linux-arm64.zip
          destination: flow-linux-arm64.zip
      - store_artifacts:
          path: dist/libflowparser-linux-arm64.zip
          destination: libflowparser-linux-arm64.zip

  build_macos:
    executor: mac
    steps:
      - attach_workspace:
          at: ~/flow
      - run:
          name: Update curl cacerts
          command: |
            echo "cacert /Users/$USER/flow/.circleci/cacert.pem" >> ~/.curlrc
      - install-opam-mac:
          arch: x86_64
      - make-opam-cachebreaker
      - restore-opam-cache
      - run:
          name: Init opam
          command: .circleci/opam_init.sh
      - create-opam-switch
      - save-opam-cache
      - run:
          name: Build flow
          command: |
            opam exec -- make bin/flow dist/flow.zip
            mkdir -p bin/macos && cp bin/flow bin/macos/flow
      - run:
          name: Build libflowparser
          command: opam exec -- make -C src/parser dist/libflowparser.zip
      - run:
          name: Create artifacts
          command: |
            cp dist/flow.zip dist/flow-osx.zip
            cp src/parser/dist/libflowparser.zip dist/libflowparser-osx.zip
      - persist_to_workspace:
          root: .
          paths:
            - bin/macos/flow
            - dist/flow-osx.zip
            - dist/libflowparser-osx.zip
      - store_artifacts:
          path: dist/flow-osx.zip
          destination: flow-osx.zip
      - store_artifacts:
          path: src/parser/dist/libflowparser.zip
          destination: libflowparser-osx.zip

  build_macos_arm64:
    executor: mac-arm64
    resource_class: macos.m1.large.gen1
    steps:
      - attach_workspace:
          at: ~/flow
      - run:
          name: Update curl cacerts
          command: |
            echo "cacert /Users/$USER/flow/.circleci/cacert.pem" >> ~/.curlrc
      - install-opam-mac:
          arch: arm64
      - make-opam-cachebreaker
      - restore-opam-cache
      - run:
          name: Init opam
          command: .circleci/opam_init.sh
      - create-opam-switch
      - save-opam-cache
      - run:
          name: Build flow
          command: |
            opam exec -- make bin/flow dist/flow.zip
            mkdir -p bin/macos-arm64 && cp bin/flow bin/macos-arm64/flow
      - run:
          name: Build libflowparser
          command: opam exec -- make -C src/parser dist/libflowparser.zip
      - run:
          name: Create artifacts
          command: |
            cp dist/flow.zip dist/flow-osx-arm64.zip
            cp src/parser/dist/libflowparser.zip dist/libflowparser-osx-arm64.zip
      - persist_to_workspace:
          root: .
          paths:
            - bin/macos-arm64/flow
            - dist/flow-osx-arm64.zip
            - dist/libflowparser-osx-arm64.zip
      - store_artifacts:
          path: dist/flow-osx-arm64.zip
          destination: flow-osx-arm64.zip
      - store_artifacts:
          path: src/parser/dist/libflowparser-osx-arm64.zip
          destination: libflowparser-osx-arm64.zip

  build_win:
    executor:
      name: win/default
      size: large
    environment:
      - FLOW_TMP_DIR: 'C:\tmp\flow'
      - OPAMDOWNLOADJOBS: 1
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Set up workspace
          command: |
            New-Item -ItemType Directory $Env:FLOW_TMP_DIR
      - opam_windows/install
      - run:
          name: Create cache breaker
          shell: C:/tools/cygwin/bin/bash.exe -leo pipefail
          command: |
            cd "$CIRCLE_WORKING_DIRECTORY"
            /usr/bin/make print-switch > /cygdrive/c/tmp/flow/opamcachebreaker
            /usr/local/bin/opam --version >> /cygdrive/c/tmp/flow/opamcachebreaker
            /usr/bin/cat flowtype.opam >> /cygdrive/c/tmp/flow/opamcachebreaker
            /usr/bin/cat flow_parser.opam >> /cygdrive/c/tmp/flow/opamcachebreaker
            /usr/bin/cat .circleci/config.yml >> /cygdrive/c/tmp/flow/opamcachebreaker
      - restore_cache:
          keys:
          - opam-cache-{{ arch }}-{{ checksum "C:/tmp/flow/opamcachebreaker" }}
      - run:
          name: Init opam
          shell: C:/tools/cygwin/bin/bash.exe -leo pipefail
          command: |
            opam init default 'https://github.com/ocaml-opam/opam-repository-mingw.git#opam2' --bare --disable-sandboxing --no-setup
      - run:
          name: Create opam switch
          shell: C:/tools/cygwin/bin/bash.exe -leo pipefail
          environment:
            PATH: /usr/local/bin:/usr/bin:/cygdrive/c/Windows/system32:/cygdrive/c/Windows:/cygdrive/c/Windows/System32/Wbem:/cygdrive/c/Windows/System32/WindowsPowerShell/v1.0
          command: |
             cd "$CIRCLE_WORKING_DIRECTORY"
             make deps
      - save_cache:
          key: opam-cache-{{ arch }}-{{ checksum "C:/tmp/flow/opamcachebreaker" }}
          paths:
            - C:/tools/cygwin/home/circleci/.opam
            - _opam
      - run:
          name: Build flow.exe
          shell: C:/tools/cygwin/bin/bash.exe -leo pipefail
          environment:
            PATH: /usr/local/bin:/usr/bin:/cygdrive/c/Windows/system32:/cygdrive/c/Windows:/cygdrive/c/Windows/System32/Wbem:/cygdrive/c/Windows/System32/WindowsPowerShell/v1.0
          command: |
             cd "$CIRCLE_WORKING_DIRECTORY"
             eval $(opam env)
             make bin/flow.exe dist/flow.zip
             mkdir -p bin/win64 && cp bin/flow.exe bin/win64/flow.exe
             cp dist/flow.zip dist/flow-win64.zip
      - run:
          name: Build parser test runner
          shell: C:/tools/cygwin/bin/bash.exe -leo pipefail
          environment:
            PATH: /usr/local/bin:/usr/bin:/cygdrive/c/Windows/system32:/cygdrive/c/Windows:/cygdrive/c/Windows/System32/Wbem:/cygdrive/c/Windows/System32/WindowsPowerShell/v1.0
          command: |
            cd "$CIRCLE_WORKING_DIRECTORY"
            eval $(opam env)
            dune build src/parser/test/run_tests.exe
            cp _build/default/src/parser/test/run_tests.exe bin/win64/run_parser_tests.exe
      - persist_to_workspace:
          root: .
          paths:
            - bin/win64/flow.exe
            - dist/flow-win64.zip
            - bin/win64/run_parser_tests.exe
      - store_artifacts:
          path: .\dist\flow-win64.zip
          destination: flow-win64.zip

workflows:
  build_and_test:
    jobs:
      - checkout

  build_and_deploy:
    jobs:
      - checkout:
          <<: *run_on_release_tags
