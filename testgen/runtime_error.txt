//===================
var v_5 = {p_0 : 1.1}
f8(v_5);
assert_type(v_5.p_0, 1.1);
function f8(param  : {p_0 : number | string}) : void {
assert_type(param, {p_0 : [1.1, "foo"]});

param.p_0 = "foo";
}

/*
Env:
{p_0 : number}
v_5 : {p_0 : number}
{p_0 : 1.1} : {p_0 : number}
{p_0 : number | string}
number | string
string
"foo" : string
v_5.p_0 : number
void
f8(v_5) : void
({p_0 : number | string}) => void
f8 : ({p_0 : number | string}) => void
1.1 : number
number
*/



/*
Error: 
Failed to run program:
Not equal: Actual : foo != Expected: 1.1

*/
//===================
var v_20 = {p_0 : "foo"}
f17(v_20);
assert_type(v_20.p_0, "foo");
function f17(param  : {p_0 : string | number}) : void {
assert_type(param, {p_0 : ["foo", 1.1]});

param.p_0 = 1.1;
}

/*
Env:
{p_0 : string}
v_20 : {p_0 : string}
{p_0 : "foo"} : {p_0 : string}
{p_0 : string | number}
string | number
v_20.p_0 : string
void
f17(v_20) : void
({p_0 : string | number}) => void
f17 : ({p_0 : string | number}) => void
1.1 : number
number
"foo" : string
string
*/



/*
Error: 
Failed to run program:
Not equal: Actual : 1.1 != Expected: foo

*/
//===================
var v_23 = {p_0 : 1.1}
f24(v_23);
assert_type(v_23.p_0, 1.1);
function f24(param  : {p_0 : string | number}) : void {
assert_type(param, {p_0 : ["foo", 1.1]});

param.p_0 = "foo";
}

/*
Env:
{p_0 : number}
v_23 : {p_0 : number}
{p_0 : 1.1} : {p_0 : number}
{p_0 : string | number}
string | number
string
"foo" : string
v_23.p_0 : number
void
f24(v_23) : void
({p_0 : string | number}) => void
f24 : ({p_0 : string | number}) => void
1.1 : number
number
*/



/*
Error: 
Failed to run program:
Not equal: Actual : foo != Expected: 1.1

*/
// 3 runtime errors written to runtime_error.txt

